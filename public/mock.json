[
  {
    "url": "/issue/gitcoinco/sxsw/2",
    "created_on": "2018-03-12T15:57:52.999959-07:00",
    "modified_on": "2018-03-14T07:30:30.323406-07:00",
    "title": "SXSW hackathon - Build A Bounties Platform",
    "web3_created": "2018-03-12T08:50:02-07:00",
    "value_in_token": "700000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/gitcoinco/sxsw/issues/2",
    "github_comments": 0,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-26T08:50:02-07:00",
    "raw_data": {
      "id": 129,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "SXSW hackathon - Build A Bounties Platform",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520895002,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "SXSW hackathon - Build A Bounties Platform",
            "issueKeywords": "sxsw, gitcoinco",
            "projectLength": "Hours",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "# Context\nThis is an SXSW Bounties Track issue.\n\nPer ['Integrating Standard Bounties'](https://medium.com/gitcoin/integrating-standard-bounties-dc4cf62bf814), the Bounties.network is meant to be bounties for any knowledge work task. Gitcoin is bounties / incentivization for open source software.\n\n![image](https://user-images.githubusercontent.com/23297747/37312864-be2b4df8-261a-11e8-8e29-18c565db4dfb.png)\n\nMust be deployed to mainnet by the end of the hackathon.\nMust solve a (perceived) real world issue\n\n# What\nWe would like to incentivize you, as a member of the Gitcoin/Bounties family, to create a new vertical off of [StandardBounties](https://github.com/ConsenSys/StandardBounties). We will be awarding the best submission for this task a 1 ETH prize, assuming the below requirements are met.\n\n# Our Ideas\n## Code Mentorship Bounties\nIt'd be great to see a site where people who perform some coding mentorship task receive some amount of ETH as a prize.\n\nKind of like Google Helpouts, but on the blockchain :)\n\n## Information Bounties\nIn the 21st century, information is power. Let people put bounties on research & information gathering.\n\n## Design Bounties\nIt'd be great to see a site where people who perform some design task receives some amount of ETH as a prize\n\n## Translation Bounties\nIt'd be great to see a site where people who perform a translation (or transcription) task receives some amount of ETH as a prize\n\n## Bounty\n\nSubject to the discretion of the Gitcoin team:\n.7 ETH first prize \n\n# Requirements\n- Use the [StandardBounties](https://github.com/ConsenSys/StandardBounties) contract for some non-trivial functionality\n- Launch an MVP during SXSW.\n- Do not start work before SXSW.\n- Present your submission to Eric and Vivek at SXSW",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "sxsw",
            " gitcoinco"
          ],
          "description": "# Context\nThis is an SXSW Bounties Track issue.\n\nPer ['Integrating Standard Bounties'](https://medium.com/gitcoin/integrating-standard-bounties-dc4cf62bf814), the Bounties.network is meant to be bounties for any knowledge work task. Gitcoin is bounties / incentivization for open source software.\n\n![image](https://user-images.githubusercontent.com/23297747/37312864-be2b4df8-261a-11e8-8e29-18c565db4dfb.png)\n\nMust be deployed to mainnet by the end of the hackathon.\nMust solve a (perceived) real world issue\n\n# What\nWe would like to incentivize you, as a member of the Gitcoin/Bounties family, to create a new vertical off of [StandardBounties](https://github.com/ConsenSys/StandardBounties). We will be awarding the best submission for this task a 1 ETH prize, assuming the below requirements are met.\n\n# Our Ideas\n## Code Mentorship Bounties\nIt'd be great to see a site where people who perform some coding mentorship task receive some amount of ETH as a prize.\n\nKind of like Google Helpouts, but on the blockchain :)\n\n## Information Bounties\nIn the 21st century, information is power. Let people put bounties on research & information gathering.\n\n## Design Bounties\nIt'd be great to see a site where people who perform some design task receives some amount of ETH as a prize\n\n## Translation Bounties\nIt'd be great to see a site where people who perform a translation (or transcription) task receives some amount of ETH as a prize\n\n## Bounty\n\nSubject to the discretion of the Gitcoin team:\n.7 ETH first prize \n\n# Requirements\n- Use the [StandardBounties](https://github.com/ConsenSys/StandardBounties) contract for some non-trivial functionality\n- Launch an MVP during SXSW.\n- Do not start work before SXSW.\n- Present your submission to Eric and Vivek at SXSW",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/sxsw/issues/2",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 700000000000000000,
      "network": "mainnet",
      "deadline": 1522104602,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 700000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "SXSW hackathon - Build A Bounties Platform",
      "issueKeywords": "sxsw, gitcoinco",
      "projectLength": "Hours",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "# Context\nThis is an SXSW Bounties Track issue.\n\nPer ['Integrating Standard Bounties'](https://medium.com/gitcoin/integrating-standard-bounties-dc4cf62bf814), the Bounties.network is meant to be bounties for any knowledge work task. Gitcoin is bounties / incentivization for open source software.\n\n![image](https://user-images.githubusercontent.com/23297747/37312864-be2b4df8-261a-11e8-8e29-18c565db4dfb.png)\n\nMust be deployed to mainnet by the end of the hackathon.\nMust solve a (perceived) real world issue\n\n# What\nWe would like to incentivize you, as a member of the Gitcoin/Bounties family, to create a new vertical off of [StandardBounties](https://github.com/ConsenSys/StandardBounties). We will be awarding the best submission for this task a 1 ETH prize, assuming the below requirements are met.\n\n# Our Ideas\n## Code Mentorship Bounties\nIt'd be great to see a site where people who perform some coding mentorship task receive some amount of ETH as a prize.\n\nKind of like Google Helpouts, but on the blockchain :)\n\n## Information Bounties\nIn the 21st century, information is power. Let people put bounties on research & information gathering.\n\n## Design Bounties\nIt'd be great to see a site where people who perform some design task receives some amount of ETH as a prize\n\n## Translation Bounties\nIt'd be great to see a site where people who perform a translation (or transcription) task receives some amount of ETH as a prize\n\n## Bounty\n\nSubject to the discretion of the Gitcoin team:\n.7 ETH first prize \n\n# Requirements\n- Use the [StandardBounties](https://github.com/ConsenSys/StandardBounties) contract for some non-trivial functionality\n- Launch an MVP during SXSW.\n- Do not start work before SXSW.\n- Present your submission to Eric and Vivek at SXSW",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 700000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 457.09,
    "status": "open",
    "now": "2018-03-14T14:38:51.401873Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.7,
    "issue_description": "# Context\r\nThis is an SXSW Bounties Track issue.\r\n\r\nPer ['Integrating Standard Bounties'](https://medium.com/gitcoin/integrating-standard-bounties-dc4cf62bf814), the Bounties.network is meant to be bounties for any knowledge work task. Gitcoin is bounties / incentivization for open source software.\r\n\r\n![image](https://user-images.githubusercontent.com/23297747/37312864-be2b4df8-261a-11e8-8e29-18c565db4dfb.png)\r\n\r\nMust be deployed to mainnet by the end of the hackathon.\r\nMust solve a (perceived) real world issue\r\n\r\n# What\r\nWe would like to incentivize you, as a member of the Gitcoin/Bounties family, to create a new vertical off of [StandardBounties](https://github.com/ConsenSys/StandardBounties). We will be awarding the best submission for this task a 1 ETH prize, assuming the below requirements are met.\r\n\r\n# Our Ideas\r\n## Code Mentorship Bounties\r\nIt'd be great to see a site where people who perform some coding mentorship task receive some amount of ETH as a prize.\r\n\r\nKind of like Google Helpouts, but on the blockchain :)\r\n\r\n## Information Bounties\r\nIn the 21st century, information is power. Let people put bounties on research & information gathering.\r\n\r\n## Design Bounties\r\nIt'd be great to see a site where people who perform some design task receives some amount of ETH as a prize\r\n\r\n## Translation Bounties\r\nIt'd be great to see a site where people who perform a translation (or transcription) task receives some amount of ETH as a prize\r\n\r\n## Bounty\r\n\r\nSubject to the discretion of the Gitcoin team:\r\n.7 ETH first prize \r\n\r\n# Requirements\r\n- Use the [StandardBounties](https://github.com/ConsenSys/StandardBounties) contract for some non-trivial functionality\r\n- Launch an MVP during SXSW.\r\n- Do not start work before SXSW.\r\n- Present your submission to Eric and Vivek at SXSW",
    "network": "mainnet",
    "org_name": "gitcoinco",
    "pk": 1826,
    "issue_description_text": "# Context\r\nThis is an SXSW Bounties Track issue.\r\n\r\nPer ['Integrating Standard Bounties'](https://medium.com/gitcoin/integrating-standard-bounties-dc4cf62bf814), the Bounties.network is meant to be bounties for any knowledge work task. Gitcoin is bounties / incentivization for open source software.\r\n\r\n![image](https://user-images.githubusercontent.com/23297747/37312864-be2b4df8-261a-11e8-8e29-18c565db4dfb.png)\r\n\r\nMust be deployed to mainnet by the end of the hackathon.\r\nMust solve a (perceived) real world issue\r\n\r\n# What\r\nWe would like to incentivize you, as a member of the Gitcoin/Bounties family, to create a new vertical off of [StandardBounties](https://github.com/ConsenSys/StandardBounties). We will be awarding the best submission for this task a 1 ETH prize, assuming the below requirements are met.\r\n\r\n# Our Ideas\r\n## Code Mentorship Bounties\r\nIt'd be great to see a site where people who perform some coding mentorship task receive some amount of ETH as a prize.\r\n\r\nKind of like Google Helpouts, but on the blockchain :)\r\n\r\n## Information Bounties\r\nIn the 21st century, information is power. Let people put bounties on research & information gathering.\r\n\r\n## Design Bounties\r\nIt'd be great to see a site where people who perform some design task receives some amount of ETH as a prize\r\n\r\n## Translation Bounties\r\nIt'd be great to see a site where people who perform a translation (or transcription) task receives some amount of ETH as a prize\r\n\r\n## Bounty\r\n\r\nSubject to the discretion of the Gitcoin team:\r\n.7 ETH first prize \r\n\r\n# Requirements\r\n- Use the [StandardBounties](https://github.com/ConsenSys/StandardBounties) contract for some non-trivial functionality\r\n- Launch an MVP during SXSW.\r\n- Do not start work before SXSW.\r\n- Present your submission to Eric and Vivek at SXSW",
    "standard_bounties_id": 129,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/sxsw/1",
    "created_on": "2018-03-12T15:49:43.596868-07:00",
    "modified_on": "2018-03-14T07:30:13.613679-07:00",
    "title": "SXSW hackathon - Build a Decentralized Application on Ethereum",
    "web3_created": "2018-03-12T08:47:58-07:00",
    "value_in_token": "500000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/gitcoinco/sxsw/issues/1",
    "github_comments": 0,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-26T08:47:58-07:00",
    "raw_data": {
      "id": 128,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "SXSW hackathon - Build a Decentralized Application on Ethereum",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520894878,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "SXSW hackathon - Build a Decentralized Application on Ethereum",
            "issueKeywords": "sxsw, gitcoinco",
            "projectLength": "Hours",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "# Build a dApp at SXSW\n\n## Requirements\n\n- Build a decentralized application on Ethereumâs blockchain\n- Use some combination of [uPort](uport.me), [MetaMask](metamask.io), and [Truffle](http://truffleframework.com/) in your application \n- dapp must be deployed to the mainnet by the end of the hackathon\n- dapp must solve a (perceived) real world problem\n\n\n## Nice-To-Have\n- Build something related to the mission of [Gitcoin](gitcoin.co) (see: #2 or [Ujo Music](https://ujomusic.com)) \n- Members from each of these teams are at the hackathon (Eric Berry, Alex Attar, Vivek Singh) to help \n\n## Bounty\n\nSubject to the discretion of the Gitcoin team:\n.5 ETH first prize \n.25 ETH 2nd prize\n\n### Resources\n[ConsenSys Guide: SXSW dApp Developer Guide](https://docs.google.com/document/d/1w1rzJUfJ7-2WRdWrDu2DiiGJDzDaeMYzMkuTl-EOH48/edit?ts=5aa6eddf)",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "sxsw",
            " gitcoinco"
          ],
          "description": "# Build a dApp at SXSW\n\n## Requirements\n\n- Build a decentralized application on Ethereumâs blockchain\n- Use some combination of [uPort](uport.me), [MetaMask](metamask.io), and [Truffle](http://truffleframework.com/) in your application \n- dapp must be deployed to the mainnet by the end of the hackathon\n- dapp must solve a (perceived) real world problem\n\n\n## Nice-To-Have\n- Build something related to the mission of [Gitcoin](gitcoin.co) (see: #2 or [Ujo Music](https://ujomusic.com)) \n- Members from each of these teams are at the hackathon (Eric Berry, Alex Attar, Vivek Singh) to help \n\n## Bounty\n\nSubject to the discretion of the Gitcoin team:\n.5 ETH first prize \n.25 ETH 2nd prize\n\n### Resources\n[ConsenSys Guide: SXSW dApp Developer Guide](https://docs.google.com/document/d/1w1rzJUfJ7-2WRdWrDu2DiiGJDzDaeMYzMkuTl-EOH48/edit?ts=5aa6eddf)",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/sxsw/issues/1",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 500000000000000000,
      "network": "mainnet",
      "deadline": 1522104478,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 500000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "SXSW hackathon - Build a Decentralized Application on Ethereum",
      "issueKeywords": "sxsw, gitcoinco",
      "projectLength": "Hours",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "# Build a dApp at SXSW\n\n## Requirements\n\n- Build a decentralized application on Ethereumâs blockchain\n- Use some combination of [uPort](uport.me), [MetaMask](metamask.io), and [Truffle](http://truffleframework.com/) in your application \n- dapp must be deployed to the mainnet by the end of the hackathon\n- dapp must solve a (perceived) real world problem\n\n\n## Nice-To-Have\n- Build something related to the mission of [Gitcoin](gitcoin.co) (see: #2 or [Ujo Music](https://ujomusic.com)) \n- Members from each of these teams are at the hackathon (Eric Berry, Alex Attar, Vivek Singh) to help \n\n## Bounty\n\nSubject to the discretion of the Gitcoin team:\n.5 ETH first prize \n.25 ETH 2nd prize\n\n### Resources\n[ConsenSys Guide: SXSW dApp Developer Guide](https://docs.google.com/document/d/1w1rzJUfJ7-2WRdWrDu2DiiGJDzDaeMYzMkuTl-EOH48/edit?ts=5aa6eddf)",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 500000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 326.5,
    "status": "open",
    "now": "2018-03-14T14:38:51.408013Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.5,
    "issue_description": "# Build a dApp at SXSW\r\n\r\n## Requirements\r\n\r\n- Build a decentralized application on Ethereum’s blockchain\r\n- Use some combination of [uPort](uport.me), [MetaMask](metamask.io), and [Truffle](http://truffleframework.com/) in your application \r\n- dapp must be deployed to the mainnet by the end of the hackathon\r\n- dapp must solve a (perceived) real world problem\r\n\r\n\r\n## Nice-To-Have\r\n- Build something related to the mission of [Gitcoin](gitcoin.co) (see: #2 or [Ujo Music](https://ujomusic.com)) \r\n- Members from each of these teams are at the hackathon (Eric Berry, Alex Attar, Vivek Singh) to help \r\n\r\n## Bounty\r\n\r\nSubject to the discretion of the Gitcoin team:\r\n.5 ETH first prize \r\n.25 ETH 2nd prize\r\n\r\n### Resources\r\n[ConsenSys Guide: SXSW dApp Developer Guide](https://docs.google.com/document/d/1w1rzJUfJ7-2WRdWrDu2DiiGJDzDaeMYzMkuTl-EOH48/edit?ts=5aa6eddf)",
    "network": "mainnet",
    "org_name": "gitcoinco",
    "pk": 1825,
    "issue_description_text": "# Build a dApp at SXSW\r\n\r\n## Requirements\r\n\r\n- Build a decentralized application on Ethereum’s blockchain\r\n- Use some combination of [uPort](uport.me), [MetaMask](metamask.io), and [Truffle](http://truffleframework.com/) in your application \r\n- dapp must be deployed to the mainnet by the end of the hackathon\r\n- dapp must solve a (perceived) real world problem\r\n\r\n\r\n## Nice-To-Have\r\n- Build something related to the mission of [Gitcoin](gitcoin.co) (see: #2 or [Ujo Music](https://ujomusic.com)) \r\n- Members from each of these teams are at the hackathon (Eric Berry, Alex Attar, Vivek Singh) to help \r\n\r\n## Bounty\r\n\r\nSubject to the discretion of the Gitcoin team:\r\n.5 ETH first prize \r\n.25 ETH 2nd prize\r\n\r\n### Resources\r\n[ConsenSys Guide: SXSW dApp Developer Guide](https://docs.google.com/document/d/1w1rzJUfJ7-2WRdWrDu2DiiGJDzDaeMYzMkuTl-EOH48/edit?ts=5aa6eddf)",
    "standard_bounties_id": 128,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/web/607",
    "created_on": "2018-03-12T15:25:12.187088-07:00",
    "modified_on": "2018-03-14T07:30:22.254019-07:00",
    "title": "Increase Code Coverage by 4%",
    "web3_created": "2018-03-12T08:22:05-07:00",
    "value_in_token": "70000000000000010.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/gitcoinco/web/issues/607",
    "github_comments": 0,
    "bounty_owner_address": "0xe93d33cf8aaf56c64d23b5b248919eabd8c3c41e",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-04-11T08:22:05-07:00",
    "raw_data": {
      "id": 127,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Increase Code Coverage by 4%",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0xe93d33cf8aaf56c64d23b5b248919eabd8c3c41e",
            "githubUsername": "owocki"
          },
          "created": 1520893325,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Increase Code Coverage by 4%",
            "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
            "projectLength": "Hours",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 4%.  \n\nSome folks have done this already #89 #607 and its been an effective way to increase our code coverage!\n\nCriteria:  \n* You must increase the code coverage (as measured by codecov) of this repo by 5%.\n* You must put (show) some thought into success / failure criteria for each method tested.\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "web",
            " gitcoinco",
            " JavaScript",
            " Python",
            " HTML",
            " CSS"
          ],
          "description": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 4%.  \n\nSome folks have done this already #89 #607 and its been an effective way to increase our code coverage!\n\nCriteria:  \n* You must increase the code coverage (as measured by codecov) of this repo by 5%.\n* You must put (show) some thought into success / failure criteria for each method tested.\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/web/issues/607",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0xe93d33CF8AaF56C64D23b5b248919EabD8c3c41E",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 70000000000000010,
      "network": "mainnet",
      "deadline": 1523485325,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 70000000000000010
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Increase Code Coverage by 4%",
      "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
      "projectLength": "Hours",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 4%.  \n\nSome folks have done this already #89 #607 and its been an effective way to increase our code coverage!\n\nCriteria:  \n* You must increase the code coverage (as measured by codecov) of this repo by 5%.\n* You must put (show) some thought into success / failure criteria for each method tested.\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 70000000000000010,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 45.71,
    "status": "open",
    "now": "2018-03-14T14:38:51.413987Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.07,
    "issue_description": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 4%.  \r\n\r\nSome folks have done this already #89 #607 and its been an effective way to increase our code coverage!\r\n\r\nCriteria:  \r\n* You must increase the code coverage (as measured by codecov) of this repo by 4%.\r\n* You must put (show) some thought into success / failure criteria for each method tested.\r\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.\r\n",
    "network": "mainnet",
    "org_name": "gitcoinco",
    "pk": 1824,
    "issue_description_text": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 4%.  \r\n\r\nSome folks have done this already #89 #607 and its been an effective way to increase our code coverage!\r\n\r\nCriteria:  \r\n* You must increase the code coverage (as measured by codecov) of this repo by 4%.\r\n* You must put (show) some thought into success / failure criteria for each method tested.\r\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.",
    "standard_bounties_id": 127,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/codesponsor/web/10?gc2",
    "created_on": "2018-03-12T17:04:07.674888-07:00",
    "modified_on": "2018-03-14T07:30:13.855967-07:00",
    "title": "\"Dockerize\" application for development and update instructions in the README",
    "web3_created": "2018-03-12T05:10:06-07:00",
    "value_in_token": "60000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/codesponsor/web/issues/10?gc2",
    "github_comments": 9,
    "bounty_owner_address": "0x28e21609ca8542ce5a363cbf339529204b043ede",
    "bounty_owner_email": "eric@codesponsor.io",
    "bounty_owner_github_username": "coderberry",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-19T05:10:06-07:00",
    "raw_data": {
      "id": 130,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "\"Dockerize\" application for development and update instructions in the README",
          "issuer": {
            "name": "Eric Berry",
            "email": "eric@codesponsor.io",
            "address": "0x28e21609ca8542ce5a363cbf339529204b043ede",
            "githubUsername": "coderberry"
          },
          "created": 1520881806,
          "funders": [],
          "metadata": {
            "fullName": "Eric Berry",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "\"Dockerize\" application for development and update instructions in the README",
            "issueKeywords": "web, codesponsor, CSS, Elixir, HTML, JavaScript",
            "projectLength": "Hours",
            "githubUsername": "coderberry",
            "experienceLevel": "Intermediate",
            "issueDescription": "We need the `Dockerfile` and `docker-compose.yml` files updated to where one can download the application and run it in test mode via simple instructions on the README.\n\nThe build should include not only Phoenix, but also Redis and Postgres",
            "notificationEmail": "eric@codesponsor.io"
          },
          "tokenName": "ETH",
          "categories": [
            "web",
            " codesponsor",
            " CSS",
            " Elixir",
            " HTML",
            " JavaScript"
          ],
          "description": "We need the `Dockerfile` and `docker-compose.yml` files updated to where one can download the application and run it in test mode via simple instructions on the README.\n\nThe build should include not only Phoenix, but also Redis and Postgres",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/codesponsor/web/issues/10?gc2",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x28e21609ca8542Ce5A363CBf339529204b043eDe",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 60000000000000000,
      "network": "mainnet",
      "deadline": 1521486606,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 60000000000000000
    },
    "metadata": {
      "fullName": "Eric Berry",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "\"Dockerize\" application for development and update instructions in the README",
      "issueKeywords": "web, codesponsor, CSS, Elixir, HTML, JavaScript",
      "projectLength": "Hours",
      "githubUsername": "coderberry",
      "experienceLevel": "Intermediate",
      "issueDescription": "We need the `Dockerfile` and `docker-compose.yml` files updated to where one can download the application and run it in test mode via simple instructions on the README.\n\nThe build should include not only Phoenix, but also Redis and Postgres",
      "notificationEmail": "eric@codesponsor.io"
    },
    "current_bounty": true,
    "value_in_eth": 60000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 39.18,
    "status": "open",
    "now": "2018-03-14T14:38:51.419650Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/30100736?v=4",
    "value_true": 0.06,
    "issue_description": "We need the `Dockerfile` and `docker-compose.yml` files updated to where one can download the application and run it in test mode via simple instructions on the README.\r\n\r\nThe build should include not only Phoenix, but also Redis and Postgres",
    "network": "mainnet",
    "org_name": "codesponsor",
    "pk": 1828,
    "issue_description_text": "We need the `Dockerfile` and `docker-compose.yml` files updated to where one can download the application and run it in test mode via simple instructions on the README.\r\n\r\nThe build should include not only Phoenix, but also Redis and Postgres",
    "standard_bounties_id": 130,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mbeacom/test-repo/20",
    "created_on": "2018-03-12T11:21:06.963254-07:00",
    "modified_on": "2018-03-14T07:30:27.708297-07:00",
    "title": "Testing Bounty Creation",
    "web3_created": "2018-03-12T02:17:27-07:00",
    "value_in_token": "100000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/mbeacom/test-repo/issues/20",
    "github_comments": 0,
    "bounty_owner_address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
    "bounty_owner_email": "mark.beacom@consensys.net",
    "bounty_owner_github_username": "mbeacom",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-03-12T02:17:27-07:00",
    "raw_data": {
      "id": 494,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Testing Bounty Creation",
          "issuer": {
            "name": "Mark Beacom",
            "email": "mark.beacom@consensys.net",
            "address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
            "githubUsername": "mbeacom"
          },
          "created": 1520871447,
          "funders": [],
          "metadata": {
            "fullName": "Mark Beacom",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "Testing Bounty Creation",
            "issueKeywords": "test-repo, mbeacom",
            "projectLength": "Unknown",
            "githubUsername": "mbeacom",
            "experienceLevel": "",
            "issueDescription": "Testing some bounty creation stuff ð",
            "notificationEmail": "mark.beacom@consensys.net"
          },
          "tokenName": "ETH",
          "categories": [
            "test-repo",
            " mbeacom"
          ],
          "description": "Testing some bounty creation stuff ð",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mbeacom/test-repo/issues/20",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x93d0deF1d76B510e2a7A6d01Cf18c54ec23f4253",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000,
      "network": "rinkeby",
      "deadline": 1552407447,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000
    },
    "metadata": {
      "fullName": "Mark Beacom",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Testing Bounty Creation",
      "issueKeywords": "test-repo, mbeacom",
      "projectLength": "Unknown",
      "githubUsername": "mbeacom",
      "experienceLevel": "",
      "issueDescription": "Testing some bounty creation stuff ð",
      "notificationEmail": "mark.beacom@consensys.net"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.07,
    "status": "open",
    "now": "2018-03-14T14:38:51.425791Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4",
    "value_true": 0.0001,
    "issue_description": "Testing some bounty creation stuff 🐞 ",
    "network": "rinkeby",
    "org_name": "mbeacom",
    "pk": 1822,
    "issue_description_text": "Testing some bounty creation stuff 🐞",
    "standard_bounties_id": 494,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/web/594",
    "created_on": "2018-03-12T09:10:09.291832-07:00",
    "modified_on": "2018-03-14T07:30:10.850565-07:00",
    "title": "redesign embeddable widget for github reops",
    "web3_created": "2018-03-12T02:05:01-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/gitcoinco/web/issues/594",
    "github_comments": 4,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-04-11T02:05:01-07:00",
    "raw_data": {
      "id": 123,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "redesign embeddable widget for github reops",
          "issuer": {
            "name": "",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520870701,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "redesign embeddable widget for github reops",
            "issueKeywords": "design, gitcoinco",
            "projectLength": "Hours",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2\n\n<img src='https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2'>\n\ni coded this up hackily a few months ago.  its intent was to represent the available open issues on a github repo.\n\nid like a redesigned embeddable image that looks good on github repos and is on brand.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "design",
            " gitcoinco"
          ],
          "description": "https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2\n\n<img src='https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2'>\n\ni coded this up hackily a few months ago.  its intent was to represent the available open issues on a github repo.\n\nid like a redesigned embeddable image that looks good on github repos and is on brand.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/web/issues/594",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "mainnet",
      "deadline": 1523462701,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "redesign embeddable widget for github reops",
      "issueKeywords": "design, gitcoinco",
      "projectLength": "Hours",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2\n\n<img src='https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2'>\n\ni coded this up hackily a few months ago.  its intent was to represent the available open issues on a github repo.\n\nid like a redesigned embeddable image that looks good on github repos and is on brand.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.431579Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.1,
    "issue_description": "https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2\r\n\r\n<img src='https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2'>\r\n\r\ni coded this up hackily a few months ago.  its intent was to represent the available open issues on a github repo.\r\n\r\nid like a redesigned embeddable image that looks good on github repos and is on brand.  ",
    "network": "mainnet",
    "org_name": "gitcoinco",
    "pk": 1819,
    "issue_description_text": "https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco&v=2\r\n\r\n\r\n\r\ni coded this up hackily a few months ago.  its intent was to represent the available open issues on a github repo.\r\n\r\nid like a redesigned embeddable image that looks good on github repos and is on brand.",
    "standard_bounties_id": 123,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/skunkworks/62",
    "created_on": "2018-03-07T22:25:25.120590-07:00",
    "modified_on": "2018-03-14T07:30:23.585777-07:00",
    "title": "void",
    "web3_created": "2018-03-07T15:24:30-07:00",
    "value_in_token": "250000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/gitcoinco/skunkworks/issues/62",
    "github_comments": 1,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-06-05T15:24:30-07:00",
    "raw_data": {
      "id": 484,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "(design) Eth avatar - gravatar for ethereum addresses",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520486670,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "(design) Eth avatar - gravatar for ethereum addresses",
            "issueKeywords": "skunkworks, gitcoinco, JavaScript, Python, CSS, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "# what\n\n## An important part of the Ethereum Ecosystem\n\nETHAvatar - a [gravatar](https://gravatar.com)-like app, but instead of attaching images to emails, it attaches avatars to ETHereum addresses.\n\n# what, technically\n\na webapp that will attach your ETHavatar to your `web3.eth.coinbase` in a smart contract\n\nwe've already got a working app over at https://github.com/gitcoinco/skunkworks/issues/58#issuecomment-371349477\n\n# design\n\n## index page\n\non this index page\n\n* header -- ethavatar.co\n* module - your current avatar ( see [this page](https://eth-avatar.herokuapp.com/) for inspiration )\n* module -- your current avatar (when metamask is missing or locked)\n* module -- look up any eth addresses avatars\n* module -- avatar gallery (@mbeylin do we want this? )\n* module -- code samples\n * code sample -- post an ETHavatar for an address\n * code sample -- get an ETHavatar for an address\n* footer -- should just say \"made with <3 by gitcoin.co\"\n\n# bounty\n\n* design the above modules (and please make it responsive)\n* please allow us 2 design revisions",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "skunkworks",
            " gitcoinco",
            " JavaScript",
            " Python",
            " CSS",
            " HTML",
            " Shell"
          ],
          "description": "# what\n\n## An important part of the Ethereum Ecosystem\n\nETHAvatar - a [gravatar](https://gravatar.com)-like app, but instead of attaching images to emails, it attaches avatars to ETHereum addresses.\n\n# what, technically\n\na webapp that will attach your ETHavatar to your `web3.eth.coinbase` in a smart contract\n\nwe've already got a working app over at https://github.com/gitcoinco/skunkworks/issues/58#issuecomment-371349477\n\n# design\n\n## index page\n\non this index page\n\n* header -- ethavatar.co\n* module - your current avatar ( see [this page](https://eth-avatar.herokuapp.com/) for inspiration )\n* module -- your current avatar (when metamask is missing or locked)\n* module -- look up any eth addresses avatars\n* module -- avatar gallery (@mbeylin do we want this? )\n* module -- code samples\n * code sample -- post an ETHavatar for an address\n * code sample -- get an ETHavatar for an address\n* footer -- should just say \"made with <3 by gitcoin.co\"\n\n# bounty\n\n* design the above modules (and please make it responsive)\n* please allow us 2 design revisions",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/skunkworks/issues/62",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 250000000000000000,
      "network": "rinkeby",
      "deadline": 1528262670,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 250000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "(design) Eth avatar - gravatar for ethereum addresses",
      "issueKeywords": "skunkworks, gitcoinco, JavaScript, Python, CSS, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "# what\n\n## An important part of the Ethereum Ecosystem\n\nETHAvatar - a [gravatar](https://gravatar.com)-like app, but instead of attaching images to emails, it attaches avatars to ETHereum addresses.\n\n# what, technically\n\na webapp that will attach your ETHavatar to your `web3.eth.coinbase` in a smart contract\n\nwe've already got a working app over at https://github.com/gitcoinco/skunkworks/issues/58#issuecomment-371349477\n\n# design\n\n## index page\n\non this index page\n\n* header -- ethavatar.co\n* module - your current avatar ( see [this page](https://eth-avatar.herokuapp.com/) for inspiration )\n* module -- your current avatar (when metamask is missing or locked)\n* module -- look up any eth addresses avatars\n* module -- avatar gallery (@mbeylin do we want this? )\n* module -- code samples\n * code sample -- post an ETHavatar for an address\n * code sample -- get an ETHavatar for an address\n* footer -- should just say \"made with <3 by gitcoin.co\"\n\n# bounty\n\n* design the above modules (and please make it responsive)\n* please allow us 2 design revisions",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 250000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 163.25,
    "status": "open",
    "now": "2018-03-14T14:38:51.437510Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.25,
    "issue_description": "void",
    "network": "rinkeby",
    "org_name": "gitcoinco",
    "pk": 1778,
    "issue_description_text": "void",
    "standard_bounties_id": 484,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/143",
    "created_on": "2018-03-13T11:20:04.135531-07:00",
    "modified_on": "2018-03-14T07:30:18.046780-07:00",
    "title": "sdfsdf",
    "web3_created": "2018-03-07T10:14:16-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/143",
    "github_comments": 0,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-21T10:14:16-07:00",
    "raw_data": {
      "id": 482,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "sdfsdf",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520468056,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "sdfsdf",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "dfssdf",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "dfssdf",
          "expire_date": 1521677656,
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/143",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "rinkeby",
      "deadline": 1521677656,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "sdfsdf",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "dfssdf",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.443695Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.1,
    "issue_description": "dfssdf",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 1837,
    "issue_description_text": "dfssdf",
    "standard_bounties_id": 482,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/142",
    "created_on": "2018-03-08T00:19:49.225786-07:00",
    "modified_on": "2018-03-14T07:30:27.785747-07:00",
    "title": "sdfds",
    "web3_created": "2018-03-07T10:10:21-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/142",
    "github_comments": 0,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2286-11-20T03:46:39-07:00",
    "raw_data": {
      "id": 481,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "sdfds",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520467821,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "sdfds",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "sdfds",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "sdfds",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/142",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "rinkeby",
      "deadline": 9999999999,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "sdfds",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "sdfds",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.449569Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.1,
    "issue_description": "sdfds",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 1782,
    "issue_description_text": "sdfds",
    "standard_bounties_id": 481,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/15",
    "created_on": "2018-03-08T00:19:47.893683-07:00",
    "modified_on": "2018-03-14T07:30:29.989202-07:00",
    "title": "Purge historical development migrations and generate a fresh new initial one",
    "web3_created": "2018-03-07T10:05:05-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/15",
    "github_comments": 3,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2286-11-20T03:46:39-07:00",
    "raw_data": {
      "id": 480,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Num threads fix",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520467505,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Num threads fix",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "Let users set NUM_THREADS from environment. What do you think, is moving settings to envvars good idea? From deployment point of view IMO it's better than editing local_settings.py.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "Let users set NUM_THREADS from environment. What do you think, is moving settings to envvars good idea? From deployment point of view IMO it's better than editing local_settings.py.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/15",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "rinkeby",
      "deadline": 9999999999,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Num threads fix",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "Let users set NUM_THREADS from environment. What do you think, is moving settings to envvars good idea? From deployment point of view IMO it's better than editing local_settings.py.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.455593Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.1,
    "issue_description": "Addresses #12 \n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 1781,
    "issue_description_text": "Addresses #12",
    "standard_bounties_id": 480,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/ipld/js-cid/38",
    "created_on": "2018-03-09T23:03:44.378953-07:00",
    "modified_on": "2018-03-14T07:30:29.701979-07:00",
    "title": "Webpack bundle failing at CID: Unexpected token: name (CID)",
    "web3_created": "2018-03-06T15:42:45-07:00",
    "value_in_token": "50000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Advanced",
    "github_url": "https://github.com/ipld/js-cid/issues/38",
    "github_comments": 8,
    "bounty_owner_address": "0x63b7608b7f47de1c0d1f94f85ffcb260fbcb4890",
    "bounty_owner_email": "anatoli@rainforce.org",
    "bounty_owner_github_username": "abitrolly",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-03-06T15:42:45-07:00",
    "raw_data": {
      "id": 121,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Webpack bundle failing at CID: Unexpected token: name (CID)",
          "issuer": {
            "name": "Anatoli Babenia",
            "email": "anatoli@rainforce.org",
            "address": "0x63b7608b7f47de1c0d1f94f85ffcb260fbcb4890",
            "githubUsername": "abitrolly"
          },
          "created": 1520401365,
          "funders": [],
          "metadata": {
            "fullName": "Anatoli Babenia",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Webpack bundle failing at CID: Unexpected token: name (CID)",
            "issueKeywords": "js-cid, ipld, JavaScript, Groovy",
            "projectLength": "Days",
            "githubUsername": "abitrolly",
            "experienceLevel": "Advanced",
            "issueDescription": "We want to build from last version with `create-react-app`  or get example of custom Webpack configuration to build it. ",
            "notificationEmail": "anatoli@rainforce.org"
          },
          "tokenName": "ETH",
          "categories": [
            "js-cid",
            " ipld",
            " JavaScript",
            " Groovy"
          ],
          "description": "We want to build from last version with `create-react-app`  or get example of custom Webpack configuration to build it. ",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/ipld/js-cid/issues/38",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x63b7608B7F47de1c0D1F94F85ffcb260Fbcb4890",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 50000000000000000,
      "network": "mainnet",
      "deadline": 1551937365,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 50000000000000000
    },
    "metadata": {
      "fullName": "Anatoli Babenia",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Webpack bundle failing at CID: Unexpected token: name (CID)",
      "issueKeywords": "js-cid, ipld, JavaScript, Groovy",
      "projectLength": "Days",
      "githubUsername": "abitrolly",
      "experienceLevel": "Advanced",
      "issueDescription": "We want to build from last version with `create-react-app`  or get example of custom Webpack configuration to build it. ",
      "notificationEmail": "anatoli@rainforce.org"
    },
    "current_bounty": true,
    "value_in_eth": 50000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 32.65,
    "status": "open",
    "now": "2018-03-14T14:38:51.461384Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/19803583?v=4",
    "value_true": 0.05,
    "issue_description": "Hey guys, I'm trying to bundle https://github.com/ipfs/js-ipfs, and they're using cids. \r\n\r\nWhenever I try to build, `yarn run build`, with create-react-app, I'm getting this error:\r\n```\r\nstatic/js/main.d24ead13.js from UglifyJs\r\nUnexpected token: name (CID) [./~/cids/src/index.js:23,0][static/js/main.d24ead13.js:8442,6]\r\n```\r\n\r\nlooks like uglifyJS doesn't look CID? tracked it down to your package and was wondering if you had any insights.\r\n\r\nUnable to build because of this.",
    "network": "mainnet",
    "org_name": "ipld",
    "pk": 1806,
    "issue_description_text": "Hey guys, I'm trying to bundle https://github.com/ipfs/js-ipfs, and they're using cids. \r\n\r\nWhenever I try to build, `yarn run build`, with create-react-app, I'm getting this error:\r\n```\r\nstatic/js/main.d24ead13.js from UglifyJs\r\nUnexpected token: name (CID) [./~/cids/src/index.js:23,0][static/js/main.d24ead13.js:8442,6]\r\n```\r\n\r\nlooks like uglifyJS doesn't look CID? tracked it down to your package and was wondering if you had any insights.\r\n\r\nUnable to build because of this.",
    "standard_bounties_id": 121,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/ethereum/py-evm/362",
    "created_on": "2018-03-06T19:50:53.793095-07:00",
    "modified_on": "2018-03-14T07:30:09.156796-07:00",
    "title": "Formalize API for Computation object.",
    "web3_created": "2018-03-06T12:48:21-07:00",
    "value_in_token": "480000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/ethereum/py-evm/issues/362",
    "github_comments": 6,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-06-04T12:48:21-07:00",
    "raw_data": {
      "id": 109,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Formalize API for Computation object.",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520390901,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Formalize API for Computation object.",
            "issueKeywords": "py-evm, ethereum, Python, Makefile",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "### What is wrong?\n\nCurrently, the `Computation` object houses *lots* of information and sub-APIs for things like maniputlating the stack, consuming gas, etc.  This creates a lot of public API surface area since we are effectively support *two* public APIs for anything needed from a sub-property of the `Computation` object.\n\n- `Computation.memory` is the API for getting at the `Memory`\n- `Computation.memory.read` is the API for reading from memory.\n\n### How can it be fixed\n\nI propose moving **all** sub-APIs to private properties and only exposing them through a single public API on the `Computation` object itself.\n\nFor example.\n\n- `Computation.memory -> Computation._memory`\n- `Computation.memory.read() -> Computation.memory_read()`\n\nIn the process we should organize the body of the `Computation` object by subject/sub-API meaning that we co-locate all of the *memory* APIs together, and so on for each category.\n\n#### Maybe use abbreviated suffixes\n\nSome of these accessors can be quite long:\n\n- `Computation.gas_meter.consume_gas`\n\nMaybe it's ok for us to shorten these using a standard abbreviated prefix.  This trades one type of readability for another and since these are reasonably *low level* APIs that are only consumed from within EVM execution, I think that I'm comfortable with this trade-off.\n\n- `Computation.gm_consume_gas()`\n\n#### Maybe create a common base class\n\nIt might also be good to create a `BaseComputation` class which contains stubs for all of the public APIs which raise `NotImplementedError` exceptions.  This serves as a sort of documentation from within the code for the API for the computation object.\n\nA possible argument against this is that the `sharding` changes may introduce new APIs which are not used pre-sharding, and in some cases, potentially removing APIs which are no longer part of the sharding EVM.\n\n\n#### Documentation\n\nThis should also include a page in the `docs/` that lists all of these APIs and has a basic human readable description of what they do.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "py-evm",
            " ethereum",
            " Python",
            " Makefile"
          ],
          "description": "### What is wrong?\n\nCurrently, the `Computation` object houses *lots* of information and sub-APIs for things like maniputlating the stack, consuming gas, etc.  This creates a lot of public API surface area since we are effectively support *two* public APIs for anything needed from a sub-property of the `Computation` object.\n\n- `Computation.memory` is the API for getting at the `Memory`\n- `Computation.memory.read` is the API for reading from memory.\n\n### How can it be fixed\n\nI propose moving **all** sub-APIs to private properties and only exposing them through a single public API on the `Computation` object itself.\n\nFor example.\n\n- `Computation.memory -> Computation._memory`\n- `Computation.memory.read() -> Computation.memory_read()`\n\nIn the process we should organize the body of the `Computation` object by subject/sub-API meaning that we co-locate all of the *memory* APIs together, and so on for each category.\n\n#### Maybe use abbreviated suffixes\n\nSome of these accessors can be quite long:\n\n- `Computation.gas_meter.consume_gas`\n\nMaybe it's ok for us to shorten these using a standard abbreviated prefix.  This trades one type of readability for another and since these are reasonably *low level* APIs that are only consumed from within EVM execution, I think that I'm comfortable with this trade-off.\n\n- `Computation.gm_consume_gas()`\n\n#### Maybe create a common base class\n\nIt might also be good to create a `BaseComputation` class which contains stubs for all of the public APIs which raise `NotImplementedError` exceptions.  This serves as a sort of documentation from within the code for the API for the computation object.\n\nA possible argument against this is that the `sharding` changes may introduce new APIs which are not used pre-sharding, and in some cases, potentially removing APIs which are no longer part of the sharding EVM.\n\n\n#### Documentation\n\nThis should also include a page in the `docs/` that lists all of these APIs and has a basic human readable description of what they do.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/ethereum/py-evm/issues/362",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 480000000000000000,
      "network": "mainnet",
      "deadline": 1528166901,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 480000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Formalize API for Computation object.",
      "issueKeywords": "py-evm, ethereum, Python, Makefile",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "### What is wrong?\n\nCurrently, the `Computation` object houses *lots* of information and sub-APIs for things like maniputlating the stack, consuming gas, etc.  This creates a lot of public API surface area since we are effectively support *two* public APIs for anything needed from a sub-property of the `Computation` object.\n\n- `Computation.memory` is the API for getting at the `Memory`\n- `Computation.memory.read` is the API for reading from memory.\n\n### How can it be fixed\n\nI propose moving **all** sub-APIs to private properties and only exposing them through a single public API on the `Computation` object itself.\n\nFor example.\n\n- `Computation.memory -> Computation._memory`\n- `Computation.memory.read() -> Computation.memory_read()`\n\nIn the process we should organize the body of the `Computation` object by subject/sub-API meaning that we co-locate all of the *memory* APIs together, and so on for each category.\n\n#### Maybe use abbreviated suffixes\n\nSome of these accessors can be quite long:\n\n- `Computation.gas_meter.consume_gas`\n\nMaybe it's ok for us to shorten these using a standard abbreviated prefix.  This trades one type of readability for another and since these are reasonably *low level* APIs that are only consumed from within EVM execution, I think that I'm comfortable with this trade-off.\n\n- `Computation.gm_consume_gas()`\n\n#### Maybe create a common base class\n\nIt might also be good to create a `BaseComputation` class which contains stubs for all of the public APIs which raise `NotImplementedError` exceptions.  This serves as a sort of documentation from within the code for the API for the computation object.\n\nA possible argument against this is that the `sharding` changes may introduce new APIs which are not used pre-sharding, and in some cases, potentially removing APIs which are no longer part of the sharding EVM.\n\n\n#### Documentation\n\nThis should also include a page in the `docs/` that lists all of these APIs and has a basic human readable description of what they do.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 480000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 313.44,
    "status": "open",
    "now": "2018-03-14T14:38:51.467199Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6250754?v=4",
    "value_true": 0.48,
    "issue_description": "### What is wrong?\r\n\r\nCurrently, the `Computation` object houses *lots* of information and sub-APIs for things like maniputlating the stack, consuming gas, etc.  This creates a lot of public API surface area since we are effectively support *two* public APIs for anything needed from a sub-property of the `Computation` object.\r\n\r\n- `Computation.memory` is the API for getting at the `Memory`\r\n- `Computation.memory.read` is the API for reading from memory.\r\n\r\n### How can it be fixed\r\n\r\nI propose moving **all** sub-APIs to private properties and only exposing them through a single public API on the `Computation` object itself.\r\n\r\nFor example.\r\n\r\n- `Computation.memory -> Computation._memory`\r\n- `Computation.memory.read() -> Computation.memory_read()`\r\n\r\nIn the process we should organize the body of the `Computation` object by subject/sub-API meaning that we co-locate all of the *memory* APIs together, and so on for each category.\r\n\r\n#### Maybe use abbreviated suffixes\r\n\r\nSome of these accessors can be long:\r\n\r\n- `Computation.gas_meter.consume_gas`\r\n\r\nFor APIs that are unambiguous like this one we can just use:\r\n\r\n- `Computation.consume_gas()`\r\n\r\nHowever, some APIs will need to be prefixed such as `Computation.stack.pop()`.  In cases like this we should use a prefixed method name:\r\n\r\n- `Computation.stack_pop()`\r\n- `Computation.memory_read()`\r\n\r\n#### Common base class\r\n\r\nThe  `BaseComputation` class should be converted to have only STUB implementations of these methods with `NotImplementedError` exceptions being raised in the methods.  \r\n\r\nThen, a `Computation` class can be created at `evm.computation.Computation` which contains all of the current implementations of these methods.\r\n\r\n#### Documentation\r\n\r\nThis should also include a page in the `docs/` that lists all of these APIs and has a basic human readable description of what they do.",
    "network": "mainnet",
    "org_name": "ethereum",
    "pk": 1764,
    "issue_description_text": "### What is wrong?\r\n\r\nCurrently, the `Computation` object houses *lots* of information and sub-APIs for things like maniputlating the stack, consuming gas, etc.  This creates a lot of public API surface area since we are effectively support *two* public APIs for anything needed from a sub-property of the `Computation` object.\r\n\r\n- `Computation.memory` is the API for getting at the `Memory`\r\n- `Computation.memory.read` is the API for reading from memory.\r\n\r\n### How can it be fixed\r\n\r\nI propose moving **all** sub-APIs to private properties and only exposing them through a single public API on the `Computation` object itself.\r\n\r\nFor example.\r\n\r\n- `Computation.memory -> Computation._memory`\r\n- `Computation.memory.read() -> Computation.memory_read()`\r\n\r\nIn the process we should organize the body of the `Computation` object by subject/sub-API meaning that we co-locate all of the *memory* APIs together, and so on for each category.\r\n\r\n#### Maybe use abbreviated suffixes\r\n\r\nSome of these accessors can be long:\r\n\r\n- `Computation.gas_meter.consume_gas`\r\n\r\nFor APIs that are unambiguous like this one we can just use:\r\n\r\n- `Computation.consume_gas()`\r\n\r\nHowever, some APIs will need to be prefixed such as `Computation.stack.pop()`.  In cases like this we should use a prefixed method name:\r\n\r\n- `Computation.stack_pop()`\r\n- `Computation.memory_read()`\r\n\r\n#### Common base class\r\n\r\nThe  `BaseComputation` class should be converted to have only STUB implementations of these methods with `NotImplementedError` exceptions being raised in the methods.  \r\n\r\nThen, a `Computation` class can be created at `evm.computation.Computation` which contains all of the current implementations of these methods.\r\n\r\n#### Documentation\r\n\r\nThis should also include a page in the `docs/` that lists all of these APIs and has a basic human readable description of what they do.",
    "standard_bounties_id": 109,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/42",
    "created_on": "2018-03-07T00:19:56-07:00",
    "modified_on": "2018-03-14T07:30:25.394082-07:00",
    "title": "Multithreading Support on predict_many_sk and predict_many_v2",
    "web3_created": "2018-03-06T11:48:37-07:00",
    "value_in_token": "200000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/42",
    "github_comments": 7,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-20T11:48:37-07:00",
    "raw_data": {
      "id": 479,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Multithreading Support on predict_many_sk and predict_many_v2",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520387317,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Multithreading Support on predict_many_sk and predict_many_v2",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "Added multithreading/pool support on the two main generation functions.  This allows for a linear speedup of x/NUM_THREADS as defined in the local_settings.py.Updated readme.MD to reference the new required setting - May be worth adding as a default to the main settings.py?Running this in a docker environment with PostgreSQL on a SSD.predict_many_v2 is still running in the background right now, once it's done, I'll provide some time stats.Machine Stats:2x Intel(R) Xeon(R) CPU           L5639  @ 2.13GHz72Gb ramRuntimes:Running with 24 threads:- predict_many_sk:  - real 2m 7.850s  - user 27m 25.829s  - sys 1m 41.492sNon-threaded:- predict_many_sk:  - real 32m 2.854s  - user 22m 5.785s  - sys 0m 44.857s",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "Added multithreading/pool support on the two main generation functions.  This allows for a linear speedup of x/NUM_THREADS as defined in the local_settings.py.Updated readme.MD to reference the new required setting - May be worth adding as a default to the main settings.py?Running this in a docker environment with PostgreSQL on a SSD.predict_many_v2 is still running in the background right now, once it's done, I'll provide some time stats.Machine Stats:2x Intel(R) Xeon(R) CPU           L5639  @ 2.13GHz72Gb ramRuntimes:Running with 24 threads:- predict_many_sk:  - real 2m 7.850s  - user 27m 25.829s  - sys 1m 41.492sNon-threaded:- predict_many_sk:  - real 32m 2.854s  - user 22m 5.785s  - sys 0m 44.857s",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/42",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 200000000000000000,
      "network": "rinkeby",
      "deadline": 1521596917,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 200000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Multithreading Support on predict_many_sk and predict_many_v2",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "Added multithreading/pool support on the two main generation functions.  This allows for a linear speedup of x/NUM_THREADS as defined in the local_settings.py.Updated readme.MD to reference the new required setting - May be worth adding as a default to the main settings.py?Running this in a docker environment with PostgreSQL on a SSD.predict_many_v2 is still running in the background right now, once it's done, I'll provide some time stats.Machine Stats:2x Intel(R) Xeon(R) CPU           L5639  @ 2.13GHz72Gb ramRuntimes:Running with 24 threads:- predict_many_sk:  - real 2m 7.850s  - user 27m 25.829s  - sys 1m 41.492sNon-threaded:- predict_many_sk:  - real 32m 2.854s  - user 22m 5.785s  - sys 0m 44.857s",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 200000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 130.6,
    "status": "open",
    "now": "2018-03-14T14:38:51.473053Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.2,
    "issue_description": "Added multithreading/pool support on the two main generation functions.  This allows for a linear speedup of x/NUM_THREADS as defined in the local_settings.py.\n\nUpdated readme.MD to reference the new required setting - May be worth adding as a default to the main settings.py?\n\nRunning this in a docker environment with PostgreSQL on a SSD.\n\npredict_many_v2 is still running in the background right now, once it's done, I'll provide some time stats.\n\nMachine Stats:\n2x Intel(R) Xeon(R) CPU           L5639  @ 2.13GHz\n72Gb ram\n\nRuntimes:\nRunning with 24 threads:\n- predict_many_sk:\n  - real 2m 7.850s\n  - user 27m 25.829s\n  - sys 1m 41.492s\n\nNon-threaded:\n- predict_many_sk:\n  - real 32m 2.854s\n  - user 22m 5.785s\n  - sys 0m 44.857s\n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 1769,
    "issue_description_text": "Added multithreading/pool support on the two main generation functions.  This allows for a linear speedup of x/NUM_THREADS as defined in the local_settings.py.\n\nUpdated readme.MD to reference the new required setting - May be worth adding as a default to the main settings.py?\n\nRunning this in a docker environment with PostgreSQL on a SSD.\n\npredict_many_v2 is still running in the background right now, once it's done, I'll provide some time stats.\n\nMachine Stats:\n2x Intel(R) Xeon(R) CPU           L5639  @ 2.13GHz\n72Gb ram\n\nRuntimes:\nRunning with 24 threads:\n- predict_many_sk:\n  - real 2m 7.850s\n  - user 27m 25.829s\n  - sys 1m 41.492s\n\nNon-threaded:\n- predict_many_sk:\n  - real 32m 2.854s\n  - user 22m 5.785s\n  - sys 0m 44.857s",
    "standard_bounties_id": 479,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/102",
    "created_on": "2018-03-07T00:19:54.769986-07:00",
    "modified_on": "2018-03-14T07:30:13.515664-07:00",
    "title": "foo bar",
    "web3_created": "2018-03-06T09:44:53-07:00",
    "value_in_token": "200000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/102",
    "github_comments": 0,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-20T09:44:53-07:00",
    "raw_data": {
      "id": 478,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "foo bar",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520379893,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "foo bar",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "1234234",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "1234234",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/102",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 200000000000000000,
      "network": "rinkeby",
      "deadline": 1521589493,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 200000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "foo bar",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "1234234",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 200000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 130.6,
    "status": "open",
    "now": "2018-03-14T14:38:51.479049Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.2,
    "issue_description": "1234234",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 1768,
    "issue_description_text": "1234234",
    "standard_bounties_id": 478,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/100",
    "created_on": "2018-03-07T00:19:53.407403-07:00",
    "modified_on": "2018-03-14T07:30:28.293991-07:00",
    "title": "Num threads fix",
    "web3_created": "2018-03-06T09:40:46-07:00",
    "value_in_token": "200000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/100",
    "github_comments": 0,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-20T09:40:46-07:00",
    "raw_data": {
      "id": 477,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Num threads fix",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520379646,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Num threads fix",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "Let users set NUM_THREADS from environment. What do you think, is moving settings to envvars good idea? From deployment point of view IMO it's better than editing local_settings.py.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "Let users set NUM_THREADS from environment. What do you think, is moving settings to envvars good idea? From deployment point of view IMO it's better than editing local_settings.py.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/100",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 200000000000000000,
      "network": "rinkeby",
      "deadline": 1521589246,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 200000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Num threads fix",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "Let users set NUM_THREADS from environment. What do you think, is moving settings to envvars good idea? From deployment point of view IMO it's better than editing local_settings.py.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 200000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 130.6,
    "status": "open",
    "now": "2018-03-14T14:38:51.485021Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.2,
    "issue_description": "Let users set NUM_THREADS from environment. What do you think, is moving settings to envvars good idea? From deployment point of view IMO it's better than editing local_settings.py.",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 1767,
    "issue_description_text": "Let users set NUM_THREADS from environment. What do you think, is moving settings to envvars good idea? From deployment point of view IMO it's better than editing local_settings.py.",
    "standard_bounties_id": 477,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/33",
    "created_on": "2018-03-07T00:19:52.105890-07:00",
    "modified_on": "2018-03-14T07:30:31.201497-07:00",
    "title": "Trade Model Evaluation ideas",
    "web3_created": "2018-03-06T09:39:44-07:00",
    "value_in_token": "200000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/33",
    "github_comments": 1,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-20T09:39:44-07:00",
    "raw_data": {
      "id": 476,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Trade Model Evaluation ideas",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1520379584,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Trade Model Evaluation ideas",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "Ideas for evaluating / backtesting trading models.From https://github.com/owocki/pytrader/issues/5#issuecomment-204250257 : > A quick way would be create a theoretical control group: (if you bought 1 BTC/ETH and held it for the same two months) and compare the profits.or > A second much more rigorous method (what I would do before even investing 1 real BTC) would be to get a collection of data from different markets and simulate PyTrader at random segments on them. This would be a true experiment and give a good idea of the actual profitability of the algorithm in the general market. But, I imagine this would take quite a bit of computation power. Do you have a general estimate of how long it would take a $900 PC running 24/7 to simulate 2 months of trading? (assuming all the code is modified somehow for this to happen)Thanks @jeff-hykin for these ideas.  Lets discuss these and other ideas below.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "Ideas for evaluating / backtesting trading models.From https://github.com/owocki/pytrader/issues/5#issuecomment-204250257 : > A quick way would be create a theoretical control group: (if you bought 1 BTC/ETH and held it for the same two months) and compare the profits.or > A second much more rigorous method (what I would do before even investing 1 real BTC) would be to get a collection of data from different markets and simulate PyTrader at random segments on them. This would be a true experiment and give a good idea of the actual profitability of the algorithm in the general market. But, I imagine this would take quite a bit of computation power. Do you have a general estimate of how long it would take a $900 PC running 24/7 to simulate 2 months of trading? (assuming all the code is modified somehow for this to happen)Thanks @jeff-hykin for these ideas.  Lets discuss these and other ideas below.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/33",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 200000000000000000,
      "network": "rinkeby",
      "deadline": 1521589184,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 200000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Trade Model Evaluation ideas",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "Ideas for evaluating / backtesting trading models.From https://github.com/owocki/pytrader/issues/5#issuecomment-204250257 : > A quick way would be create a theoretical control group: (if you bought 1 BTC/ETH and held it for the same two months) and compare the profits.or > A second much more rigorous method (what I would do before even investing 1 real BTC) would be to get a collection of data from different markets and simulate PyTrader at random segments on them. This would be a true experiment and give a good idea of the actual profitability of the algorithm in the general market. But, I imagine this would take quite a bit of computation power. Do you have a general estimate of how long it would take a $900 PC running 24/7 to simulate 2 months of trading? (assuming all the code is modified somehow for this to happen)Thanks @jeff-hykin for these ideas.  Lets discuss these and other ideas below.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 200000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 130.6,
    "status": "open",
    "now": "2018-03-14T14:38:51.491496Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.2,
    "issue_description": "Ideas for evaluating / backtesting trading models.\n\nFrom https://github.com/owocki/pytrader/issues/5#issuecomment-204250257 : \n\n> A quick way would be create a theoretical control group: (if you bought 1 BTC/ETH and held it for the same two months) and compare the profits.\n\nor \n\n> A second much more rigorous method (what I would do before even investing 1 real BTC) would be to get a collection of data from different markets and simulate PyTrader at random segments on them. This would be a true experiment and give a good idea of the actual profitability of the algorithm in the general market. But, I imagine this would take quite a bit of computation power. Do you have a general estimate of how long it would take a $900 PC running 24/7 to simulate 2 months of trading? (assuming all the code is modified somehow for this to happen)\n\nThanks @jeff-hykin for these ideas.  Lets discuss these and other ideas below.\n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 1766,
    "issue_description_text": "Ideas for evaluating / backtesting trading models.\n\nFrom https://github.com/owocki/pytrader/issues/5#issuecomment-204250257 : \n\n> A quick way would be create a theoretical control group: (if you bought 1 BTC/ETH and held it for the same two months) and compare the profits.\n\nor \n\n> A second much more rigorous method (what I would do before even investing 1 real BTC) would be to get a collection of data from different markets and simulate PyTrader at random segments on them. This would be a true experiment and give a good idea of the actual profitability of the algorithm in the general market. But, I imagine this would take quite a bit of computation power. Do you have a general estimate of how long it would take a $900 PC running 24/7 to simulate 2 months of trading? (assuming all the code is modified somehow for this to happen)\n\nThanks @jeff-hykin for these ideas.  Lets discuss these and other ideas below.",
    "standard_bounties_id": 476,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/ProjectWyvern/wyvern-ethereum/11",
    "created_on": "2018-03-05T14:25:14.247042-07:00",
    "modified_on": "2018-03-14T07:30:20.221220-07:00",
    "title": "Manually pack Order struct to bytes to avoid unnecessary keccak256 (Gitcoin duplicate)",
    "web3_created": "2018-03-05T07:23:16-07:00",
    "value_in_token": "100000000000000000000.00",
    "token_name": "WYV",
    "token_address": "0x056017c55aE7AE32d12AeF7C679dF83A85ca75Ff",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Advanced",
    "github_url": "https://github.com/ProjectWyvern/wyvern-ethereum/issues/11",
    "github_comments": 2,
    "bounty_owner_address": "0x0084a81668b9a978416abeb88bc1572816cc7cac",
    "bounty_owner_email": "protinam@protonmail.ch",
    "bounty_owner_github_username": "protinam",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-04-04T07:23:16-07:00",
    "raw_data": {
      "id": 105,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Manually pack Order struct to bytes to avoid unnecessary keccak256 (Gitcoin duplicate)",
          "issuer": {
            "name": "Protinam",
            "email": "protinam@protonmail.ch",
            "address": "0x0084a81668b9a978416abeb88bc1572816cc7cac",
            "githubUsername": "protinam"
          },
          "created": 1520284996,
          "funders": [],
          "metadata": {
            "fullName": "Protinam",
            "tokenName": "WYV",
            "bountyType": "Feature",
            "issueTitle": "Manually pack Order struct to bytes to avoid unnecessary keccak256 (Gitcoin duplicate)",
            "issueKeywords": "wyvern, ethereum, solidity, evm, smart contracts",
            "projectLength": "Hours",
            "githubUsername": "protinam",
            "experienceLevel": "Advanced",
            "issueDescription": "Duplicate of https://github.com/ProjectWyvern/wyvern-ethereum/issues/9 so that an additional bounty can be created through Gitcoin, will be tracked along with that issue.",
            "notificationEmail": "protinam@protonmail.ch"
          },
          "tokenName": "WYV",
          "categories": [
            "wyvern",
            " ethereum",
            " solidity",
            " evm",
            " smart contracts"
          ],
          "description": "Duplicate of https://github.com/ProjectWyvern/wyvern-ethereum/issues/9 so that an additional bounty can be created through Gitcoin, will be tracked along with that issue.",
          "tokenAddress": "0x056017c55aE7AE32d12AeF7C679dF83A85ca75Ff",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/ProjectWyvern/wyvern-ethereum/issues/11",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x056017c55aE7AE32d12AeF7C679dF83A85ca75Ff",
      "issuer": "0x0084a81668B9A978416aBEB88bC1572816cc7cAC",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000000,
      "network": "mainnet",
      "deadline": 1522876996,
      "paysTokens": true,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000000
    },
    "metadata": {
      "fullName": "Protinam",
      "tokenName": "WYV",
      "bountyType": "Feature",
      "issueTitle": "Manually pack Order struct to bytes to avoid unnecessary keccak256 (Gitcoin duplicate)",
      "issueKeywords": "wyvern, ethereum, solidity, evm, smart contracts",
      "projectLength": "Hours",
      "githubUsername": "protinam",
      "experienceLevel": "Advanced",
      "issueDescription": "Duplicate of https://github.com/ProjectWyvern/wyvern-ethereum/issues/9 so that an additional bounty can be created through Gitcoin, will be tracked along with that issue.",
      "notificationEmail": "protinam@protonmail.ch"
    },
    "current_bounty": true,
    "value_in_eth": null,
    "value_in_usdt": null,
    "status": "open",
    "now": "2018-03-14T14:38:51.500474Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/33922324?v=4",
    "value_true": 100,
    "issue_description": "Duplicate of https://github.com/ProjectWyvern/wyvern-ethereum/issues/9 so that an additional bounty can be created through Gitcoin, will be tracked along with that issue.",
    "network": "mainnet",
    "org_name": "ProjectWyvern",
    "pk": 1751,
    "issue_description_text": "Duplicate of https://github.com/ProjectWyvern/wyvern-ethereum/issues/9 so that an additional bounty can be created through Gitcoin, will be tracked along with that issue.",
    "standard_bounties_id": 105,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/ProjectWyvern/wyvern-ethereum/9",
    "created_on": "2018-03-04T18:00:39.197167-07:00",
    "modified_on": "2018-03-14T07:30:25.617013-07:00",
    "title": "Manually pack Order struct to bytes to avoid unnecessary keccak256",
    "web3_created": "2018-03-04T10:58:56-07:00",
    "value_in_token": "30000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Advanced",
    "github_url": "https://github.com/ProjectWyvern/wyvern-ethereum/issues/9",
    "github_comments": 12,
    "bounty_owner_address": "0x0084a81668b9a978416abeb88bc1572816cc7cac",
    "bounty_owner_email": "protinam@protonmail.ch",
    "bounty_owner_github_username": "protinam",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-04-03T10:58:56-07:00",
    "raw_data": {
      "id": 101,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Manually pack Order struct to bytes to avoid unnecessary keccak256",
          "issuer": {
            "name": "Protinam",
            "email": "protinam@protonmail.ch",
            "address": "0x0084a81668b9a978416abeb88bc1572816cc7cac",
            "githubUsername": "protinam"
          },
          "created": 1520211536,
          "funders": [],
          "metadata": {
            "fullName": "Protinam",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Manually pack Order struct to bytes to avoid unnecessary keccak256",
            "issueKeywords": "wyvern-ethereum, wyvern, solidity, abi, smart contracts",
            "projectLength": "Hours",
            "githubUsername": "protinam",
            "experienceLevel": "Advanced",
            "issueDescription": "Due to Solidity stack size limitations, the current order hashing implementation ([here](https://github.com/ProjectWyvern/wyvern-ethereum/blob/master/contracts/exchange/ExchangeCore.sol#L235)) must hash orders in two parts. This is a waste of gas. Instead, manually \"tightly pack\" the Order struct into bytes following the Solidity's tight-packing convention (see [here](http://solidity.readthedocs.io/en/develop/abi-spec.html#abi-packed-mode)), which should result in one fewer calls to the `keccak256` builtin. Other ways of getting around Solidity's stack size limitation may be candidate solutions as long as they still decrease gas costs.\n\nMay be rendered easier by [this Solidity PR](https://github.com/ethereum/solidity/pull/2980), but I do not know what the timetable for that is.",
            "notificationEmail": "protinam@protonmail.ch"
          },
          "tokenName": "ETH",
          "categories": [
            "wyvern-ethereum",
            " wyvern",
            " solidity",
            " abi",
            " smart contracts"
          ],
          "description": "Due to Solidity stack size limitations, the current order hashing implementation ([here](https://github.com/ProjectWyvern/wyvern-ethereum/blob/master/contracts/exchange/ExchangeCore.sol#L235)) must hash orders in two parts. This is a waste of gas. Instead, manually \"tightly pack\" the Order struct into bytes following the Solidity's tight-packing convention (see [here](http://solidity.readthedocs.io/en/develop/abi-spec.html#abi-packed-mode)), which should result in one fewer calls to the `keccak256` builtin. Other ways of getting around Solidity's stack size limitation may be candidate solutions as long as they still decrease gas costs.\n\nMay be rendered easier by [this Solidity PR](https://github.com/ethereum/solidity/pull/2980), but I do not know what the timetable for that is.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/ProjectWyvern/wyvern-ethereum/issues/9",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x0084a81668B9A978416aBEB88bC1572816cc7cAC",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 30000000000000000,
      "network": "mainnet",
      "deadline": 1522803536,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 30000000000000000
    },
    "metadata": {
      "fullName": "Protinam",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Manually pack Order struct to bytes to avoid unnecessary keccak256",
      "issueKeywords": "wyvern-ethereum, wyvern, solidity, abi, smart contracts",
      "projectLength": "Hours",
      "githubUsername": "protinam",
      "experienceLevel": "Advanced",
      "issueDescription": "Due to Solidity stack size limitations, the current order hashing implementation ([here](https://github.com/ProjectWyvern/wyvern-ethereum/blob/master/contracts/exchange/ExchangeCore.sol#L235)) must hash orders in two parts. This is a waste of gas. Instead, manually \"tightly pack\" the Order struct into bytes following the Solidity's tight-packing convention (see [here](http://solidity.readthedocs.io/en/develop/abi-spec.html#abi-packed-mode)), which should result in one fewer calls to the `keccak256` builtin. Other ways of getting around Solidity's stack size limitation may be candidate solutions as long as they still decrease gas costs.\n\nMay be rendered easier by [this Solidity PR](https://github.com/ethereum/solidity/pull/2980), but I do not know what the timetable for that is.",
      "notificationEmail": "protinam@protonmail.ch"
    },
    "current_bounty": true,
    "value_in_eth": 30000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 19.59,
    "status": "open",
    "now": "2018-03-14T14:38:51.506515Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/33922324?v=4",
    "value_true": 0.03,
    "issue_description": "Due to Solidity stack size limitations, the current order hashing implementation ([here](https://github.com/ProjectWyvern/wyvern-ethereum/blob/master/contracts/exchange/ExchangeCore.sol#L235)) must hash orders in two parts. This is a waste of gas. Instead, manually \"tightly pack\" the Order struct into bytes following the Solidity tight-packing convention (see [here](http://solidity.readthedocs.io/en/develop/abi-spec.html#abi-packed-mode)), which should result in one fewer calls to the `keccak256` builtin. Other ways of getting around Solidity's stack size limitation may be candidate solutions as long as they still decrease gas costs.\r\n\r\nMay be rendered easier by [this Solidity PR](https://github.com/ethereum/solidity/pull/2980), but I do not know what the timetable for that is.",
    "network": "mainnet",
    "org_name": "ProjectWyvern",
    "pk": 1743,
    "issue_description_text": "Due to Solidity stack size limitations, the current order hashing implementation ([here](https://github.com/ProjectWyvern/wyvern-ethereum/blob/master/contracts/exchange/ExchangeCore.sol#L235)) must hash orders in two parts. This is a waste of gas. Instead, manually \"tightly pack\" the Order struct into bytes following the Solidity tight-packing convention (see [here](http://solidity.readthedocs.io/en/develop/abi-spec.html#abi-packed-mode)), which should result in one fewer calls to the `keccak256` builtin. Other ways of getting around Solidity's stack size limitation may be candidate solutions as long as they still decrease gas costs.\r\n\r\nMay be rendered easier by [this Solidity PR](https://github.com/ethereum/solidity/pull/2980), but I do not know what the timetable for that is.",
    "standard_bounties_id": 101,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mbeacom/test-repo/5",
    "created_on": "2018-03-03T00:19:50.279859-07:00",
    "modified_on": "2018-03-14T07:30:16.563836-07:00",
    "title": "Fifth Issue",
    "web3_created": "2018-03-02T07:26:48-07:00",
    "value_in_token": "50000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/mbeacom/test-repo/issues/5",
    "github_comments": 0,
    "bounty_owner_address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
    "bounty_owner_email": "mark.beacom@cirrustack.com",
    "bounty_owner_github_username": "mbeacom",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-03-02T07:26:48-07:00",
    "raw_data": {
      "id": 461,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Fifth Issue",
          "issuer": {
            "name": "Mark Beacom",
            "email": "mark.beacom@cirrustack.com",
            "address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
            "githubUsername": "mbeacom"
          },
          "created": 1520026008,
          "funders": [],
          "metadata": {
            "fullName": "Mark Beacom",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "Fifth Issue",
            "issueKeywords": "test-repo, mbeacom",
            "projectLength": "Unknown",
            "githubUsername": "mbeacom",
            "experienceLevel": "",
            "issueDescription": "Something about five...",
            "notificationEmail": "mark.beacom@cirrustack.com"
          },
          "tokenName": "ETH",
          "categories": [
            "test-repo",
            " mbeacom"
          ],
          "description": "Something about five...",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mbeacom/test-repo/issues/5",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x93d0deF1d76B510e2a7A6d01Cf18c54ec23f4253",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 50000000000000,
      "network": "rinkeby",
      "deadline": 1551562008,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 50000000000000
    },
    "metadata": {
      "fullName": "Mark Beacom",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Fifth Issue",
      "issueKeywords": "test-repo, mbeacom",
      "projectLength": "Unknown",
      "githubUsername": "mbeacom",
      "experienceLevel": "",
      "issueDescription": "Something about five...",
      "notificationEmail": "mark.beacom@cirrustack.com"
    },
    "current_bounty": true,
    "value_in_eth": 50000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.03,
    "status": "open",
    "now": "2018-03-14T14:38:51.512604Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4",
    "value_true": 0.00005,
    "issue_description": "Something about five...",
    "network": "rinkeby",
    "org_name": "mbeacom",
    "pk": 1729,
    "issue_description_text": "Something about five...",
    "standard_bounties_id": 461,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mbeacom/test-repo/4",
    "created_on": "2018-03-03T00:19:48.912352-07:00",
    "modified_on": "2018-03-14T07:30:16.448797-07:00",
    "title": "Fourth",
    "web3_created": "2018-03-02T07:24:50-07:00",
    "value_in_token": "50000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/mbeacom/test-repo/issues/4",
    "github_comments": 0,
    "bounty_owner_address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
    "bounty_owner_email": "mark.beacom@cirrustack.com",
    "bounty_owner_github_username": "mbeacom",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-03-02T07:24:50-07:00",
    "raw_data": {
      "id": 460,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Fourth",
          "issuer": {
            "name": "Mark Beacom",
            "email": "mark.beacom@cirrustack.com",
            "address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
            "githubUsername": "mbeacom"
          },
          "created": 1520025890,
          "funders": [],
          "metadata": {
            "fullName": "Mark Beacom",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "Fourth",
            "issueKeywords": "test-repo, mbeacom",
            "projectLength": "Unknown",
            "githubUsername": "mbeacom",
            "experienceLevel": "",
            "issueDescription": "Fourth times a charm!",
            "notificationEmail": "mark.beacom@cirrustack.com"
          },
          "tokenName": "ETH",
          "categories": [
            "test-repo",
            " mbeacom"
          ],
          "description": "Fourth times a charm!",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mbeacom/test-repo/issues/4",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x93d0deF1d76B510e2a7A6d01Cf18c54ec23f4253",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 50000000000000,
      "network": "rinkeby",
      "deadline": 1551561890,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 50000000000000
    },
    "metadata": {
      "fullName": "Mark Beacom",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Fourth",
      "issueKeywords": "test-repo, mbeacom",
      "projectLength": "Unknown",
      "githubUsername": "mbeacom",
      "experienceLevel": "",
      "issueDescription": "Fourth times a charm!",
      "notificationEmail": "mark.beacom@cirrustack.com"
    },
    "current_bounty": true,
    "value_in_eth": 50000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.03,
    "status": "open",
    "now": "2018-03-14T14:38:51.518467Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4",
    "value_true": 0.00005,
    "issue_description": "Fourth times a charm!",
    "network": "rinkeby",
    "org_name": "mbeacom",
    "pk": 1728,
    "issue_description_text": "Fourth times a charm!",
    "standard_bounties_id": 460,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mbeacom/test-repo/2",
    "created_on": "2018-03-03T00:19:46.082658-07:00",
    "modified_on": "2018-03-14T07:30:12.905148-07:00",
    "title": "Secondary issue",
    "web3_created": "2018-03-02T07:20:15-07:00",
    "value_in_token": "50000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/mbeacom/test-repo/issues/2",
    "github_comments": 0,
    "bounty_owner_address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
    "bounty_owner_email": "mark.beacom@cirrustack.com",
    "bounty_owner_github_username": "mbeacom",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-03-02T07:20:15-07:00",
    "raw_data": {
      "id": 458,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Secondary issue",
          "issuer": {
            "name": "Mark Beacom",
            "email": "mark.beacom@cirrustack.com",
            "address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
            "githubUsername": "mbeacom"
          },
          "created": 1520025615,
          "funders": [],
          "metadata": {
            "fullName": "Mark Beacom",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "Secondary issue",
            "issueKeywords": "test-repo, mbeacom",
            "projectLength": "Unknown",
            "githubUsername": "mbeacom",
            "experienceLevel": "",
            "issueDescription": "Another issue?!",
            "notificationEmail": "mark.beacom@cirrustack.com"
          },
          "tokenName": "ETH",
          "categories": [
            "test-repo",
            " mbeacom"
          ],
          "description": "Another issue?!",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mbeacom/test-repo/issues/2",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x93d0deF1d76B510e2a7A6d01Cf18c54ec23f4253",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 50000000000000,
      "network": "rinkeby",
      "deadline": 1551561615,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 50000000000000
    },
    "metadata": {
      "fullName": "Mark Beacom",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Secondary issue",
      "issueKeywords": "test-repo, mbeacom",
      "projectLength": "Unknown",
      "githubUsername": "mbeacom",
      "experienceLevel": "",
      "issueDescription": "Another issue?!",
      "notificationEmail": "mark.beacom@cirrustack.com"
    },
    "current_bounty": true,
    "value_in_eth": 50000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.03,
    "status": "open",
    "now": "2018-03-14T14:38:51.524212Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4",
    "value_true": 0.00005,
    "issue_description": "Another issue?!",
    "network": "rinkeby",
    "org_name": "mbeacom",
    "pk": 1726,
    "issue_description_text": "Another issue?!",
    "standard_bounties_id": 458,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/web/486",
    "created_on": "2018-03-02T00:19:36.927627-07:00",
    "modified_on": "2018-03-14T07:30:10.312059-07:00",
    "title": "html: removed left rails",
    "web3_created": "2018-03-01T16:08:30-07:00",
    "value_in_token": "1000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/gitcoinco/web/pull/486",
    "github_comments": 16,
    "bounty_owner_address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
    "bounty_owner_email": "aditya.anandmc@gmail.com",
    "bounty_owner_github_username": "thelostone-mc",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-03-01T16:08:30-07:00",
    "raw_data": {
      "id": 455,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "html: removed left rails",
          "issuer": {
            "name": "Aditya Anand M C",
            "email": "aditya.anandmc@gmail.com",
            "address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
            "githubUsername": "thelostone-mc"
          },
          "created": 1519970910,
          "funders": [],
          "metadata": {
            "fullName": "Aditya Anand M C",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "html: removed left rails",
            "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
            "projectLength": "Days",
            "githubUsername": "thelostone-mc",
            "experienceLevel": "Intermediate",
            "issueDescription": "NA",
            "notificationEmail": "aditya.anandmc@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "web",
            " gitcoinco",
            " JavaScript",
            " Python",
            " HTML",
            " CSS"
          ],
          "description": "NA",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/web/pull/486",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x997D35b300bA1775fdB175dF045252e57D6EA5B0",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000,
      "network": "rinkeby",
      "deadline": 1551506910,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000
    },
    "metadata": {
      "fullName": "Aditya Anand M C",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "html: removed left rails",
      "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
      "projectLength": "Days",
      "githubUsername": "thelostone-mc",
      "experienceLevel": "Intermediate",
      "issueDescription": "NA",
      "notificationEmail": "aditya.anandmc@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 1000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.65,
    "status": "open",
    "now": "2018-03-14T14:38:51.530300Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.001,
    "issue_description": "NA",
    "network": "rinkeby",
    "org_name": "gitcoinco",
    "pk": 1713,
    "issue_description_text": "NA",
    "standard_bounties_id": 455,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/romanjesus/gitcoinbot/1",
    "created_on": "2018-02-28T05:20:07.999199-07:00",
    "modified_on": "2018-03-14T07:30:18.375961-07:00",
    "title": "test issue",
    "web3_created": "2018-02-27T11:15:06-07:00",
    "value_in_token": "1000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/romanjesus/gitcoinbot/issues/1",
    "github_comments": 30,
    "bounty_owner_address": "0x74eb41202e7cbf4da1c9994f4eafeb267c7ccc10",
    "bounty_owner_email": "jroman@narrativescience.com",
    "bounty_owner_github_username": "romanjesus",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-27T11:15:06-07:00",
    "raw_data": {
      "id": 452,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "test issue",
          "issuer": {
            "name": "Jesus Roman",
            "email": "jroman@narrativescience.com",
            "address": "0x74eb41202e7cbf4da1c9994f4eafeb267c7ccc10",
            "githubUsername": "romanjesus"
          },
          "created": 1519780506,
          "funders": [],
          "metadata": {
            "fullName": "Jesus Roman",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "test issue",
            "issueKeywords": "gitcoinbot, romanjesus",
            "projectLength": "Unknown",
            "githubUsername": "romanjesus",
            "experienceLevel": "",
            "issueDescription": "This is a test issue",
            "notificationEmail": "jroman@narrativescience.com"
          },
          "tokenName": "ETH",
          "categories": [
            "gitcoinbot",
            " romanjesus"
          ],
          "description": "This is a test issue",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/romanjesus/gitcoinbot/issues/1",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x74eB41202E7cBf4dA1C9994f4EAFEB267C7CcC10",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000,
      "network": "rinkeby",
      "deadline": 1551316506,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000
    },
    "metadata": {
      "fullName": "Jesus Roman",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "test issue",
      "issueKeywords": "gitcoinbot, romanjesus",
      "projectLength": "Unknown",
      "githubUsername": "romanjesus",
      "experienceLevel": "",
      "issueDescription": "This is a test issue",
      "notificationEmail": "jroman@narrativescience.com"
    },
    "current_bounty": true,
    "value_in_eth": 1000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.65,
    "status": "open",
    "now": "2018-03-14T14:38:51.536714Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/19498034?v=4",
    "value_true": 0.001,
    "issue_description": "This is a test issue",
    "network": "rinkeby",
    "org_name": "romanjesus",
    "pk": 1701,
    "issue_description_text": "This is a test issue",
    "standard_bounties_id": 452,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mirceanis/stfc/3",
    "created_on": "2018-02-27T09:52:56.516397-07:00",
    "modified_on": "2018-03-14T07:30:18.708004-07:00",
    "title": "allow regex in filter options",
    "web3_created": "2018-02-27T02:52:06-07:00",
    "value_in_token": "1000000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Beginner",
    "github_url": "https://github.com/mirceanis/stfc/issues/3",
    "github_comments": 5,
    "bounty_owner_address": "0x34015bfcb36d716610d69cf036f29882909bdae3",
    "bounty_owner_email": "mirceanis@gmail.com",
    "bounty_owner_github_username": "mirceanis",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-29T02:52:06-07:00",
    "raw_data": {
      "id": 450,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "allow regex in filter options",
          "issuer": {
            "name": "",
            "email": "mirceanis@gmail.com",
            "address": "0x34015bfcb36d716610d69cf036f29882909bdae3",
            "githubUsername": "mirceanis"
          },
          "created": 1519750326,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "allow regex in filter options",
            "issueKeywords": "stfc, mirceanis, Groovy, stf",
            "projectLength": "Hours",
            "githubUsername": "mirceanis",
            "experienceLevel": "Beginner",
            "issueDescription": "When filtering by device serial, it would be nice to be able to use more advanced searches using regex.\n\nFor example, the command `stfc -acf serial=(asdf|ghjk|qwer)` should connect to the devices whose serials contain \"asdf\", \"ghjk\" or \"qwer\"\n\nThis would be useful for running scripts against a specific set of devices with a single `--alloc` and `--connect` command instead of an `--alloc` for each device and a final `--connect`",
            "notificationEmail": "mirceanis@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "stfc",
            " mirceanis",
            " Groovy",
            " stf"
          ],
          "description": "When filtering by device serial, it would be nice to be able to use more advanced searches using regex.\n\nFor example, the command `stfc -acf serial=(asdf|ghjk|qwer)` should connect to the devices whose serials contain \"asdf\", \"ghjk\" or \"qwer\"\n\nThis would be useful for running scripts against a specific set of devices with a single `--alloc` and `--connect` command instead of an `--alloc` for each device and a final `--connect`",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mirceanis/stfc/issues/3",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x34015bfCb36D716610D69Cf036f29882909bDae3",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000000,
      "network": "rinkeby",
      "deadline": 1522342326,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "allow regex in filter options",
      "issueKeywords": "stfc, mirceanis, Groovy, stf",
      "projectLength": "Hours",
      "githubUsername": "mirceanis",
      "experienceLevel": "Beginner",
      "issueDescription": "When filtering by device serial, it would be nice to be able to use more advanced searches using regex.\n\nFor example, the command `stfc -acf serial=(asdf|ghjk|qwer)` should connect to the devices whose serials contain \"asdf\", \"ghjk\" or \"qwer\"\n\nThis would be useful for running scripts against a specific set of devices with a single `--alloc` and `--connect` command instead of an `--alloc` for each device and a final `--connect`",
      "notificationEmail": "mirceanis@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 1000000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 652.99,
    "status": "open",
    "now": "2018-03-14T14:38:51.543009Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/965762?v=4",
    "value_true": 1,
    "issue_description": "When filtering by device serial, it would be nice to be able to use more advanced searches using regex.\r\n\r\nFor example, the command `stfc -acf serial=\"(asdf|ghjk|qwer)\"` should connect to the devices whose serials contain \"asdf\", \"ghjk\" or \"qwer\"\r\n\r\nThis would be useful for running scripts against a specific set of devices with a single `--alloc` and `--connect` command instead of an `--alloc` for each device and a final `--connect`",
    "network": "rinkeby",
    "org_name": "mirceanis",
    "pk": 1697,
    "issue_description_text": "When filtering by device serial, it would be nice to be able to use more advanced searches using regex.\r\n\r\nFor example, the command `stfc -acf serial=\"(asdf|ghjk|qwer)\"` should connect to the devices whose serials contain \"asdf\", \"ghjk\" or \"qwer\"\r\n\r\nThis would be useful for running scripts against a specific set of devices with a single `--alloc` and `--connect` command instead of an `--alloc` for each device and a final `--connect`",
    "standard_bounties_id": 450,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/4530",
    "created_on": "2018-02-23T17:19:49.565355-07:00",
    "modified_on": "2018-03-14T07:30:21.113915-07:00",
    "title": "Feature: Higher-level wormhole pattern",
    "web3_created": "2018-02-23T09:15:03-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/4530",
    "github_comments": 5,
    "bounty_owner_address": "0x577ec61db11b49286839f502481776f0be01104d",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-02-26T09:15:03-07:00",
    "raw_data": {
      "id": 449,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Feature: Higher-level wormhole pattern",
          "issuer": {
            "name": "Jason Haas",
            "email": "testing_standard_bounties@abc.com",
            "address": "0x577ec61db11b49286839f502481776f0be01104d",
            "githubUsername": "jasonrhaas"
          },
          "created": 1519427703,
          "funders": [],
          "metadata": {
            "fullName": "Jason Haas",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Feature: Higher-level wormhole pattern",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "Iâve been thinking about code that needs to render React nodes somewhere other than as a direct DOM child of a React component. With examples such as:- A user of [Tether](http://tether.io/), a library which sometimes needs to relocate the DOM node for positioning to work right.- A React `Popover`/`Dropdown`/`Dialog` component that planning to render its children as a decedent of `body` so it can position things correctly. (as a bonus this means a popover component can be passed directly to the button that controls it).- A React component that uses a 3rd party modal dialog library and renders its React children in the body created by that component.- This could also be slightly related to the need some people have to keep a DOM node around even when itâs not being rendered. (Assuming the implementation is able to React render into a detached node).The current pattern for these kind of use cases is for the component to `React.render` its children in a different DOM node and then `React.unmountComponentAtNode` when the component unmounts. Which as I understand it, is called the âwormholeâ pattern.However this pattern is problematic. With this method context is not passed to the children the way it should be. And while we âcouldâ add a way for a component to access the internal context itâs not supposed to see (the properties it hasnât declared) and allow `React.render` to accept that. That would expose internals in ways it shouldnât be exposed. And in the case that there is any other thing internal to react that should be passed on would not help.So we need a higher level api to declare faux/virtual/relocated âchildrenâ (pick a name) which render into a separate DOM component somewhere else in the dom but are still linked to another component (most components will simply pass `this` into the api).- The component is responsible for creating the DOM container and telling ReactDOM where it is.- This would be integrated into React(DOM) so context and any other piece of data would flow as it normally does.- The component would be responsible for cleaning up the container. Iâm unsure if React should be responsible for unmounting children from the faux/virtual/relocated location or if that would be another function.",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "Iâve been thinking about code that needs to render React nodes somewhere other than as a direct DOM child of a React component. With examples such as:- A user of [Tether](http://tether.io/), a library which sometimes needs to relocate the DOM node for positioning to work right.- A React `Popover`/`Dropdown`/`Dialog` component that planning to render its children as a decedent of `body` so it can position things correctly. (as a bonus this means a popover component can be passed directly to the button that controls it).- A React component that uses a 3rd party modal dialog library and renders its React children in the body created by that component.- This could also be slightly related to the need some people have to keep a DOM node around even when itâs not being rendered. (Assuming the implementation is able to React render into a detached node).The current pattern for these kind of use cases is for the component to `React.render` its children in a different DOM node and then `React.unmountComponentAtNode` when the component unmounts. Which as I understand it, is called the âwormholeâ pattern.However this pattern is problematic. With this method context is not passed to the children the way it should be. And while we âcouldâ add a way for a component to access the internal context itâs not supposed to see (the properties it hasnât declared) and allow `React.render` to accept that. That would expose internals in ways it shouldnât be exposed. And in the case that there is any other thing internal to react that should be passed on would not help.So we need a higher level api to declare faux/virtual/relocated âchildrenâ (pick a name) which render into a separate DOM component somewhere else in the dom but are still linked to another component (most components will simply pass `this` into the api).- The component is responsible for creating the DOM container and telling ReactDOM where it is.- This would be integrated into React(DOM) so context and any other piece of data would flow as it normally does.- The component would be responsible for cleaning up the container. Iâm unsure if React should be responsible for unmounting children from the faux/virtual/relocated location or if that would be another function.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/4530",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1519686903,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "Jason Haas",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Feature: Higher-level wormhole pattern",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "Iâve been thinking about code that needs to render React nodes somewhere other than as a direct DOM child of a React component. With examples such as:- A user of [Tether](http://tether.io/), a library which sometimes needs to relocate the DOM node for positioning to work right.- A React `Popover`/`Dropdown`/`Dialog` component that planning to render its children as a decedent of `body` so it can position things correctly. (as a bonus this means a popover component can be passed directly to the button that controls it).- A React component that uses a 3rd party modal dialog library and renders its React children in the body created by that component.- This could also be slightly related to the need some people have to keep a DOM node around even when itâs not being rendered. (Assuming the implementation is able to React render into a detached node).The current pattern for these kind of use cases is for the component to `React.render` its children in a different DOM node and then `React.unmountComponentAtNode` when the component unmounts. Which as I understand it, is called the âwormholeâ pattern.However this pattern is problematic. With this method context is not passed to the children the way it should be. And while we âcouldâ add a way for a component to access the internal context itâs not supposed to see (the properties it hasnât declared) and allow `React.render` to accept that. That would expose internals in ways it shouldnât be exposed. And in the case that there is any other thing internal to react that should be passed on would not help.So we need a higher level api to declare faux/virtual/relocated âchildrenâ (pick a name) which render into a separate DOM component somewhere else in the dom but are still linked to another component (most components will simply pass `this` into the api).- The component is responsible for creating the DOM container and telling ReactDOM where it is.- This would be integrated into React(DOM) so context and any other piece of data would flow as it normally does.- The component would be responsible for cleaning up the container. Iâm unsure if React should be responsible for unmounting children from the faux/virtual/relocated location or if that would be another function.",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.548897Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "I’ve been thinking about code that needs to render React nodes somewhere other than as a direct DOM child of a React component. With examples such as:\n- A user of [Tether](http://tether.io/), a library which sometimes needs to relocate the DOM node for positioning to work right.\n- A React `Popover`/`Dropdown`/`Dialog` component that planning to render its children as a decedent of `body` so it can position things correctly. (as a bonus this means a popover component can be passed directly to the button that controls it).\n- A React component that uses a 3rd party modal dialog library and renders its React children in the body created by that component.\n- This could also be slightly related to the need some people have to keep a DOM node around even when it’s not being rendered. (Assuming the implementation is able to React render into a detached node).\n\nThe current pattern for these kind of use cases is for the component to `React.render` its children in a different DOM node and then `React.unmountComponentAtNode` when the component unmounts. Which as I understand it, is called the “wormhole” pattern.\n\nHowever this pattern is problematic. With this method context is not passed to the children the way it should be. And while we ‘could’ add a way for a component to access the internal context it’s not supposed to see (the properties it hasn’t declared) and allow `React.render` to accept that. That would expose internals in ways it shouldn’t be exposed. And in the case that there is any other thing internal to react that should be passed on would not help.\n\nSo we need a higher level api to declare faux/virtual/relocated “children” (pick a name) which render into a separate DOM component somewhere else in the dom but are still linked to another component (most components will simply pass `this` into the api).\n- The component is responsible for creating the DOM container and telling ReactDOM where it is.\n- This would be integrated into React(DOM) so context and any other piece of data would flow as it normally does.\n- The component would be responsible for cleaning up the container. I’m unsure if React should be responsible for unmounting children from the faux/virtual/relocated location or if that would be another function.\n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 1677,
    "issue_description_text": "I’ve been thinking about code that needs to render React nodes somewhere other than as a direct DOM child of a React component. With examples such as:\n- A user of [Tether](http://tether.io/), a library which sometimes needs to relocate the DOM node for positioning to work right.\n- A React `Popover`/`Dropdown`/`Dialog` component that planning to render its children as a decedent of `body` so it can position things correctly. (as a bonus this means a popover component can be passed directly to the button that controls it).\n- A React component that uses a 3rd party modal dialog library and renders its React children in the body created by that component.\n- This could also be slightly related to the need some people have to keep a DOM node around even when it’s not being rendered. (Assuming the implementation is able to React render into a detached node).\n\nThe current pattern for these kind of use cases is for the component to `React.render` its children in a different DOM node and then `React.unmountComponentAtNode` when the component unmounts. Which as I understand it, is called the “wormhole” pattern.\n\nHowever this pattern is problematic. With this method context is not passed to the children the way it should be. And while we ‘could’ add a way for a component to access the internal context it’s not supposed to see (the properties it hasn’t declared) and allow `React.render` to accept that. That would expose internals in ways it shouldn’t be exposed. And in the case that there is any other thing internal to react that should be passed on would not help.\n\nSo we need a higher level api to declare faux/virtual/relocated “children” (pick a name) which render into a separate DOM component somewhere else in the dom but are still linked to another component (most components will simply pass `this` into the api).\n- The component is responsible for creating the DOM container and telling ReactDOM where it is.\n- This would be integrated into React(DOM) so context and any other piece of data would flow as it normally does.\n- The component would be responsible for cleaning up the container. I’m unsure if React should be responsible for unmounting children from the faux/virtual/relocated location or if that would be another function.",
    "standard_bounties_id": 449,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/6001",
    "created_on": "2018-02-23T17:19:48.349993-07:00",
    "modified_on": "2018-03-14T07:30:26.383431-07:00",
    "title": "Update fbjs from v0.6.x to v0.7.x",
    "web3_created": "2018-02-23T09:01:18-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/6001",
    "github_comments": 3,
    "bounty_owner_address": "0x577ec61db11b49286839f502481776f0be01104d",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-02-26T09:01:18-07:00",
    "raw_data": {
      "id": 448,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Update fbjs from v0.6.x to v0.7.x",
          "issuer": {
            "name": "Jason Haas",
            "email": "testing_standard_bounties@abc.com",
            "address": "0x577ec61db11b49286839f502481776f0be01104d",
            "githubUsername": "jasonrhaas"
          },
          "created": 1519426878,
          "funders": [],
          "metadata": {
            "fullName": "Jason Haas",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Update fbjs from v0.6.x to v0.7.x",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "npm v3 tries to dedupe the dependencies by default, and keeping dependencies up-to-date helps better deduplication.",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "npm v3 tries to dedupe the dependencies by default, and keeping dependencies up-to-date helps better deduplication.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/6001",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1519686078,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "Jason Haas",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Update fbjs from v0.6.x to v0.7.x",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "npm v3 tries to dedupe the dependencies by default, and keeping dependencies up-to-date helps better deduplication.",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.554757Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "npm v3 tries to dedupe the dependencies by default, and keeping dependencies up-to-date helps better deduplication.\n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 1676,
    "issue_description_text": "npm v3 tries to dedupe the dependencies by default, and keeping dependencies up-to-date helps better deduplication.",
    "standard_bounties_id": 448,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mbeacom/test-repo/16",
    "created_on": "2018-02-22T05:15:13.197016-07:00",
    "modified_on": "2018-03-14T07:30:12.603202-07:00",
    "title": "16",
    "web3_created": "2018-02-20T08:58:44-07:00",
    "value_in_token": "100000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/mbeacom/test-repo/issues/16",
    "github_comments": 0,
    "bounty_owner_address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
    "bounty_owner_email": "mark.beacom@cirrustack.com",
    "bounty_owner_github_username": "mbeacom",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-20T08:58:44-07:00",
    "raw_data": {
      "id": 443,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "16",
          "issuer": {
            "name": "Mark Beacom",
            "email": "mark.beacom@cirrustack.com",
            "address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
            "githubUsername": "mbeacom"
          },
          "created": 1519167524,
          "funders": [],
          "metadata": {
            "fullName": "Mark Beacom",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "16",
            "issueKeywords": "test-repo, mbeacom",
            "projectLength": "Unknown",
            "githubUsername": "mbeacom",
            "experienceLevel": "",
            "issueDescription": "16",
            "notificationEmail": "mark.beacom@cirrustack.com"
          },
          "tokenName": "ETH",
          "categories": [
            "test-repo",
            " mbeacom"
          ],
          "description": "16",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mbeacom/test-repo/issues/16",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x93d0deF1d76B510e2a7A6d01Cf18c54ec23f4253",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000,
      "network": "rinkeby",
      "deadline": 1550703524,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000
    },
    "metadata": {
      "fullName": "Mark Beacom",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "16",
      "issueKeywords": "test-repo, mbeacom",
      "projectLength": "Unknown",
      "githubUsername": "mbeacom",
      "experienceLevel": "",
      "issueDescription": "16",
      "notificationEmail": "mark.beacom@cirrustack.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.07,
    "status": "open",
    "now": "2018-03-14T14:38:51.560843Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4",
    "value_true": 0.0001,
    "issue_description": "16",
    "network": "rinkeby",
    "org_name": "mbeacom",
    "pk": 1511,
    "issue_description_text": "16",
    "standard_bounties_id": 443,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mbeacom/test-repo/15",
    "created_on": "2018-02-22T05:15:11.567235-07:00",
    "modified_on": "2018-03-14T07:30:14.741379-07:00",
    "title": "15",
    "web3_created": "2018-02-20T07:34:55-07:00",
    "value_in_token": "100000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/mbeacom/test-repo/issues/15",
    "github_comments": 0,
    "bounty_owner_address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
    "bounty_owner_email": "mark.beacom@cirrustack.com",
    "bounty_owner_github_username": "mbeacom",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-20T07:34:55-07:00",
    "raw_data": {
      "id": 442,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "15",
          "issuer": {
            "name": "Mark Beacom",
            "email": "mark.beacom@cirrustack.com",
            "address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
            "githubUsername": "mbeacom"
          },
          "created": 1519162495,
          "funders": [],
          "metadata": {
            "fullName": "Mark Beacom",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "15",
            "issueKeywords": "test-repo, mbeacom",
            "projectLength": "Unknown",
            "githubUsername": "mbeacom",
            "experienceLevel": "",
            "issueDescription": "15",
            "notificationEmail": "mark.beacom@cirrustack.com"
          },
          "tokenName": "ETH",
          "categories": [
            "test-repo",
            " mbeacom"
          ],
          "description": "15",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mbeacom/test-repo/issues/15",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x93d0deF1d76B510e2a7A6d01Cf18c54ec23f4253",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000,
      "network": "rinkeby",
      "deadline": 1550698495,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000
    },
    "metadata": {
      "fullName": "Mark Beacom",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "15",
      "issueKeywords": "test-repo, mbeacom",
      "projectLength": "Unknown",
      "githubUsername": "mbeacom",
      "experienceLevel": "",
      "issueDescription": "15",
      "notificationEmail": "mark.beacom@cirrustack.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.07,
    "status": "open",
    "now": "2018-03-14T14:38:51.566527Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4",
    "value_true": 0.0001,
    "issue_description": "15",
    "network": "rinkeby",
    "org_name": "mbeacom",
    "pk": 1510,
    "issue_description_text": "15",
    "standard_bounties_id": 442,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mbeacom/test-repo/14",
    "created_on": "2018-02-23T05:20:17.510087-07:00",
    "modified_on": "2018-03-14T07:30:17.217718-07:00",
    "title": "14",
    "web3_created": "2018-02-19T09:29:50-07:00",
    "value_in_token": "100000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/mbeacom/test-repo/issues/14",
    "github_comments": 0,
    "bounty_owner_address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
    "bounty_owner_email": "mark.beacom@cirrustack.com",
    "bounty_owner_github_username": "mbeacom",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-19T09:29:50-07:00",
    "raw_data": {
      "id": 440,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "14",
          "issuer": {
            "name": "Mark Beacom",
            "email": "mark.beacom@cirrustack.com",
            "address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
            "githubUsername": "mbeacom"
          },
          "created": 1519082990,
          "funders": [],
          "metadata": {
            "fullName": "Mark Beacom",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "14",
            "issueKeywords": "test-repo, mbeacom",
            "projectLength": "Unknown",
            "githubUsername": "mbeacom",
            "experienceLevel": "",
            "issueDescription": "14",
            "notificationEmail": "mark.beacom@cirrustack.com"
          },
          "tokenName": "ETH",
          "categories": [
            "test-repo",
            " mbeacom"
          ],
          "description": "14",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mbeacom/test-repo/issues/14",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x93d0deF1d76B510e2a7A6d01Cf18c54ec23f4253",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000,
      "network": "rinkeby",
      "deadline": 1550618990,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000
    },
    "metadata": {
      "fullName": "Mark Beacom",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "14",
      "issueKeywords": "test-repo, mbeacom",
      "projectLength": "Unknown",
      "githubUsername": "mbeacom",
      "experienceLevel": "",
      "issueDescription": "14",
      "notificationEmail": "mark.beacom@cirrustack.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.07,
    "status": "open",
    "now": "2018-03-14T14:38:51.572266Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4",
    "value_true": 0.0001,
    "issue_description": "14",
    "network": "rinkeby",
    "org_name": "mbeacom",
    "pk": 1661,
    "issue_description_text": "14",
    "standard_bounties_id": 440,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/mbeacom/test-repo/13",
    "created_on": "2018-02-23T05:20:10.182545-07:00",
    "modified_on": "2018-03-14T07:30:12.619296-07:00",
    "title": "13",
    "web3_created": "2018-02-18T06:48:44-07:00",
    "value_in_token": "100000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/mbeacom/test-repo/issues/13",
    "github_comments": 0,
    "bounty_owner_address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
    "bounty_owner_email": "mark.beacom@cirrustack.com",
    "bounty_owner_github_username": "mbeacom",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-18T06:48:44-07:00",
    "raw_data": {
      "id": 433,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "13",
          "issuer": {
            "name": "Mark Beacom",
            "email": "mark.beacom@cirrustack.com",
            "address": "0x93d0def1d76b510e2a7a6d01cf18c54ec23f4253",
            "githubUsername": "mbeacom"
          },
          "created": 1518986924,
          "funders": [],
          "metadata": {
            "fullName": "Mark Beacom",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "13",
            "issueKeywords": "test-repo, mbeacom",
            "projectLength": "Unknown",
            "githubUsername": "mbeacom",
            "experienceLevel": "",
            "issueDescription": "13",
            "notificationEmail": "mark.beacom@cirrustack.com"
          },
          "tokenName": "ETH",
          "categories": [
            "test-repo",
            " mbeacom"
          ],
          "description": "13",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/mbeacom/test-repo/issues/13",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x93d0deF1d76B510e2a7A6d01Cf18c54ec23f4253",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000,
      "network": "rinkeby",
      "deadline": 1550522924,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000
    },
    "metadata": {
      "fullName": "Mark Beacom",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "13",
      "issueKeywords": "test-repo, mbeacom",
      "projectLength": "Unknown",
      "githubUsername": "mbeacom",
      "experienceLevel": "",
      "issueDescription": "13",
      "notificationEmail": "mark.beacom@cirrustack.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.07,
    "status": "open",
    "now": "2018-03-14T14:38:51.578210Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7315957?v=4",
    "value_true": 0.0001,
    "issue_description": "13",
    "network": "rinkeby",
    "org_name": "mbeacom",
    "pk": 1660,
    "issue_description_text": "13",
    "standard_bounties_id": 433,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/web/285",
    "created_on": "2018-02-23T05:19:58.858449-07:00",
    "modified_on": "2018-03-14T07:30:16.535850-07:00",
    "title": "https://github.com/gitcoinco/web/pull/285",
    "web3_created": "2018-02-18T02:33:01-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Mentorship",
    "project_length": "Hours",
    "experience_level": "Beginner",
    "github_url": "https://github.com/gitcoinco/web/pull/285",
    "github_comments": 6,
    "bounty_owner_address": "0xdbcc1bfaacf822071b011c5e7d842617b23d27c1",
    "bounty_owner_email": "mitchkosowski@gmail.com",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-20T02:33:07-07:00",
    "raw_data": {
      "id": 424,
      "data": {
        "meta": {
          "platform": "mentorcoin",
          "schemaName": "mentorcoinBounty",
          "schemaVersion": "0.0.1"
        },
        "payload": {
          "title": "https://github.com/gitcoinco/web/pull/285",
          "issuer": {
            "name": "Mitch K.",
            "email": "mitchkosowski@gmail.com",
            "address": "0xdbcc1bfaacf822071b011c5e7d842617b23d27c1"
          },
          "created": 1518971581,
          "funders": [],
          "metadata": {
            "fullName": "Mitch K.",
            "tokenName": "ETH",
            "bountyType": "Mentorship",
            "issueTitle": "https://github.com/gitcoinco/web/pull/285",
            "issueKeywords": "",
            "projectLength": "Hours",
            "experienceLevel": "Beginner",
            "issueDescription": "Help please!!!",
            "notificationEmail": "mitchkosowski@gmail.com"
          },
          "categories": [
            ""
          ],
          "description": "Help please!!!",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/web/pull/285",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0xdBCc1BfAACf822071B011c5E7d842617B23d27C1",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1521563587,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "Mitch K.",
      "tokenName": "ETH",
      "bountyType": "Mentorship",
      "issueTitle": "https://github.com/gitcoinco/web/pull/285",
      "issueKeywords": "",
      "projectLength": "Hours",
      "experienceLevel": "Beginner",
      "issueDescription": "Help please!!!",
      "notificationEmail": "mitchkosowski@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": null,
    "value_in_usdt": null,
    "status": "open",
    "now": "2018-03-14T14:38:51.586682Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.01,
    "issue_description": "Help please!!!",
    "network": "rinkeby",
    "org_name": "gitcoinco",
    "pk": 1659,
    "issue_description_text": "Help please!!!",
    "standard_bounties_id": 424,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/2423",
    "created_on": "2018-02-17T20:10:35.918680-07:00",
    "modified_on": "2018-03-14T07:30:21.909844-07:00",
    "title": "Bug in 0.12 (and 0.11.2) — type.apply error: type,apply is not a function",
    "web3_created": "2018-02-17T13:08:41-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/2423",
    "github_comments": 15,
    "bounty_owner_address": "0x8da7a61894ddfc484dd9ff93a0a1f5065ec764c9",
    "bounty_owner_email": "jasonrhaas@gmail.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-17T13:08:41-07:00",
    "raw_data": {
      "id": 414,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Bug in 0.12 (and 0.11.2) â type.apply error: type,apply is not a function",
          "issuer": {
            "name": "",
            "email": "jasonrhaas@gmail.com",
            "address": "0x8da7a61894ddfc484dd9ff93a0a1f5065ec764c9",
            "githubUsername": "jasonrhaas"
          },
          "created": 1518923321,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Bug in 0.12 (and 0.11.2) â type.apply error: type,apply is not a function",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "",
            "notificationEmail": "jasonrhaas@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/2423",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x8da7A61894DDfC484Dd9ff93A0A1f5065Ec764C9",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "rinkeby",
      "deadline": 1550459321,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Bug in 0.12 (and 0.11.2) â type.apply error: type,apply is not a function",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "",
      "notificationEmail": "jasonrhaas@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.592535Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.1,
    "issue_description": "I've reverted all my commits tonight only to learn that Reactjs stopped being awesome.\n\nSpecifically, I nuked my node_modules to get a fresh npm install and then this happened...\n\n![screen shot 2014-10-29 at 1 47 06 am](https://cloud.githubusercontent.com/assets/463577/4822389/fc0d11be-5f40-11e4-97fa-660d28caf191.png)\n\n...which led me to this...\n\n![screen shot 2014-10-29 at 1 47 40 am](https://cloud.githubusercontent.com/assets/463577/4822390/ff2932ec-5f40-11e4-94bd-49f07a1de86d.png)\n\nWhen I look at the type object in debugger, it has no apply function. But, if does have type.render.apply() function.\n\nI'm not sure why this changed but it did. \n\nMy package.json looks like [this](https://gist.github.com/roycehaynes/c6bb5c725e492127f5b0)\n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 1015,
    "issue_description_text": "I've reverted all my commits tonight only to learn that Reactjs stopped being awesome.\n\nSpecifically, I nuked my node_modules to get a fresh npm install and then this happened...\n\n![screen shot 2014-10-29 at 1 47 06 am](https://cloud.githubusercontent.com/assets/463577/4822389/fc0d11be-5f40-11e4-97fa-660d28caf191.png)\n\n...which led me to this...\n\n![screen shot 2014-10-29 at 1 47 40 am](https://cloud.githubusercontent.com/assets/463577/4822390/ff2932ec-5f40-11e4-94bd-49f07a1de86d.png)\n\nWhen I look at the type object in debugger, it has no apply function. But, if does have type.render.apply() function.\n\nI'm not sure why this changed but it did. \n\nMy package.json looks like [this](https://gist.github.com/roycehaynes/c6bb5c725e492127f5b0)",
    "standard_bounties_id": 414,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/funding/details?url=https://google.com",
    "created_on": "2018-02-23T05:19:44.826206-07:00",
    "modified_on": "2018-03-14T07:30:15.702421-07:00",
    "title": "https://google.com",
    "web3_created": "2018-02-17T11:56:18-07:00",
    "value_in_token": "1000000000000000.00",
    "token_name": "",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Mentorship",
    "project_length": "Hours",
    "experience_level": "Beginner",
    "github_url": "https://google.com",
    "github_comments": 0,
    "bounty_owner_address": "0xd0dea891328e5ae76efda4c54d96883ef1fefec4",
    "bounty_owner_email": "jordanspeizer@gmail.com",
    "bounty_owner_github_username": "speizerj",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-19T11:56:20-07:00",
    "raw_data": {
      "id": 413,
      "data": {
        "meta": {
          "platform": "mentorcoin",
          "schemaName": "mentorcoinBounty",
          "schemaVersion": "0.0.1"
        },
        "payload": {
          "title": "https://google.com",
          "issuer": {
            "name": "Jordan Speizer",
            "email": "jordanspeizer@gmail.com",
            "address": "0xd0dea891328e5ae76efda4c54d96883ef1fefec4",
            "githubUsername": "speizerj"
          },
          "created": 1518918978,
          "funders": [],
          "metadata": {
            "fullName": "Jordan Speizer",
            "tokenName": "ETH",
            "bountyType": "Mentorship",
            "issueTitle": "https://google.com",
            "issueKeywords": "",
            "projectLength": "Hours",
            "githubUsername": "speizerj",
            "experienceLevel": "Beginner",
            "issueDescription": "",
            "notificationEmail": "jordanspeizer@gmail.com"
          },
          "categories": [
            ""
          ],
          "description": "",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://google.com",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0xD0deA891328E5Ae76EFDA4C54D96883Ef1FeFEc4",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000,
      "network": "rinkeby",
      "deadline": 1521510980,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000
    },
    "metadata": {
      "fullName": "Jordan Speizer",
      "tokenName": "ETH",
      "bountyType": "Mentorship",
      "issueTitle": "https://google.com",
      "issueKeywords": "",
      "projectLength": "Hours",
      "githubUsername": "speizerj",
      "experienceLevel": "Beginner",
      "issueDescription": "",
      "notificationEmail": "jordanspeizer@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": null,
    "value_in_usdt": null,
    "status": "open",
    "now": "2018-03-14T14:38:51.601785Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/31359507?v=4",
    "value_true": 0.001,
    "issue_description": "",
    "network": "rinkeby",
    "org_name": null,
    "pk": 1653,
    "issue_description_text": "",
    "standard_bounties_id": 413,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/thelostone-mc/holo/3",
    "created_on": "2018-02-17T17:14:16.938108-07:00",
    "modified_on": "2018-03-14T07:30:19.799431-07:00",
    "title": "RinkeyBy TestNet",
    "web3_created": "2018-02-15T14:40:17-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/thelostone-mc/holo/issues/3",
    "github_comments": 0,
    "bounty_owner_address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
    "bounty_owner_email": "aditya.anandmc@gmail.com",
    "bounty_owner_github_username": "thelostone-mc",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-15T14:40:17-07:00",
    "raw_data": {
      "id": 399,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "RinkeyBy TestNet",
          "issuer": {
            "name": "Aditya Anand M C",
            "email": "aditya.anandmc@gmail.com",
            "address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
            "githubUsername": "thelostone-mc"
          },
          "created": 1518756017,
          "funders": [],
          "metadata": {
            "fullName": "Aditya Anand M C",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "RinkeyBy TestNet",
            "issueKeywords": "holo, thelostone-mc",
            "projectLength": "Unknown",
            "githubUsername": "thelostone-mc",
            "experienceLevel": "",
            "issueDescription": "https://github.com/thelostone-mc /holo/issues/2https://github.com/thelostone-mc/holo/issues/2https://github.com/thelostone-mc/holo/issues/2 https://github.com/thelostone-mc/holo/issues/2",
            "notificationEmail": "aditya.anandmc@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "holo",
            " thelostone-mc"
          ],
          "description": "https://github.com/thelostone-mc /holo/issues/2https://github.com/thelostone-mc/holo/issues/2https://github.com/thelostone-mc/holo/issues/2 https://github.com/thelostone-mc/holo/issues/2",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/thelostone-mc/holo/issues/3",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x997D35b300bA1775fdB175dF045252e57D6EA5B0",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 110000000000000000,
      "network": "rinkeby",
      "deadline": 1550292017,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "Aditya Anand M C",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "RinkeyBy TestNet",
      "issueKeywords": "holo, thelostone-mc",
      "projectLength": "Unknown",
      "githubUsername": "thelostone-mc",
      "experienceLevel": "",
      "issueDescription": "https://github.com/thelostone-mc /holo/issues/2https://github.com/thelostone-mc/holo/issues/2https://github.com/thelostone-mc/holo/issues/2 https://github.com/thelostone-mc/holo/issues/2",
      "notificationEmail": "aditya.anandmc@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.607714Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/5358146?v=4",
    "value_true": 0.01,
    "issue_description": "https://github.com/thelostone-mc /holo/issues/2https://github.com/thelostone-mc/holo/issues/2https://github.com/thelostone-mc/holo/issues/2 https://github.com/thelostone-mc/holo/issues/2",
    "network": "rinkeby",
    "org_name": "thelostone-mc",
    "pk": 1002,
    "issue_description_text": "https://github.com/thelostone-mc /holo/issues/2https://github.com/thelostone-mc/holo/issues/2https://github.com/thelostone-mc/holo/issues/2 https://github.com/thelostone-mc/holo/issues/2",
    "standard_bounties_id": 399,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/3004",
    "created_on": "2018-02-15T17:15:53.020115-07:00",
    "modified_on": "2018-03-14T07:30:18.250668-07:00",
    "title": "How can I access dom node now, ES6",
    "web3_created": "2018-02-15T08:49:50-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/3004",
    "github_comments": 2,
    "bounty_owner_address": "0x577ec61db11b49286839f502481776f0be01104d",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-02-18T08:49:50-07:00",
    "raw_data": {
      "id": 398,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "How can I access dom node now, ES6",
          "issuer": {
            "name": "Max Me Merger",
            "email": "testing_standard_bounties@abc.com",
            "address": "0x577ec61db11b49286839f502481776f0be01104d",
            "githubUsername": "jasonrhaas"
          },
          "created": 1518734990,
          "funders": [],
          "metadata": {
            "fullName": "Max Me Merger",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "How can I access dom node now, ES6",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "I just noticed getDOMNode doesn't work anymore.`Warning: getDOMNode(...) is deprecated in plain JavaScript React classes.`What's the new way for doing this?",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "I just noticed getDOMNode doesn't work anymore.`Warning: getDOMNode(...) is deprecated in plain JavaScript React classes.`What's the new way for doing this?",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/3004",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1518994190,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "Max Me Merger",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "How can I access dom node now, ES6",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "I just noticed getDOMNode doesn't work anymore.`Warning: getDOMNode(...) is deprecated in plain JavaScript React classes.`What's the new way for doing this?",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.613600Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "I just noticed getDOMNode doesn't work anymore.\n\n`Warning: getDOMNode(...) is deprecated in plain JavaScript React classes.`\n\nWhat's the new way for doing this?\n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 840,
    "issue_description_text": "I just noticed getDOMNode doesn't work anymore.\n\n`Warning: getDOMNode(...) is deprecated in plain JavaScript React classes.`\n\nWhat's the new way for doing this?",
    "standard_bounties_id": 398,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/web/455",
    "created_on": "2018-02-20T15:03:26.354243-07:00",
    "modified_on": "2018-03-14T07:30:14.577014-07:00",
    "title": "void",
    "web3_created": "2018-02-15T01:37:57-07:00",
    "value_in_token": "30000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Weeks",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/gitcoinco/web/issues/455",
    "github_comments": 7,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-17T01:37:57-07:00",
    "raw_data": {
      "id": 56,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Detect \"Referencing\" as \"Work\"",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1518709077,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Detect \"Referencing\" as \"Work\"",
            "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
            "projectLength": "Weeks",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "I'm working on this funded issue:\n\nethereum/web3.py/issues/549\n\nI got an email from gitcoin (similar to: #394), but it should have detected the references (to other, related issues) that I made. (splitting the main issue into sub-tasks/issues).\n\n### Expected:\n\nGitcoin detects references, and resets its work-inactivity-counter.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "web",
            " gitcoinco",
            " JavaScript",
            " Python",
            " HTML",
            " CSS"
          ],
          "description": "I'm working on this funded issue:\n\nethereum/web3.py/issues/549\n\nI got an email from gitcoin (similar to: #394), but it should have detected the references (to other, related issues) that I made. (splitting the main issue into sub-tasks/issues).\n\n### Expected:\n\nGitcoin detects references, and resets its work-inactivity-counter.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/web/issues/455",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 30000000000000000,
      "network": "mainnet",
      "deadline": 1521301077,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 30000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Detect \"Referencing\" as \"Work\"",
      "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
      "projectLength": "Weeks",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "I'm working on this funded issue:\n\nethereum/web3.py/issues/549\n\nI got an email from gitcoin (similar to: #394), but it should have detected the references (to other, related issues) that I made. (splitting the main issue into sub-tasks/issues).\n\n### Expected:\n\nGitcoin detects references, and resets its work-inactivity-counter.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 30000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 19.59,
    "status": "open",
    "now": "2018-03-14T14:38:51.620242Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.03,
    "issue_description": "I'm working on this funded issue:\r\n\r\nethereum/web3.py/issues/549\r\n\r\nI got an email from gitcoin (similar to: #394), but it should have detected the references (to other, related issues) that I made. (splitting the main issue into sub-tasks/issues).\r\n\r\n### Expected:\r\n\r\nGitcoin detects references, and resets its work-inactivity-counter.\r\n",
    "network": "mainnet",
    "org_name": "gitcoinco",
    "pk": 1369,
    "issue_description_text": "I'm working on this funded issue:\r\n\r\nethereum/web3.py/issues/549\r\n\r\nI got an email from gitcoin (similar to: #394), but it should have detected the references (to other, related issues) that I made. (splitting the main issue into sub-tasks/issues).\r\n\r\n### Expected:\r\n\r\nGitcoin detects references, and resets its work-inactivity-counter.",
    "standard_bounties_id": 56,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/MetaMask/metamask-extension/3133",
    "created_on": "2018-02-20T15:03:04.871380-07:00",
    "modified_on": "2018-03-14T07:30:19.075018-07:00",
    "title": "MetaMask blocked in Firefox by CSP",
    "web3_created": "2018-02-14T12:53:15-07:00",
    "value_in_token": "105000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/MetaMask/metamask-extension/issues/3133",
    "github_comments": 11,
    "bounty_owner_address": "0x87054a1ab0706f913c332298fa61dc75e3635e63",
    "bounty_owner_email": "",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-14T12:53:15-07:00",
    "raw_data": {
      "id": 46,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "MetaMask blocked in Firefox by CSP",
          "issuer": {
            "name": "Marcus",
            "email": "",
            "address": "0x87054a1ab0706f913c332298fa61dc75e3635e63",
            "githubUsername": ""
          },
          "created": 1518663195,
          "funders": [],
          "metadata": {
            "fullName": "Marcus",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "MetaMask blocked in Firefox by CSP",
            "issueKeywords": "metamask-extension, MetaMask, JavaScript, CSS, HTML",
            "projectLength": "Unknown",
            "githubUsername": "",
            "experienceLevel": "",
            "issueDescription": "Hey, as far as I can tell, my content security policy is preventing MetaMask from injecting its scripts. This is only happening in Firefox. It works correctly in Chrome, Safari, Opera, and Brave. My `script-src` directive looks like this:\n```\nscript-src 'self';\n```\nand I'm seeing this csp violation in the js console:\n```\nContent Security Policy: The pageâs settings blocked the loading of a resource at self. Source: (function e(t,n,r){function s(o,u){if(!n ....\n```\n\nUnfortunately Firefox only shows a preview of the blocked script. I've tried sha256 hashing each of the scripts in the latest Metamask release and adding them to the CSP, but that did not work. If you have any ideas that would be great!\n\n<b>Browser:</b> Firefox 58.0.1\n<b>Operating System:</b> Mac OSX 10.13.2",
            "notificationEmail": ""
          },
          "tokenName": "ETH",
          "categories": [
            "metamask-extension",
            " MetaMask",
            " JavaScript",
            " CSS",
            " HTML"
          ],
          "description": "Hey, as far as I can tell, my content security policy is preventing MetaMask from injecting its scripts. This is only happening in Firefox. It works correctly in Chrome, Safari, Opera, and Brave. My `script-src` directive looks like this:\n```\nscript-src 'self';\n```\nand I'm seeing this csp violation in the js console:\n```\nContent Security Policy: The pageâs settings blocked the loading of a resource at self. Source: (function e(t,n,r){function s(o,u){if(!n ....\n```\n\nUnfortunately Firefox only shows a preview of the blocked script. I've tried sha256 hashing each of the scripts in the latest Metamask release and adding them to the CSP, but that did not work. If you have any ideas that would be great!\n\n<b>Browser:</b> Firefox 58.0.1\n<b>Operating System:</b> Mac OSX 10.13.2",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/MetaMask/metamask-extension/issues/3133",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x87054a1aB0706F913c332298Fa61DC75E3635e63",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 105000000000000000,
      "network": "mainnet",
      "deadline": 1550199195,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 105000000000000000
    },
    "metadata": {
      "fullName": "Marcus",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "MetaMask blocked in Firefox by CSP",
      "issueKeywords": "metamask-extension, MetaMask, JavaScript, CSS, HTML",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "issueDescription": "Hey, as far as I can tell, my content security policy is preventing MetaMask from injecting its scripts. This is only happening in Firefox. It works correctly in Chrome, Safari, Opera, and Brave. My `script-src` directive looks like this:\n```\nscript-src 'self';\n```\nand I'm seeing this csp violation in the js console:\n```\nContent Security Policy: The pageâs settings blocked the loading of a resource at self. Source: (function e(t,n,r){function s(o,u){if(!n ....\n```\n\nUnfortunately Firefox only shows a preview of the blocked script. I've tried sha256 hashing each of the scripts in the latest Metamask release and adding them to the CSP, but that did not work. If you have any ideas that would be great!\n\n<b>Browser:</b> Firefox 58.0.1\n<b>Operating System:</b> Mac OSX 10.13.2",
      "notificationEmail": ""
    },
    "current_bounty": true,
    "value_in_eth": 105000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 68.56,
    "status": "open",
    "now": "2018-03-14T14:38:51.626391Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/11744586?v=4",
    "value_true": 0.105,
    "issue_description": "Hey, as far as I can tell, my content security policy is preventing MetaMask from injecting its scripts. This is only happening in Firefox. It works correctly in Chrome, Safari, Opera, and Brave. My `script-src` directive looks like this:\r\n```\r\nscript-src 'self';\r\n```\r\nand I'm seeing this csp violation in the js console:\r\n```\r\nContent Security Policy: The page’s settings blocked the loading of a resource at self. Source: (function e(t,n,r){function s(o,u){if(!n ....\r\n```\r\n\r\nUnfortunately Firefox only shows a preview of the blocked script. I've tried sha256 hashing each of the scripts in the latest Metamask release and adding them to the CSP, but that did not work. If you have any ideas that would be great!\r\n\r\n<b>Browser:</b> Firefox 58.0.1\r\n<b>Operating System:</b> Mac OSX 10.13.2\r\n",
    "network": "mainnet",
    "org_name": "MetaMask",
    "pk": 1360,
    "issue_description_text": "Hey, as far as I can tell, my content security policy is preventing MetaMask from injecting its scripts. This is only happening in Firefox. It works correctly in Chrome, Safari, Opera, and Brave. My `script-src` directive looks like this:\r\n```\r\nscript-src 'self';\r\n```\r\nand I'm seeing this csp violation in the js console:\r\n```\r\nContent Security Policy: The page’s settings blocked the loading of a resource at self. Source: (function e(t,n,r){function s(o,u){if(!n ....\r\n```\r\n\r\nUnfortunately Firefox only shows a preview of the blocked script. I've tried sha256 hashing each of the scripts in the latest Metamask release and adding them to the CSP, but that did not work. If you have any ideas that would be great!\r\n\r\nBrowser: Firefox 58.0.1\r\nOperating System: Mac OSX 10.13.2",
    "standard_bounties_id": 46,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/bhenze/CryptoTracker/1",
    "created_on": "2018-02-23T05:19:24.838204-07:00",
    "modified_on": "2018-03-14T07:30:18.873222-07:00",
    "title": "Test",
    "web3_created": "2018-02-14T09:02:45-07:00",
    "value_in_token": "2299999999999999700.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/bhenze/CryptoTracker/issues/1",
    "github_comments": 0,
    "bounty_owner_address": "0xfa430db7848660f7f95e597eba2b8fb8c21501b6",
    "bounty_owner_email": "brian.henze@hashrebel.com",
    "bounty_owner_github_username": "bhenze",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-14T09:02:45-07:00",
    "raw_data": {
      "id": 397,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Test",
          "issuer": {
            "name": "Brian Henze",
            "email": "brian.henze@hashrebel.com",
            "address": "0xfa430db7848660f7f95e597eba2b8fb8c21501b6",
            "githubUsername": "bhenze"
          },
          "created": 1518649365,
          "funders": [],
          "metadata": {
            "fullName": "Brian Henze",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "Test",
            "issueKeywords": "CryptoTracker, bhenze",
            "projectLength": "Unknown",
            "githubUsername": "bhenze",
            "experienceLevel": "",
            "issueDescription": "",
            "notificationEmail": "brian.henze@hashrebel.com"
          },
          "tokenName": "ETH",
          "categories": [
            "CryptoTracker",
            " bhenze"
          ],
          "description": "",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/bhenze/CryptoTracker/issues/1",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0xfA430Db7848660f7F95E597EBa2b8fB8C21501B6",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 2299999999999999700,
      "network": "rinkeby",
      "deadline": 1550185365,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 2299999999999999700
    },
    "metadata": {
      "fullName": "Brian Henze",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Test",
      "issueKeywords": "CryptoTracker, bhenze",
      "projectLength": "Unknown",
      "githubUsername": "bhenze",
      "experienceLevel": "",
      "issueDescription": "",
      "notificationEmail": "brian.henze@hashrebel.com"
    },
    "current_bounty": true,
    "value_in_eth": 2299999999999999700,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 1501.88,
    "status": "open",
    "now": "2018-03-14T14:38:51.631952Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/6530500?v=4",
    "value_true": 2.3,
    "issue_description": "",
    "network": "rinkeby",
    "org_name": "bhenze",
    "pk": 1643,
    "issue_description_text": "",
    "standard_bounties_id": 397,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/KennethAshley/link/1",
    "created_on": "2018-02-15T17:15:50.593864-07:00",
    "modified_on": "2018-03-14T07:30:17.788549-07:00",
    "title": "test issue",
    "web3_created": "2018-02-14T08:56:01-07:00",
    "value_in_token": "20000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/KennethAshley/link/issues/1",
    "github_comments": 0,
    "bounty_owner_address": "0x807eabfd9e07dc2c70fce2c7563c05489cfde2fe",
    "bounty_owner_email": "ken.u.diggitt@gmail.com",
    "bounty_owner_github_username": "KennethAshley",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-14T08:56:01-07:00",
    "raw_data": {
      "id": 396,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "test issue",
          "issuer": {
            "name": "Kenneth Ashley",
            "email": "ken.u.diggitt@gmail.com",
            "address": "0x807eabfd9e07dc2c70fce2c7563c05489cfde2fe",
            "githubUsername": "KennethAshley"
          },
          "created": 1518648961,
          "funders": [],
          "metadata": {
            "fullName": "Kenneth Ashley",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "test issue",
            "issueKeywords": "link, KennethAshley, JavaScript",
            "projectLength": "Unknown",
            "githubUsername": "KennethAshley",
            "experienceLevel": "",
            "issueDescription": "Test",
            "notificationEmail": "ken.u.diggitt@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "link",
            " KennethAshley",
            " JavaScript"
          ],
          "description": "Test",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/KennethAshley/link/issues/1",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x807eABFD9E07DC2C70fCE2C7563c05489CfDe2FE",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 20000000000000000,
      "network": "rinkeby",
      "deadline": 1550184961,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 20000000000000000
    },
    "metadata": {
      "fullName": "Kenneth Ashley",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "test issue",
      "issueKeywords": "link, KennethAshley, JavaScript",
      "projectLength": "Unknown",
      "githubUsername": "KennethAshley",
      "experienceLevel": "",
      "issueDescription": "Test",
      "notificationEmail": "ken.u.diggitt@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 20000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 13.06,
    "status": "open",
    "now": "2018-03-14T14:38:51.638252Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/1138619?v=4",
    "value_true": 0.02,
    "issue_description": "Test",
    "network": "rinkeby",
    "org_name": "KennethAshley",
    "pk": 838,
    "issue_description_text": "Test",
    "standard_bounties_id": 396,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/MetaMask/metamask-extension/3249",
    "created_on": "2018-02-20T15:02:57.699009-07:00",
    "modified_on": "2018-03-14T07:30:29.836366-07:00",
    "title": "Create visually customizable keyring format",
    "web3_created": "2018-02-14T05:25:01-07:00",
    "value_in_token": "1100000000000000100.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Advanced",
    "github_url": "https://github.com/MetaMask/metamask-extension/issues/3249",
    "github_comments": 7,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-05-15T05:25:01-07:00",
    "raw_data": {
      "id": 42,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Create visually customizable keyring format",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1518636301,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Create visually customizable keyring format",
            "issueKeywords": "metamask-extension, MetaMask, JavaScript, CSS, HTML",
            "projectLength": "Hours",
            "githubUsername": "owocki",
            "experienceLevel": "Advanced",
            "issueDescription": "Opening for discussion, to hone the approach and criteria for the goal of allowing arbitrary signers to be added to MetaMask.\n\nExtending from #328, but adding a visual component. The related design issue is #731. This could be done in parallel with #731 as long as it was kept design-agnostic.\n\nBlocking #717, #605, #716.\n\n# MetaMask Mutli-Signer Acceptance Criteria\n\nAn Aspect of MetaMask that has waited far too long is our ability to support multiple signing strategies. At time of writing, MetaMask only accepts two types of signer (both key pairs), the 12-word mnemonic, and the imported private key.\n\nGoing forward, MetaMask strives to allow users to sign blockchain transactions representing any of a multitude of strategies, including:\n\n- Hardware Wallets (Ledger, Trezor, Firefly)\n- Offline Signers (copy the params, paste the signed tx, or all QR codes?)\n- Contract Based Accounts (Multi Sig, uPort, 2FA, etc)\n- Remote/Hosted signers (Imagine if Coinbase signed as a service)\n\n## The Keyring Class\n\nOur initial effort towards this end was defining [The Keyring Class](https://github.com/MetaMask/eth-simple-keyring#the-keyring-class-protocol), a JavaScript protocol that objects can adhere to, and be added to MetaMask as new signing strategies.\n\nWhat we never added to the Keyring protocol was a notion of custom signing views, which would definitely be necessary for things like offline signers or contract based accounts, since these might have options, preferences, and parameters that only relate to that view itself.\n\n## The Work To Go\n\nThis work would be composed of several sub-features, which should stem from our New UI work, which currently lives on the `uat` branch (hopefully to merge this week and deploy next).\n\nA complete implementation of this platform would be to implement a single minimum-viable new signing strategy (like the Ledger, or an offline signer with custom UI). The exact signer would not be as important as the platform's easy extensibility.\n\nThe roadmap would roughly include:\n\n- The account list should group by Keyring, with headers.\n- The `import account` view should list a new signer type.\n- That new signer import screen should include whatever that signer requires to set up. (Opening in new tab is probably a good idea for a complex form).\n- When an account from that signer is selected, and a transaction is proposed, this signer would get to provide its own confirmation screen/view.\n\n## Confirmation View Considerations\n\nThe confirmation view itself is not perfectly defined. Currently our confirmation screen strives to provide all info that the user needs to approve a signature, and no other action is required, since MetaMask holds those keys.\n\nFor something like a hardware wallet, it is easy to imagine that a subsequent screen or series of steps could be provided after this confirmation screen, and this might be acceptable for only adding Ledger support, but other signers have other requirements!\n\nConsider a multi-sig or contract account. The confirmation screen in this scenario would need to refer to either:\n- The transaction the user intends to send\n- The transaction to their contract account, which will then proxy that other transaction.\n\nSince the former is the one that is intelliglbe to the user, we might prefer to show this by default, but since the latter would show the gas parameters that are actually relevant to the user, it is clear that the actual confirmation screen for a contract account would need to be some kind of fusion.\n\nFor this reason, custom confirmation screens and flows probably need to be (at least an optional) customization provided by new Keychains.\n\n## Signer Composability\n\nThe last major criteria, and some might argue whether it is truly a requirement, would be signer composability. This is the notion that some signers might require another signer to sign, and so MetaMask could empower these signers greatly by providing the user options of how to compose their signers.\n\nFor example, in the case of a multi-sig wallet, a user might add a contract account which will forward any transaction which includes a signature from two of its authorized keys. The user might hold one key on their phone, and one key on their computer.\n\nThis detail could be left to the custom signer, and as a minimum viable product, that might be what we agree to do. However, what if the user wants their local key to be a hardware wallet? In this case, the user wants to use a contract account, which might impose a spending limit, and they only want to keep their keys on a hardware device. I don't think we should expect each contract wallet keyring author to implement their own hardware wallet support, and so MetaMask could offer some powerful leverage for contract wallets by allowing signers to be arbitrarily composed.\n\nIn the most complicated case, this might mean a hardware wallet is authorized to sign fot a contract identity which is authorized to sign for a multi-sig account.\n\nI know, this may be premature optimization, and we can definitely ship smaller pieces sooner, but I think keeping a consideration for this long-term path could help our architecture stay flexible going forward, because I think signer composability is eventually going to be an obviously desired feature; People will want to browse web3 sites on behalf of organizations that they are part of, and they will want to propose transactions to that organization, and they will propose those transactions from their uPort identities (contract accounts), which they will likely authorize from their phones or hardware devices.\n\n## Acceptable Formats\n\nIdeally, Keyrings themselves can be defined within a specified bundle or module, paving the way for a \"signer store\", so that eventually we can further abstract the job of selecting signers away from the core codebase to whatever mechanism we agree is the most secure and usable.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "metamask-extension",
            " MetaMask",
            " JavaScript",
            " CSS",
            " HTML"
          ],
          "description": "Opening for discussion, to hone the approach and criteria for the goal of allowing arbitrary signers to be added to MetaMask.\n\nExtending from #328, but adding a visual component. The related design issue is #731. This could be done in parallel with #731 as long as it was kept design-agnostic.\n\nBlocking #717, #605, #716.\n\n# MetaMask Mutli-Signer Acceptance Criteria\n\nAn Aspect of MetaMask that has waited far too long is our ability to support multiple signing strategies. At time of writing, MetaMask only accepts two types of signer (both key pairs), the 12-word mnemonic, and the imported private key.\n\nGoing forward, MetaMask strives to allow users to sign blockchain transactions representing any of a multitude of strategies, including:\n\n- Hardware Wallets (Ledger, Trezor, Firefly)\n- Offline Signers (copy the params, paste the signed tx, or all QR codes?)\n- Contract Based Accounts (Multi Sig, uPort, 2FA, etc)\n- Remote/Hosted signers (Imagine if Coinbase signed as a service)\n\n## The Keyring Class\n\nOur initial effort towards this end was defining [The Keyring Class](https://github.com/MetaMask/eth-simple-keyring#the-keyring-class-protocol), a JavaScript protocol that objects can adhere to, and be added to MetaMask as new signing strategies.\n\nWhat we never added to the Keyring protocol was a notion of custom signing views, which would definitely be necessary for things like offline signers or contract based accounts, since these might have options, preferences, and parameters that only relate to that view itself.\n\n## The Work To Go\n\nThis work would be composed of several sub-features, which should stem from our New UI work, which currently lives on the `uat` branch (hopefully to merge this week and deploy next).\n\nA complete implementation of this platform would be to implement a single minimum-viable new signing strategy (like the Ledger, or an offline signer with custom UI). The exact signer would not be as important as the platform's easy extensibility.\n\nThe roadmap would roughly include:\n\n- The account list should group by Keyring, with headers.\n- The `import account` view should list a new signer type.\n- That new signer import screen should include whatever that signer requires to set up. (Opening in new tab is probably a good idea for a complex form).\n- When an account from that signer is selected, and a transaction is proposed, this signer would get to provide its own confirmation screen/view.\n\n## Confirmation View Considerations\n\nThe confirmation view itself is not perfectly defined. Currently our confirmation screen strives to provide all info that the user needs to approve a signature, and no other action is required, since MetaMask holds those keys.\n\nFor something like a hardware wallet, it is easy to imagine that a subsequent screen or series of steps could be provided after this confirmation screen, and this might be acceptable for only adding Ledger support, but other signers have other requirements!\n\nConsider a multi-sig or contract account. The confirmation screen in this scenario would need to refer to either:\n- The transaction the user intends to send\n- The transaction to their contract account, which will then proxy that other transaction.\n\nSince the former is the one that is intelliglbe to the user, we might prefer to show this by default, but since the latter would show the gas parameters that are actually relevant to the user, it is clear that the actual confirmation screen for a contract account would need to be some kind of fusion.\n\nFor this reason, custom confirmation screens and flows probably need to be (at least an optional) customization provided by new Keychains.\n\n## Signer Composability\n\nThe last major criteria, and some might argue whether it is truly a requirement, would be signer composability. This is the notion that some signers might require another signer to sign, and so MetaMask could empower these signers greatly by providing the user options of how to compose their signers.\n\nFor example, in the case of a multi-sig wallet, a user might add a contract account which will forward any transaction which includes a signature from two of its authorized keys. The user might hold one key on their phone, and one key on their computer.\n\nThis detail could be left to the custom signer, and as a minimum viable product, that might be what we agree to do. However, what if the user wants their local key to be a hardware wallet? In this case, the user wants to use a contract account, which might impose a spending limit, and they only want to keep their keys on a hardware device. I don't think we should expect each contract wallet keyring author to implement their own hardware wallet support, and so MetaMask could offer some powerful leverage for contract wallets by allowing signers to be arbitrarily composed.\n\nIn the most complicated case, this might mean a hardware wallet is authorized to sign fot a contract identity which is authorized to sign for a multi-sig account.\n\nI know, this may be premature optimization, and we can definitely ship smaller pieces sooner, but I think keeping a consideration for this long-term path could help our architecture stay flexible going forward, because I think signer composability is eventually going to be an obviously desired feature; People will want to browse web3 sites on behalf of organizations that they are part of, and they will want to propose transactions to that organization, and they will propose those transactions from their uPort identities (contract accounts), which they will likely authorize from their phones or hardware devices.\n\n## Acceptable Formats\n\nIdeally, Keyrings themselves can be defined within a specified bundle or module, paving the way for a \"signer store\", so that eventually we can further abstract the job of selecting signers away from the core codebase to whatever mechanism we agree is the most secure and usable.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/MetaMask/metamask-extension/issues/3249",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1100000000000000100,
      "network": "mainnet",
      "deadline": 1526412301,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1100000000000000100
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Create visually customizable keyring format",
      "issueKeywords": "metamask-extension, MetaMask, JavaScript, CSS, HTML",
      "projectLength": "Hours",
      "githubUsername": "owocki",
      "experienceLevel": "Advanced",
      "issueDescription": "Opening for discussion, to hone the approach and criteria for the goal of allowing arbitrary signers to be added to MetaMask.\n\nExtending from #328, but adding a visual component. The related design issue is #731. This could be done in parallel with #731 as long as it was kept design-agnostic.\n\nBlocking #717, #605, #716.\n\n# MetaMask Mutli-Signer Acceptance Criteria\n\nAn Aspect of MetaMask that has waited far too long is our ability to support multiple signing strategies. At time of writing, MetaMask only accepts two types of signer (both key pairs), the 12-word mnemonic, and the imported private key.\n\nGoing forward, MetaMask strives to allow users to sign blockchain transactions representing any of a multitude of strategies, including:\n\n- Hardware Wallets (Ledger, Trezor, Firefly)\n- Offline Signers (copy the params, paste the signed tx, or all QR codes?)\n- Contract Based Accounts (Multi Sig, uPort, 2FA, etc)\n- Remote/Hosted signers (Imagine if Coinbase signed as a service)\n\n## The Keyring Class\n\nOur initial effort towards this end was defining [The Keyring Class](https://github.com/MetaMask/eth-simple-keyring#the-keyring-class-protocol), a JavaScript protocol that objects can adhere to, and be added to MetaMask as new signing strategies.\n\nWhat we never added to the Keyring protocol was a notion of custom signing views, which would definitely be necessary for things like offline signers or contract based accounts, since these might have options, preferences, and parameters that only relate to that view itself.\n\n## The Work To Go\n\nThis work would be composed of several sub-features, which should stem from our New UI work, which currently lives on the `uat` branch (hopefully to merge this week and deploy next).\n\nA complete implementation of this platform would be to implement a single minimum-viable new signing strategy (like the Ledger, or an offline signer with custom UI). The exact signer would not be as important as the platform's easy extensibility.\n\nThe roadmap would roughly include:\n\n- The account list should group by Keyring, with headers.\n- The `import account` view should list a new signer type.\n- That new signer import screen should include whatever that signer requires to set up. (Opening in new tab is probably a good idea for a complex form).\n- When an account from that signer is selected, and a transaction is proposed, this signer would get to provide its own confirmation screen/view.\n\n## Confirmation View Considerations\n\nThe confirmation view itself is not perfectly defined. Currently our confirmation screen strives to provide all info that the user needs to approve a signature, and no other action is required, since MetaMask holds those keys.\n\nFor something like a hardware wallet, it is easy to imagine that a subsequent screen or series of steps could be provided after this confirmation screen, and this might be acceptable for only adding Ledger support, but other signers have other requirements!\n\nConsider a multi-sig or contract account. The confirmation screen in this scenario would need to refer to either:\n- The transaction the user intends to send\n- The transaction to their contract account, which will then proxy that other transaction.\n\nSince the former is the one that is intelliglbe to the user, we might prefer to show this by default, but since the latter would show the gas parameters that are actually relevant to the user, it is clear that the actual confirmation screen for a contract account would need to be some kind of fusion.\n\nFor this reason, custom confirmation screens and flows probably need to be (at least an optional) customization provided by new Keychains.\n\n## Signer Composability\n\nThe last major criteria, and some might argue whether it is truly a requirement, would be signer composability. This is the notion that some signers might require another signer to sign, and so MetaMask could empower these signers greatly by providing the user options of how to compose their signers.\n\nFor example, in the case of a multi-sig wallet, a user might add a contract account which will forward any transaction which includes a signature from two of its authorized keys. The user might hold one key on their phone, and one key on their computer.\n\nThis detail could be left to the custom signer, and as a minimum viable product, that might be what we agree to do. However, what if the user wants their local key to be a hardware wallet? In this case, the user wants to use a contract account, which might impose a spending limit, and they only want to keep their keys on a hardware device. I don't think we should expect each contract wallet keyring author to implement their own hardware wallet support, and so MetaMask could offer some powerful leverage for contract wallets by allowing signers to be arbitrarily composed.\n\nIn the most complicated case, this might mean a hardware wallet is authorized to sign fot a contract identity which is authorized to sign for a multi-sig account.\n\nI know, this may be premature optimization, and we can definitely ship smaller pieces sooner, but I think keeping a consideration for this long-term path could help our architecture stay flexible going forward, because I think signer composability is eventually going to be an obviously desired feature; People will want to browse web3 sites on behalf of organizations that they are part of, and they will want to propose transactions to that organization, and they will propose those transactions from their uPort identities (contract accounts), which they will likely authorize from their phones or hardware devices.\n\n## Acceptable Formats\n\nIdeally, Keyrings themselves can be defined within a specified bundle or module, paving the way for a \"signer store\", so that eventually we can further abstract the job of selecting signers away from the core codebase to whatever mechanism we agree is the most secure and usable.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 1100000000000000100,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 718.29,
    "status": "open",
    "now": "2018-03-14T14:38:51.644247Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/11744586?v=4",
    "value_true": 1.1,
    "issue_description": "Opening for discussion, to hone the approach and criteria for the goal of allowing arbitrary signers to be added to MetaMask.\r\n\r\nExtending from #328, but adding a visual component. The related design issue is #731. This could be done in parallel with #731 as long as it was kept design-agnostic.\r\n\r\nBlocking #717, #605, #716.\r\n\r\n# MetaMask Mutli-Signer Acceptance Criteria\r\n\r\nAn Aspect of MetaMask that has waited far too long is our ability to support multiple signing strategies. At time of writing, MetaMask only accepts two types of signer (both key pairs), the 12-word mnemonic, and the imported private key.\r\n\r\nGoing forward, MetaMask strives to allow users to sign blockchain transactions representing any of a multitude of strategies, including:\r\n\r\n- Hardware Wallets (Ledger, Trezor, Firefly)\r\n- Offline Signers (copy the params, paste the signed tx, or all QR codes?)\r\n- Contract Based Accounts (Multi Sig, uPort, 2FA, etc)\r\n- Remote/Hosted signers (Imagine if Coinbase signed as a service)\r\n\r\n## The Keyring Class\r\n\r\nOur initial effort towards this end was defining [The Keyring Class](https://github.com/MetaMask/eth-simple-keyring#the-keyring-class-protocol), a JavaScript protocol that objects can adhere to, and be added to MetaMask as new signing strategies.\r\n\r\nWhat we never added to the Keyring protocol was a notion of custom signing views, which would definitely be necessary for things like offline signers or contract based accounts, since these might have options, preferences, and parameters that only relate to that view itself.\r\n\r\n## The Work To Go\r\n\r\nThis work would be composed of several sub-features, which should stem from our New UI work, which currently lives on the `uat` branch (hopefully to merge this week and deploy next).\r\n\r\nA complete implementation of this platform would be to implement a single minimum-viable new signing strategy (like the Ledger, or an offline signer with custom UI). The exact signer would not be as important as the platform's easy extensibility.\r\n\r\nThe roadmap would roughly include:\r\n\r\n- The account list should group by Keyring, with headers.\r\n- The `import account` view should list a new signer type.\r\n- That new signer import screen should include whatever that signer requires to set up. (Opening in new tab is probably a good idea for a complex form).\r\n- When an account from that signer is selected, and a transaction is proposed, this signer would get to provide its own confirmation screen/view.\r\n\r\n## Confirmation View Considerations\r\n\r\nThe confirmation view itself is not perfectly defined. Currently our confirmation screen strives to provide all info that the user needs to approve a signature, and no other action is required, since MetaMask holds those keys.\r\n\r\nFor something like a hardware wallet, it is easy to imagine that a subsequent screen or series of steps could be provided after this confirmation screen, and this might be acceptable for only adding Ledger support, but other signers have other requirements!\r\n\r\nConsider a multi-sig or contract account. The confirmation screen in this scenario would need to refer to either:\r\n- The transaction the user intends to send\r\n- The transaction to their contract account, which will then proxy that other transaction.\r\n\r\nSince the former is the one that is intelliglbe to the user, we might prefer to show this by default, but since the latter would show the gas parameters that are actually relevant to the user, it is clear that the actual confirmation screen for a contract account would need to be some kind of fusion.\r\n\r\nFor this reason, custom confirmation screens and flows probably need to be (at least an optional) customization provided by new Keychains.\r\n\r\n## Signer Composability\r\n\r\nThe last major criteria, and some might argue whether it is truly a requirement, would be signer composability. This is the notion that some signers might require another signer to sign, and so MetaMask could empower these signers greatly by providing the user options of how to compose their signers.\r\n\r\nFor example, in the case of a multi-sig wallet, a user might add a contract account which will forward any transaction which includes a signature from two of its authorized keys. The user might hold one key on their phone, and one key on their computer.\r\n\r\nThis detail could be left to the custom signer, and as a minimum viable product, that might be what we agree to do. However, what if the user wants their local key to be a hardware wallet? In this case, the user wants to use a contract account, which might impose a spending limit, and they only want to keep their keys on a hardware device. I don't think we should expect each contract wallet keyring author to implement their own hardware wallet support, and so MetaMask could offer some powerful leverage for contract wallets by allowing signers to be arbitrarily composed.\r\n\r\nIn the most complicated case, this might mean a hardware wallet is authorized to sign fot a contract identity which is authorized to sign for a multi-sig account.\r\n\r\nI know, this may be premature optimization, and we can definitely ship smaller pieces sooner, but I think keeping a consideration for this long-term path could help our architecture stay flexible going forward, because I think signer composability is eventually going to be an obviously desired feature; People will want to browse web3 sites on behalf of organizations that they are part of, and they will want to propose transactions to that organization, and they will propose those transactions from their uPort identities (contract accounts), which they will likely authorize from their phones or hardware devices.\r\n\r\n## Acceptable Formats\r\n\r\nIdeally, Keyrings themselves can be defined within a specified bundle or module, paving the way for a \"signer store\", so that eventually we can further abstract the job of selecting signers away from the core codebase to whatever mechanism we agree is the most secure and usable.",
    "network": "mainnet",
    "org_name": "MetaMask",
    "pk": 1357,
    "issue_description_text": "Opening for discussion, to hone the approach and criteria for the goal of allowing arbitrary signers to be added to MetaMask.\r\n\r\nExtending from #328, but adding a visual component. The related design issue is #731. This could be done in parallel with #731 as long as it was kept design-agnostic.\r\n\r\nBlocking #717, #605, #716.\r\n\r\n# MetaMask Mutli-Signer Acceptance Criteria\r\n\r\nAn Aspect of MetaMask that has waited far too long is our ability to support multiple signing strategies. At time of writing, MetaMask only accepts two types of signer (both key pairs), the 12-word mnemonic, and the imported private key.\r\n\r\nGoing forward, MetaMask strives to allow users to sign blockchain transactions representing any of a multitude of strategies, including:\r\n\r\n- Hardware Wallets (Ledger, Trezor, Firefly)\r\n- Offline Signers (copy the params, paste the signed tx, or all QR codes?)\r\n- Contract Based Accounts (Multi Sig, uPort, 2FA, etc)\r\n- Remote/Hosted signers (Imagine if Coinbase signed as a service)\r\n\r\n## The Keyring Class\r\n\r\nOur initial effort towards this end was defining [The Keyring Class](https://github.com/MetaMask/eth-simple-keyring#the-keyring-class-protocol), a JavaScript protocol that objects can adhere to, and be added to MetaMask as new signing strategies.\r\n\r\nWhat we never added to the Keyring protocol was a notion of custom signing views, which would definitely be necessary for things like offline signers or contract based accounts, since these might have options, preferences, and parameters that only relate to that view itself.\r\n\r\n## The Work To Go\r\n\r\nThis work would be composed of several sub-features, which should stem from our New UI work, which currently lives on the `uat` branch (hopefully to merge this week and deploy next).\r\n\r\nA complete implementation of this platform would be to implement a single minimum-viable new signing strategy (like the Ledger, or an offline signer with custom UI). The exact signer would not be as important as the platform's easy extensibility.\r\n\r\nThe roadmap would roughly include:\r\n\r\n- The account list should group by Keyring, with headers.\r\n- The `import account` view should list a new signer type.\r\n- That new signer import screen should include whatever that signer requires to set up. (Opening in new tab is probably a good idea for a complex form).\r\n- When an account from that signer is selected, and a transaction is proposed, this signer would get to provide its own confirmation screen/view.\r\n\r\n## Confirmation View Considerations\r\n\r\nThe confirmation view itself is not perfectly defined. Currently our confirmation screen strives to provide all info that the user needs to approve a signature, and no other action is required, since MetaMask holds those keys.\r\n\r\nFor something like a hardware wallet, it is easy to imagine that a subsequent screen or series of steps could be provided after this confirmation screen, and this might be acceptable for only adding Ledger support, but other signers have other requirements!\r\n\r\nConsider a multi-sig or contract account. The confirmation screen in this scenario would need to refer to either:\r\n- The transaction the user intends to send\r\n- The transaction to their contract account, which will then proxy that other transaction.\r\n\r\nSince the former is the one that is intelliglbe to the user, we might prefer to show this by default, but since the latter would show the gas parameters that are actually relevant to the user, it is clear that the actual confirmation screen for a contract account would need to be some kind of fusion.\r\n\r\nFor this reason, custom confirmation screens and flows probably need to be (at least an optional) customization provided by new Keychains.\r\n\r\n## Signer Composability\r\n\r\nThe last major criteria, and some might argue whether it is truly a requirement, would be signer composability. This is the notion that some signers might require another signer to sign, and so MetaMask could empower these signers greatly by providing the user options of how to compose their signers.\r\n\r\nFor example, in the case of a multi-sig wallet, a user might add a contract account which will forward any transaction which includes a signature from two of its authorized keys. The user might hold one key on their phone, and one key on their computer.\r\n\r\nThis detail could be left to the custom signer, and as a minimum viable product, that might be what we agree to do. However, what if the user wants their local key to be a hardware wallet? In this case, the user wants to use a contract account, which might impose a spending limit, and they only want to keep their keys on a hardware device. I don't think we should expect each contract wallet keyring author to implement their own hardware wallet support, and so MetaMask could offer some powerful leverage for contract wallets by allowing signers to be arbitrarily composed.\r\n\r\nIn the most complicated case, this might mean a hardware wallet is authorized to sign fot a contract identity which is authorized to sign for a multi-sig account.\r\n\r\nI know, this may be premature optimization, and we can definitely ship smaller pieces sooner, but I think keeping a consideration for this long-term path could help our architecture stay flexible going forward, because I think signer composability is eventually going to be an obviously desired feature; People will want to browse web3 sites on behalf of organizations that they are part of, and they will want to propose transactions to that organization, and they will propose those transactions from their uPort identities (contract accounts), which they will likely authorize from their phones or hardware devices.\r\n\r\n## Acceptable Formats\r\n\r\nIdeally, Keyrings themselves can be defined within a specified bundle or module, paving the way for a \"signer store\", so that eventually we can further abstract the job of selecting signers away from the core codebase to whatever mechanism we agree is the most secure and usable.",
    "standard_bounties_id": 42,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/web/445",
    "created_on": "2018-02-20T15:02:54.235704-07:00",
    "modified_on": "2018-03-14T07:30:17.400716-07:00",
    "title": "better bounds checking in kill/submit/accept bounty",
    "web3_created": "2018-02-14T04:17:16-07:00",
    "value_in_token": "90000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Advanced",
    "github_url": "https://github.com/gitcoinco/web/issues/445",
    "github_comments": 6,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-05-15T04:17:16-07:00",
    "raw_data": {
      "id": 40,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "better bounds checking in kill/submit/accept bounty",
          "issuer": {
            "name": "Kevin Owocki",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1518632236,
          "funders": [],
          "metadata": {
            "fullName": "Kevin Owocki",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "better bounds checking in kill/submit/accept bounty",
            "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
            "projectLength": "Hours",
            "githubUsername": "owocki",
            "experienceLevel": "Advanced",
            "issueDescription": "# what\n\nright now, we don't do a great job of bounds checking in the follow places :\n\n## surface area:\n1. kill bounty\n2. submit bounty\n3. accept bounty\n\nif you fail to meet the boundary conditions , youll see a nasty metamask module that shows you using up too much gas : http://bits.owocki.com/0h1R3J3r1j1w\n\n# current functionality\n\nupon form submission on these pages, metamask will show this module, which shows that theres too much gas being used: http://bits.owocki.com/0h1R3J3r1j1w\n\n# desired functionality\n\nupon form submission on these pages,  an `_alert` is shown telling the user what bounds they crossed\n\n# bounds conditions to check\n1. try to submit work on an issue you are the funder\n2. you submit work on an issue that is on a different network than you (mainnet vs rinkeby)\n3. any other conditions enforced in [StandardBounties](https://github.com/ConsenSys/StandardBounties/)",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "web",
            " gitcoinco",
            " JavaScript",
            " Python",
            " HTML",
            " CSS"
          ],
          "description": "# what\n\nright now, we don't do a great job of bounds checking in the follow places :\n\n## surface area:\n1. kill bounty\n2. submit bounty\n3. accept bounty\n\nif you fail to meet the boundary conditions , youll see a nasty metamask module that shows you using up too much gas : http://bits.owocki.com/0h1R3J3r1j1w\n\n# current functionality\n\nupon form submission on these pages, metamask will show this module, which shows that theres too much gas being used: http://bits.owocki.com/0h1R3J3r1j1w\n\n# desired functionality\n\nupon form submission on these pages,  an `_alert` is shown telling the user what bounds they crossed\n\n# bounds conditions to check\n1. try to submit work on an issue you are the funder\n2. you submit work on an issue that is on a different network than you (mainnet vs rinkeby)\n3. any other conditions enforced in [StandardBounties](https://github.com/ConsenSys/StandardBounties/)",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/web/issues/445",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 90000000000000000,
      "network": "mainnet",
      "deadline": 1526408236,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 90000000000000000
    },
    "metadata": {
      "fullName": "Kevin Owocki",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "better bounds checking in kill/submit/accept bounty",
      "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
      "projectLength": "Hours",
      "githubUsername": "owocki",
      "experienceLevel": "Advanced",
      "issueDescription": "# what\n\nright now, we don't do a great job of bounds checking in the follow places :\n\n## surface area:\n1. kill bounty\n2. submit bounty\n3. accept bounty\n\nif you fail to meet the boundary conditions , youll see a nasty metamask module that shows you using up too much gas : http://bits.owocki.com/0h1R3J3r1j1w\n\n# current functionality\n\nupon form submission on these pages, metamask will show this module, which shows that theres too much gas being used: http://bits.owocki.com/0h1R3J3r1j1w\n\n# desired functionality\n\nupon form submission on these pages,  an `_alert` is shown telling the user what bounds they crossed\n\n# bounds conditions to check\n1. try to submit work on an issue you are the funder\n2. you submit work on an issue that is on a different network than you (mainnet vs rinkeby)\n3. any other conditions enforced in [StandardBounties](https://github.com/ConsenSys/StandardBounties/)",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 90000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 58.77,
    "status": "open",
    "now": "2018-03-14T14:38:51.650405Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.09,
    "issue_description": "# what\r\n\r\nright now, we don't do a great job of bounds checking in the follow places :\r\n\r\n## surface area:\r\n1. kill bounty\r\n2. submit bounty\r\n3. accept bounty\r\n\r\nif you fail to meet the boundary conditions , youll see a nasty metamask module that shows you using up too much gas : http://bits.owocki.com/0h1R3J3r1j1w\r\n\r\n# current functionality\r\n\r\nupon form submission on these pages, metamask will show this module, which shows that theres too much gas being used: http://bits.owocki.com/0h1R3J3r1j1w\r\n\r\n# desired functionality\r\n\r\nupon form submission on these pages,  an `_alert` is shown telling the user what bounds they crossed (the most common one is likely to be that the bounty has expired)\r\n\r\nexample error message: \"Error: Cannot submit bounty as it has expired. Please contact bounty submitter directly to resolve.\"\r\n\r\n# bounds conditions to check\r\n1. try to submit work on an issue you are the funder\r\n2. you submit work on an issue that is on a different network than you (mainnet vs rinkeby)\r\n3. any other conditions enforced in [StandardBounties](https://github.com/ConsenSys/StandardBounties/)\r\n4. network of bounty != network that the users current metamask instance is on\r\n\r\n\r\n",
    "network": "mainnet",
    "org_name": "gitcoinco",
    "pk": 1355,
    "issue_description_text": "# what\r\n\r\nright now, we don't do a great job of bounds checking in the follow places :\r\n\r\n## surface area:\r\n1. kill bounty\r\n2. submit bounty\r\n3. accept bounty\r\n\r\nif you fail to meet the boundary conditions , youll see a nasty metamask module that shows you using up too much gas : http://bits.owocki.com/0h1R3J3r1j1w\r\n\r\n# current functionality\r\n\r\nupon form submission on these pages, metamask will show this module, which shows that theres too much gas being used: http://bits.owocki.com/0h1R3J3r1j1w\r\n\r\n# desired functionality\r\n\r\nupon form submission on these pages,  an `_alert` is shown telling the user what bounds they crossed (the most common one is likely to be that the bounty has expired)\r\n\r\nexample error message: \"Error: Cannot submit bounty as it has expired. Please contact bounty submitter directly to resolve.\"\r\n\r\n# bounds conditions to check\r\n1. try to submit work on an issue you are the funder\r\n2. you submit work on an issue that is on a different network than you (mainnet vs rinkeby)\r\n3. any other conditions enforced in [StandardBounties](https://github.com/ConsenSys/StandardBounties/)\r\n4. network of bounty != network that the users current metamask instance is on",
    "standard_bounties_id": 40,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/moby/moby/10589",
    "created_on": "2018-02-15T17:15:17.020910-07:00",
    "modified_on": "2018-03-14T07:30:22.880601-07:00",
    "title": "Sometimes a docker container gets stuck so that it can't be stopped or removed",
    "web3_created": "2018-02-13T16:07:08-07:00",
    "value_in_token": "123400000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/moby/moby/issues/10589",
    "github_comments": 30,
    "bounty_owner_address": "0xa79b652c20a822a43df54f7049cb52cd7f33942d",
    "bounty_owner_email": "brian.henze@hashrebel.com",
    "bounty_owner_github_username": "bhenze",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-13T16:07:08-07:00",
    "raw_data": {
      "id": 382,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Sometimes a docker container gets stuck so that it can't be stopped or removed",
          "issuer": {
            "name": "The Dude",
            "email": "brian.henze@hashrebel.com",
            "address": "0xa79b652c20a822a43df54f7049cb52cd7f33942d",
            "githubUsername": "bhenze"
          },
          "created": 1518588428,
          "funders": [],
          "metadata": {
            "fullName": "The Dude",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "Sometimes a docker container gets stuck so that it can't be stopped or removed",
            "issueKeywords": "moby, moby, Go, Shell, PowerShell, Makefile, C, Vim script",
            "projectLength": "Unknown",
            "githubUsername": "bhenze",
            "experienceLevel": "",
            "issueDescription": "```CONTAINER ID        IMAGE                            COMMAND                CREATED             STATUS              PORTS                                                NAMES1fb364265a92        mediit/mongodb:stage             \"mongod\"               22 minutes ago      Up 22 minutes       0.0.0.0:49195->27017/tcp, 0.0.0.0:49196->28017/tcp   mongodb``````$ docker stop mongodbError response from daemon: Cannot stop container mongodb: no such processFATA[0000] Error: failed to stop one or more containers``````$ docker rm -f mongodbError response from daemon: Could not kill running container, cannot remove - no such processFATA[0001] Error: failed to remove one or more containers``````$ docker infoContainers: 14Images: 178Storage Driver: aufs Root Dir: /var/lib/docker/aufs Dirs: 206Execution Driver: native-0.2Kernel Version: 3.13.0-32-genericOperating System: Ubuntu 14.04.1 LTSCPUs: 2Total Memory: 7.704 GiBName: medi-it-soteID: GGAU:OQIH:U6ZI:TOEP:G3JX:Z5WA:D5WQ:CFPA:NLMB:F6P5:IR7I:2GTCWARNING: No swap limit support``````$ docker versionClient version: 1.4.1Client API version: 1.16Go version (client): go1.3.3Git commit (client): 5bc2ff8OS/Arch (client): linux/amd64Server version: 1.4.1Server API version: 1.16Go version (server): go1.3.3Git commit (server): 5bc2ff8``````$ uname -aLinux medi-it-sote 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux```This happens occasionally, any ideas?",
            "notificationEmail": "brian.henze@hashrebel.com"
          },
          "tokenName": "ETH",
          "categories": [
            "moby",
            " moby",
            " Go",
            " Shell",
            " PowerShell",
            " Makefile",
            " C",
            " Vim script"
          ],
          "description": "```CONTAINER ID        IMAGE                            COMMAND                CREATED             STATUS              PORTS                                                NAMES1fb364265a92        mediit/mongodb:stage             \"mongod\"               22 minutes ago      Up 22 minutes       0.0.0.0:49195->27017/tcp, 0.0.0.0:49196->28017/tcp   mongodb``````$ docker stop mongodbError response from daemon: Cannot stop container mongodb: no such processFATA[0000] Error: failed to stop one or more containers``````$ docker rm -f mongodbError response from daemon: Could not kill running container, cannot remove - no such processFATA[0001] Error: failed to remove one or more containers``````$ docker infoContainers: 14Images: 178Storage Driver: aufs Root Dir: /var/lib/docker/aufs Dirs: 206Execution Driver: native-0.2Kernel Version: 3.13.0-32-genericOperating System: Ubuntu 14.04.1 LTSCPUs: 2Total Memory: 7.704 GiBName: medi-it-soteID: GGAU:OQIH:U6ZI:TOEP:G3JX:Z5WA:D5WQ:CFPA:NLMB:F6P5:IR7I:2GTCWARNING: No swap limit support``````$ docker versionClient version: 1.4.1Client API version: 1.16Go version (client): go1.3.3Git commit (client): 5bc2ff8OS/Arch (client): linux/amd64Server version: 1.4.1Server API version: 1.16Go version (server): go1.3.3Git commit (server): 5bc2ff8``````$ uname -aLinux medi-it-sote 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux```This happens occasionally, any ideas?",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/moby/moby/issues/10589",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0xa79b652C20a822a43DF54F7049cb52cd7f33942D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 123400000000000000,
      "network": "rinkeby",
      "deadline": 1550124428,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 123400000000000000
    },
    "metadata": {
      "fullName": "The Dude",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Sometimes a docker container gets stuck so that it can't be stopped or removed",
      "issueKeywords": "moby, moby, Go, Shell, PowerShell, Makefile, C, Vim script",
      "projectLength": "Unknown",
      "githubUsername": "bhenze",
      "experienceLevel": "",
      "issueDescription": "```CONTAINER ID        IMAGE                            COMMAND                CREATED             STATUS              PORTS                                                NAMES1fb364265a92        mediit/mongodb:stage             \"mongod\"               22 minutes ago      Up 22 minutes       0.0.0.0:49195->27017/tcp, 0.0.0.0:49196->28017/tcp   mongodb``````$ docker stop mongodbError response from daemon: Cannot stop container mongodb: no such processFATA[0000] Error: failed to stop one or more containers``````$ docker rm -f mongodbError response from daemon: Could not kill running container, cannot remove - no such processFATA[0001] Error: failed to remove one or more containers``````$ docker infoContainers: 14Images: 178Storage Driver: aufs Root Dir: /var/lib/docker/aufs Dirs: 206Execution Driver: native-0.2Kernel Version: 3.13.0-32-genericOperating System: Ubuntu 14.04.1 LTSCPUs: 2Total Memory: 7.704 GiBName: medi-it-soteID: GGAU:OQIH:U6ZI:TOEP:G3JX:Z5WA:D5WQ:CFPA:NLMB:F6P5:IR7I:2GTCWARNING: No swap limit support``````$ docker versionClient version: 1.4.1Client API version: 1.16Go version (client): go1.3.3Git commit (client): 5bc2ff8OS/Arch (client): linux/amd64Server version: 1.4.1Server API version: 1.16Go version (server): go1.3.3Git commit (server): 5bc2ff8``````$ uname -aLinux medi-it-sote 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux```This happens occasionally, any ideas?",
      "notificationEmail": "brian.henze@hashrebel.com"
    },
    "current_bounty": true,
    "value_in_eth": 123400000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 80.58,
    "status": "open",
    "now": "2018-03-14T14:38:51.656514Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/27259197?v=4",
    "value_true": 0.1234,
    "issue_description": "```\nCONTAINER ID        IMAGE                            COMMAND                CREATED             STATUS              PORTS                                                NAMES\n1fb364265a92        mediit/mongodb:stage             \"mongod\"               22 minutes ago      Up 22 minutes       0.0.0.0:49195->27017/tcp, 0.0.0.0:49196->28017/tcp   mongodb\n```\n\n```\n$ docker stop mongodb\nError response from daemon: Cannot stop container mongodb: no such process\nFATA[0000] Error: failed to stop one or more containers\n```\n\n```\n$ docker rm -f mongodb\nError response from daemon: Could not kill running container, cannot remove - no such process\nFATA[0001] Error: failed to remove one or more containers\n```\n\n```\n$ docker info\nContainers: 14\nImages: 178\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 206\nExecution Driver: native-0.2\nKernel Version: 3.13.0-32-generic\nOperating System: Ubuntu 14.04.1 LTS\nCPUs: 2\nTotal Memory: 7.704 GiB\nName: medi-it-sote\nID: GGAU:OQIH:U6ZI:TOEP:G3JX:Z5WA:D5WQ:CFPA:NLMB:F6P5:IR7I:2GTC\nWARNING: No swap limit support\n```\n\n```\n$ docker version\nClient version: 1.4.1\nClient API version: 1.16\nGo version (client): go1.3.3\nGit commit (client): 5bc2ff8\nOS/Arch (client): linux/amd64\nServer version: 1.4.1\nServer API version: 1.16\nGo version (server): go1.3.3\nGit commit (server): 5bc2ff8\n```\n\n```\n$ uname -a\nLinux medi-it-sote 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n```\n\nThis happens occasionally, any ideas?\n",
    "network": "rinkeby",
    "org_name": "moby",
    "pk": 825,
    "issue_description_text": "```\nCONTAINER ID        IMAGE                            COMMAND                CREATED             STATUS              PORTS                                                NAMES\n1fb364265a92        mediit/mongodb:stage             \"mongod\"               22 minutes ago      Up 22 minutes       0.0.0.0:49195->27017/tcp, 0.0.0.0:49196->28017/tcp   mongodb\n```\n\n```\n$ docker stop mongodb\nError response from daemon: Cannot stop container mongodb: no such process\nFATA[0000] Error: failed to stop one or more containers\n```\n\n```\n$ docker rm -f mongodb\nError response from daemon: Could not kill running container, cannot remove - no such process\nFATA[0001] Error: failed to remove one or more containers\n```\n\n```\n$ docker info\nContainers: 14\nImages: 178\nStorage Driver: aufs\n Root Dir: /var/lib/docker/aufs\n Dirs: 206\nExecution Driver: native-0.2\nKernel Version: 3.13.0-32-generic\nOperating System: Ubuntu 14.04.1 LTS\nCPUs: 2\nTotal Memory: 7.704 GiB\nName: medi-it-sote\nID: GGAU:OQIH:U6ZI:TOEP:G3JX:Z5WA:D5WQ:CFPA:NLMB:F6P5:IR7I:2GTC\nWARNING: No swap limit support\n```\n\n```\n$ docker version\nClient version: 1.4.1\nClient API version: 1.16\nGo version (client): go1.3.3\nGit commit (client): 5bc2ff8\nOS/Arch (client): linux/amd64\nServer version: 1.4.1\nServer API version: 1.16\nGo version (server): go1.3.3\nGit commit (server): 5bc2ff8\n```\n\n```\n$ uname -a\nLinux medi-it-sote 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n```\n\nThis happens occasionally, any ideas?",
    "standard_bounties_id": 382,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/web/408",
    "created_on": "2018-02-20T15:02:44.724936-07:00",
    "modified_on": "2018-03-14T07:30:14.058579-07:00",
    "title": "Increase Code Coverage by 5%",
    "web3_created": "2018-02-13T05:55:23-07:00",
    "value_in_token": "55500000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Hours",
    "experience_level": "Advanced",
    "github_url": "https://github.com/gitcoinco/web/issues/408",
    "github_comments": 6,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-05-14T05:55:23-07:00",
    "raw_data": {
      "id": 37,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Increase Code Coverage by 5%",
          "issuer": {
            "name": "",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1518551723,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Increase Code Coverage by 5%",
            "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
            "projectLength": "Hours",
            "githubUsername": "owocki",
            "experienceLevel": "Advanced",
            "issueDescription": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 5%.  \n\nCriteria:  \n* You must increase the code coverage (as measured by codecov) of this repo by 5%.\n* You must put (show) some thought into success / failure criteria for each method tested.\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "web",
            " gitcoinco",
            " JavaScript",
            " Python",
            " HTML",
            " CSS"
          ],
          "description": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 5%.  \n\nCriteria:  \n* You must increase the code coverage (as measured by codecov) of this repo by 5%.\n* You must put (show) some thought into success / failure criteria for each method tested.\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/web/issues/408",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 55500000000000000,
      "network": "mainnet",
      "deadline": 1526327723,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 55500000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Increase Code Coverage by 5%",
      "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS",
      "projectLength": "Hours",
      "githubUsername": "owocki",
      "experienceLevel": "Advanced",
      "issueDescription": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 5%.  \n\nCriteria:  \n* You must increase the code coverage (as measured by codecov) of this repo by 5%.\n* You must put (show) some thought into success / failure criteria for each method tested.\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 55500000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 36.24,
    "status": "open",
    "now": "2018-03-14T14:38:51.662368Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.0555,
    "issue_description": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 5%.  \r\n\r\nCriteria:  \r\n* You must increase the code coverage (as measured by codecov) of this repo by 5%.\r\n* You must put (show) some thought into success / failure criteria for each method tested.\r\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.\r\n",
    "network": "mainnet",
    "org_name": "gitcoinco",
    "pk": 1352,
    "issue_description_text": "This bounty will be paid out to anyone who meaningfully increases the code coverage of the repository by 5%.  \r\n\r\nCriteria:  \r\n* You must increase the code coverage (as measured by codecov) of this repo by 5%.\r\n* You must put (show) some thought into success / failure criteria for each method tested.\r\n* Please coordinate with other bounty hunters who are working on this bounty so you don't overlap work.",
    "standard_bounties_id": 37,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/thelostone-mc/holo/4",
    "created_on": "2018-02-15T17:14:58.555070-07:00",
    "modified_on": "2018-03-14T07:30:25.453922-07:00",
    "title": "",
    "web3_created": "2018-02-12T12:29:32-07:00",
    "value_in_token": "1000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/thelostone-mc/holo/issues/4",
    "github_comments": 0,
    "bounty_owner_address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
    "bounty_owner_email": "aditya.anandmc@gmail.com",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-12T12:29:32-07:00",
    "raw_data": {
      "id": 375,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "",
          "issuer": {
            "name": "",
            "email": "aditya.anandmc@gmail.com",
            "address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
            "githubUsername": ""
          },
          "created": 1518488972,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "",
            "issueKeywords": "",
            "projectLength": "Unknown",
            "githubUsername": "",
            "experienceLevel": "",
            "issueDescription": "",
            "notificationEmail": "aditya.anandmc@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            ""
          ],
          "description": "",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/thelostone-mc/holo/issues/4",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x997D35b300bA1775fdB175dF045252e57D6EA5B0",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000,
      "network": "rinkeby",
      "deadline": 1550024972,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "",
      "issueKeywords": "",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "issueDescription": "",
      "notificationEmail": "aditya.anandmc@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 1000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.65,
    "status": "open",
    "now": "2018-03-14T14:38:51.668185Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/5358146?v=4",
    "value_true": 0.001,
    "issue_description": "",
    "network": "rinkeby",
    "org_name": "thelostone-mc",
    "pk": 818,
    "issue_description_text": "",
    "standard_bounties_id": 375,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/11",
    "created_on": "2018-02-15T17:14:32.564286-07:00",
    "modified_on": "2018-03-14T07:30:12.453724-07:00",
    "title": "NameError: name 'DEBUG_APPS' is not defined",
    "web3_created": "2018-02-04T05:24:53-07:00",
    "value_in_token": "20000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/11",
    "github_comments": 3,
    "bounty_owner_address": "0xe93d33cf8aaf56c64d23b5b248919eabd8c3c41e",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-02-18T05:24:53-07:00",
    "raw_data": {
      "id": 361,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "",
          "issuer": {
            "name": "",
            "email": "ksowocki@gmail.com",
            "address": "0xe93d33cf8aaf56c64d23b5b248919eabd8c3c41e",
            "githubUsername": "owocki"
          },
          "created": 1517772293,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "",
            "issueKeywords": "",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            ""
          ],
          "description": "",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/11",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0xe93d33CF8AaF56C64D23b5b248919EabD8c3c41E",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 20000000000000000,
      "network": "rinkeby",
      "deadline": 1518981893,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 20000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "",
      "issueKeywords": "",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 20000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 13.06,
    "status": "open",
    "now": "2018-03-14T14:38:51.674033Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.02,
    "issue_description": "Hey Kevin, any idea what's causing this?\n\nIncluding stack trace and my local_settings...\n\n```[ccf@li286-238 pytrader]$ ./manage.py syncdb\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/core/management/**init**.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/core/management/**init**.py\", line 303, in execute\n    settings.INSTALLED_APPS\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/conf/**init**.py\", line 48, in **getattr**\n    self._setup(name)\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/conf/__init__.py\", line 44, in _setup\n    self._wrapped = Settings(settings_module)\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/conf/__init__.py\", line 92, in **init**\n    mod = importlib.import_module(self.SETTINGS_MODULE)\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/importlib/**init**.py\", line 37, in import_module\n    **import**(name)\n  File \"/home/ccf/projects/pytrader/pypolo/settings.py\", line 124, in <module>\n    INSTALLED_APPS += DEBUG_APPS\nNameError: name 'DEBUG_APPS' is not defined\n\n```\n\n\n\n[ccf@li286-238 pytrader]$ cat pypolo/local_settings.py\n```\n\nimport os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(**file**)))\n\nMAKE_TRADES=False\n\nAPI_KEY=\"foo\"\nAPI_SECRET=\"bar\"\n# sqllite\n\n_DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n```\n```\n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 804,
    "issue_description_text": "Hey Kevin, any idea what's causing this?\n\nIncluding stack trace and my local_settings...\n\n```[ccf@li286-238 pytrader]$ ./manage.py syncdb\nTraceback (most recent call last):\n  File \"./manage.py\", line 10, in \n    execute_from_command_line(sys.argv)\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/core/management/**init**.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/core/management/**init**.py\", line 303, in execute\n    settings.INSTALLED_APPS\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/conf/**init**.py\", line 48, in **getattr**\n    self._setup(name)\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/conf/__init__.py\", line 44, in _setup\n    self._wrapped = Settings(settings_module)\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/site-packages/django/conf/__init__.py\", line 92, in **init**\n    mod = importlib.import_module(self.SETTINGS_MODULE)\n  File \"/home/ccf/tools/anaconda2/lib/python2.7/importlib/**init**.py\", line 37, in import_module\n    **import**(name)\n  File \"/home/ccf/projects/pytrader/pypolo/settings.py\", line 124, in \n    INSTALLED_APPS += DEBUG_APPS\nNameError: name 'DEBUG_APPS' is not defined\n\n```\n\n\n\n[ccf@li286-238 pytrader]$ cat pypolo/local_settings.py\n```\n\nimport os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(**file**)))\n\nMAKE_TRADES=False\n\nAPI_KEY=\"foo\"\nAPI_SECRET=\"bar\"\n# sqllite\n\n_DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n```\n```",
    "standard_bounties_id": 361,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/3",
    "created_on": "2018-02-15T17:14:23.051121-07:00",
    "modified_on": "2018-03-14T07:30:31.310310-07:00",
    "title": "Database Setup",
    "web3_created": "2018-02-02T07:21:11-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/owocki/pytrader/issues/3",
    "github_comments": 5,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-02T07:21:11-07:00",
    "raw_data": {
      "id": 354,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Database Setup",
          "issuer": {
            "name": "",
            "email": "",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": ""
          },
          "created": 1517606471,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "Database Setup",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Unknown",
            "githubUsername": "",
            "experienceLevel": "",
            "issueDescription": "Hi! First of all thanks for great contribution! Second when i'm trying to deploy it locally after `./manage.py migrate` i've got error that `settings.DATABASES is improperly configured`. But even after adding database config to setting i've still get an error, this time: `django.db.utils.OperationalError: no such column: history_predictiontest.type`",
            "notificationEmail": ""
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "Hi! First of all thanks for great contribution! Second when i'm trying to deploy it locally after `./manage.py migrate` i've got error that `settings.DATABASES is improperly configured`. But even after adding database config to setting i've still get an error, this time: `django.db.utils.OperationalError: no such column: history_predictiontest.type`",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/3",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "rinkeby",
      "deadline": 1549142471,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Database Setup",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "issueDescription": "Hi! First of all thanks for great contribution! Second when i'm trying to deploy it locally after `./manage.py migrate` i've got error that `settings.DATABASES is improperly configured`. But even after adding database config to setting i've still get an error, this time: `django.db.utils.OperationalError: no such column: history_predictiontest.type`",
      "notificationEmail": ""
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.679722Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.1,
    "issue_description": "Hi! First of all thanks for great contribution! Second when i'm trying to deploy it locally after `./manage.py migrate` i've got error that `settings.DATABASES is improperly configured`. But even after adding database config to setting i've still get an error, this time: `django.db.utils.OperationalError: no such column: history_predictiontest.type`\n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 797,
    "issue_description_text": "Hi! First of all thanks for great contribution! Second when i'm trying to deploy it locally after `./manage.py migrate` i've got error that `settings.DATABASES is improperly configured`. But even after adding database config to setting i've still get an error, this time: `django.db.utils.OperationalError: no such column: history_predictiontest.type`",
    "standard_bounties_id": 354,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/1",
    "created_on": "2018-02-15T17:14:21.769642-07:00",
    "modified_on": "2018-03-14T07:30:11.133825-07:00",
    "title": "Get trader to profitability in at least one market",
    "web3_created": "2018-02-02T07:17:01-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/owocki/pytrader/issues/1",
    "github_comments": 26,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-02T07:17:01-07:00",
    "raw_data": {
      "id": 353,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Get trader to profitability in at least one market",
          "issuer": {
            "name": "",
            "email": "",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": ""
          },
          "created": 1517606221,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "Get trader to profitability in at least one market",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Unknown",
            "githubUsername": "",
            "experienceLevel": "",
            "issueDescription": "One could presumably increase the margin for a classifier such that, to classify a sequence of price movements as a BUY or SELL, the predicted movement must be higher than what it is now (0.002% increase/decrease threshold)",
            "notificationEmail": ""
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "One could presumably increase the margin for a classifier such that, to classify a sequence of price movements as a BUY or SELL, the predicted movement must be higher than what it is now (0.002% increase/decrease threshold)",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/1",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "rinkeby",
      "deadline": 1549142221,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Get trader to profitability in at least one market",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "issueDescription": "One could presumably increase the margin for a classifier such that, to classify a sequence of price movements as a BUY or SELL, the predicted movement must be higher than what it is now (0.002% increase/decrease threshold)",
      "notificationEmail": ""
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.685483Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.1,
    "issue_description": "One could presumably increase the margin for a classifier such that, to classify a sequence of price movements as a BUY or SELL, the predicted movement must be higher than what it is now (0.002% increase/decrease threshold)\n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 796,
    "issue_description_text": "One could presumably increase the margin for a classifier such that, to classify a sequence of price movements as a BUY or SELL, the predicted movement must be higher than what it is now (0.002% increase/decrease threshold)",
    "standard_bounties_id": 353,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/9",
    "created_on": "2018-02-15T17:14:19.222107-07:00",
    "modified_on": "2018-03-14T07:30:28.378071-07:00",
    "title": "All timezones in UTC",
    "web3_created": "2018-02-02T06:26:46-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/owocki/pytrader/issues/9",
    "github_comments": 7,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-02T06:26:46-07:00",
    "raw_data": {
      "id": 351,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "All timezones in UTC",
          "issuer": {
            "name": "",
            "email": "",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": ""
          },
          "created": 1517603206,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "All timezones in UTC",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Unknown",
            "githubUsername": "",
            "experienceLevel": "",
            "issueDescription": "There's a little bit of hackery in the repo in transforming UTC to MST (for example, subtraction of `timedelta(hours=7)` instead of true timezone transforms in order to get the correct local time in the UI.  I'll button this up.",
            "notificationEmail": ""
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "There's a little bit of hackery in the repo in transforming UTC to MST (for example, subtraction of `timedelta(hours=7)` instead of true timezone transforms in order to get the correct local time in the UI.  I'll button this up.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/9",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "rinkeby",
      "deadline": 1549139206,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "All timezones in UTC",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "issueDescription": "There's a little bit of hackery in the repo in transforming UTC to MST (for example, subtraction of `timedelta(hours=7)` instead of true timezone transforms in order to get the correct local time in the UI.  I'll button this up.",
      "notificationEmail": ""
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.691142Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.1,
    "issue_description": "There's a little bit of hackery in the repo in transforming UTC to MST (for example, subtraction of `timedelta(hours=7)` instead of true timezone transforms in order to get the correct local time in the UI.  I'll button this up.\n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 794,
    "issue_description_text": "There's a little bit of hackery in the repo in transforming UTC to MST (for example, subtraction of `timedelta(hours=7)` instead of true timezone transforms in order to get the correct local time in the UI.  I'll button this up.",
    "standard_bounties_id": 351,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/thelostone-mc/importcost/1",
    "created_on": "2018-02-23T05:18:00.484795-07:00",
    "modified_on": "2018-03-14T07:30:12.481930-07:00",
    "title": "test : ether facuet",
    "web3_created": "2018-02-01T12:06:08-07:00",
    "value_in_token": "1000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/thelostone-mc/importcost/issues/1",
    "github_comments": 0,
    "bounty_owner_address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
    "bounty_owner_email": "aditya.anandmc@gmail.com",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-01T12:06:08-07:00",
    "raw_data": {
      "id": 346,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "test : ether facuet",
          "issuer": {
            "name": "",
            "email": "aditya.anandmc@gmail.com",
            "address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
            "githubUsername": ""
          },
          "created": 1517537168,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "test : ether facuet",
            "issueKeywords": "importcost, thelostone-mc, JavaScript, CSS",
            "projectLength": "Unknown",
            "githubUsername": "",
            "experienceLevel": "",
            "issueDescription": " This is a continuation of the great work by @seddy done here:\n#453\n\nI've solved conflicts with master and I have only 2 failing tests in the suite.\n\nAfter reviewing the code, I do think adding a provider parameter to the auth hash is a really good idea (option 1 here #453 (comment) ) rather than changing the uid parameter.\n\n@lynndylanhurley @MaicolBen what do you think? ",
            "notificationEmail": "aditya.anandmc@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "importcost",
            " thelostone-mc",
            " JavaScript",
            " CSS"
          ],
          "description": " This is a continuation of the great work by @seddy done here:\n#453\n\nI've solved conflicts with master and I have only 2 failing tests in the suite.\n\nAfter reviewing the code, I do think adding a provider parameter to the auth hash is a really good idea (option 1 here #453 (comment) ) rather than changing the uid parameter.\n\n@lynndylanhurley @MaicolBen what do you think? ",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/thelostone-mc/importcost/issues/1",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x997D35b300bA1775fdB175dF045252e57D6EA5B0",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000,
      "network": "rinkeby",
      "deadline": 1549073168,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "test : ether facuet",
      "issueKeywords": "importcost, thelostone-mc, JavaScript, CSS",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "issueDescription": " This is a continuation of the great work by @seddy done here:\n#453\n\nI've solved conflicts with master and I have only 2 failing tests in the suite.\n\nAfter reviewing the code, I do think adding a provider parameter to the auth hash is a really good idea (option 1 here #453 (comment) ) rather than changing the uid parameter.\n\n@lynndylanhurley @MaicolBen what do you think? ",
      "notificationEmail": "aditya.anandmc@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 1000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.65,
    "status": "open",
    "now": "2018-03-14T14:38:51.696896Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/5358146?v=4",
    "value_true": 0.001,
    "issue_description": "nothing to see here! ",
    "network": "rinkeby",
    "org_name": "thelostone-mc",
    "pk": 1617,
    "issue_description_text": "nothing to see here!",
    "standard_bounties_id": 346,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/critesjosh/fcc-heat-map/1",
    "created_on": "2018-02-15T17:14:04.724766-07:00",
    "modified_on": "2018-03-14T07:30:19.525164-07:00",
    "title": "test issue ",
    "web3_created": "2018-02-01T07:10:22-07:00",
    "value_in_token": "1000000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/critesjosh/fcc-heat-map/issues/1",
    "github_comments": 1,
    "bounty_owner_address": "0xbefc6a2a877165018a8e8a9800f4f557fdaecb41",
    "bounty_owner_email": "",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-02-01T07:10:22-07:00",
    "raw_data": {
      "id": 343,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "test issue",
          "issuer": {
            "name": "",
            "email": "",
            "address": "0xbefc6a2a877165018a8e8a9800f4f557fdaecb41",
            "githubUsername": ""
          },
          "created": 1517519422,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "test issue",
            "issueKeywords": "fcc-heat-map, critesjosh, JavaScript, HTML",
            "projectLength": "Unknown",
            "githubUsername": "",
            "experienceLevel": "",
            "issueDescription": "test issue for gitcoin",
            "notificationEmail": ""
          },
          "tokenName": "ETH",
          "categories": [
            "fcc-heat-map",
            " critesjosh",
            " JavaScript",
            " HTML"
          ],
          "description": "test issue for gitcoin",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/critesjosh/fcc-heat-map/issues/1",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0xbEfc6A2a877165018a8E8a9800F4F557fdaEcB41",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000000,
      "network": "rinkeby",
      "deadline": 1549055422,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "test issue",
      "issueKeywords": "fcc-heat-map, critesjosh, JavaScript, HTML",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "issueDescription": "test issue for gitcoin",
      "notificationEmail": ""
    },
    "current_bounty": true,
    "value_in_eth": 1000000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 652.99,
    "status": "open",
    "now": "2018-03-14T14:38:51.702465Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/18372439?v=4",
    "value_true": 1,
    "issue_description": "test issue for gitcoin",
    "network": "rinkeby",
    "org_name": "critesjosh",
    "pk": 786,
    "issue_description_text": "test issue for gitcoin",
    "standard_bounties_id": 343,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/4985",
    "created_on": "2018-02-15T17:13:53.926746-07:00",
    "modified_on": "2018-03-14T07:30:20.805149-07:00",
    "title": "Correct the CSS example for 'appear' transition",
    "web3_created": "2018-02-01T02:51:32-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/4985",
    "github_comments": 4,
    "bounty_owner_address": "0x577ec61db11b49286839f502481776f0be01104d",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-02-02T02:51:32-07:00",
    "raw_data": {
      "id": 338,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Correct the CSS example for 'appear' transition",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "address": "0x577ec61db11b49286839f502481776f0be01104d",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1517503892,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Correct the CSS example for 'appear' transition",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/4985",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1517590292,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Correct the CSS example for 'appear' transition",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.708122Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "Move transition from `.example-appear` to `.example-appear.example-appear-active`\n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 782,
    "issue_description_text": "Move transition from `.example-appear` to `.example-appear.example-appear-active`",
    "standard_bounties_id": 338,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/dharmaprotocol/charta/4",
    "created_on": "2018-02-20T15:02:05.660319-07:00",
    "modified_on": "2018-03-14T07:30:15.421395-07:00",
    "title": "FR: Collateralized Base Contract for Terms Contracts",
    "web3_created": "2018-01-31T18:45:23-07:00",
    "value_in_token": "70000000000000010.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/dharmaprotocol/charta/issues/4",
    "github_comments": 2,
    "bounty_owner_address": "0x2987aa227df48d4891b3fe667c7a0c463f8857b1",
    "bounty_owner_email": "nadav@dharma.io",
    "bounty_owner_github_username": "nadavhollander",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-01-31T18:45:23-07:00",
    "raw_data": {
      "id": 21,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "FR: Collateralized Base Contract for Terms Contracts",
          "issuer": {
            "name": "Nadav Hollander",
            "email": "nadav@dharma.io",
            "address": "0x2987aa227df48d4891b3fe667c7a0c463f8857b1",
            "githubUsername": "nadavhollander"
          },
          "created": 1517474723,
          "funders": [],
          "metadata": {
            "fullName": "Nadav Hollander",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "FR: Collateralized Base Contract for Terms Contracts",
            "issueKeywords": "charta, dharmaprotocol, TypeScript, Solidity, HTML, JavaScript",
            "projectLength": "Unknown",
            "githubUsername": "nadavhollander",
            "experienceLevel": "",
            "issueDescription": "## Feature Request: \n\nCreate a generic base contract under the `contracts/examples/` folder for holding tokens of different types as collateral in a Dharma terms contract that inherits from the contract.  In the ideal case, I'd love to see a `Collateralized.sol` file with usage akin to [OpenZeppelin's](https://github.com/OpenZeppelin/zeppelin-solidity) `Owned.sol` or `Pausable.sol`, i.e.\n\n```solidity\nimport \"charta/contracts/examples/Collateralized.sol\";\nimport \"charta/contracts/Terms.sol\";\n\ncontract CompoundInterestTermsContract is TermsContract, Collateralized {\n\n...\n\n}\n```\n\n## Specification:\n\nThe flow for collateralizing an asset should be as follows:\n\n1. User grants `transferFrom` allowance for desired collateral amount on desired collateral token to the TermsContract that inherits from `Collateralized.sol` (using the ERC20 `approve` method)\n2. User calls `collateralize(bytes32 issuanceCommitmentHash, address token, uint amount, uint lockupPeriodEndBlockNumber)`.  Terms contract then transfers itself the desired collateral, and records all relevant information (including the user-defined `lockupPeriodEndBlockNumber`) as associated with the given `issuanceCommitmentHash`.\n\nAfter an asset has been collateralized one of the following can happen:\n\n- When `block.number > lockupPeriodEndBlockNumber`, any user can call `returnCollateral`, and the contract will transfer the debtor back the collateral (if it hasn't already been seized)\n- When, at **any** time, `getExpectedRepaymentValue() > getValueRepaid()` on the TermsContract that inherits from `Collateralized.sol`, any user can call `seizeCollateral`, and the contract will transfer the collateral to the debt agreement's beneficiary.\n\n## Acceptance Criteria\n- [ ] Is the contract clean, well-documented, and generic?\n- [ ] Is a thorough test harness present (both unit and integration tests)?",
            "notificationEmail": "nadav@dharma.io"
          },
          "tokenName": "ETH",
          "categories": [
            "charta",
            " dharmaprotocol",
            " TypeScript",
            " Solidity",
            " HTML",
            " JavaScript"
          ],
          "description": "## Feature Request: \n\nCreate a generic base contract under the `contracts/examples/` folder for holding tokens of different types as collateral in a Dharma terms contract that inherits from the contract.  In the ideal case, I'd love to see a `Collateralized.sol` file with usage akin to [OpenZeppelin's](https://github.com/OpenZeppelin/zeppelin-solidity) `Owned.sol` or `Pausable.sol`, i.e.\n\n```solidity\nimport \"charta/contracts/examples/Collateralized.sol\";\nimport \"charta/contracts/Terms.sol\";\n\ncontract CompoundInterestTermsContract is TermsContract, Collateralized {\n\n...\n\n}\n```\n\n## Specification:\n\nThe flow for collateralizing an asset should be as follows:\n\n1. User grants `transferFrom` allowance for desired collateral amount on desired collateral token to the TermsContract that inherits from `Collateralized.sol` (using the ERC20 `approve` method)\n2. User calls `collateralize(bytes32 issuanceCommitmentHash, address token, uint amount, uint lockupPeriodEndBlockNumber)`.  Terms contract then transfers itself the desired collateral, and records all relevant information (including the user-defined `lockupPeriodEndBlockNumber`) as associated with the given `issuanceCommitmentHash`.\n\nAfter an asset has been collateralized one of the following can happen:\n\n- When `block.number > lockupPeriodEndBlockNumber`, any user can call `returnCollateral`, and the contract will transfer the debtor back the collateral (if it hasn't already been seized)\n- When, at **any** time, `getExpectedRepaymentValue() > getValueRepaid()` on the TermsContract that inherits from `Collateralized.sol`, any user can call `seizeCollateral`, and the contract will transfer the collateral to the debt agreement's beneficiary.\n\n## Acceptance Criteria\n- [ ] Is the contract clean, well-documented, and generic?\n- [ ] Is a thorough test harness present (both unit and integration tests)?",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/dharmaprotocol/charta/issues/4",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x2987Aa227df48D4891b3FE667C7A0c463F8857b1",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 70000000000000010,
      "network": "mainnet",
      "deadline": 1549010723,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 70000000000000010
    },
    "metadata": {
      "fullName": "Nadav Hollander",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "FR: Collateralized Base Contract for Terms Contracts",
      "issueKeywords": "charta, dharmaprotocol, TypeScript, Solidity, HTML, JavaScript",
      "projectLength": "Unknown",
      "githubUsername": "nadavhollander",
      "experienceLevel": "",
      "issueDescription": "## Feature Request: \n\nCreate a generic base contract under the `contracts/examples/` folder for holding tokens of different types as collateral in a Dharma terms contract that inherits from the contract.  In the ideal case, I'd love to see a `Collateralized.sol` file with usage akin to [OpenZeppelin's](https://github.com/OpenZeppelin/zeppelin-solidity) `Owned.sol` or `Pausable.sol`, i.e.\n\n```solidity\nimport \"charta/contracts/examples/Collateralized.sol\";\nimport \"charta/contracts/Terms.sol\";\n\ncontract CompoundInterestTermsContract is TermsContract, Collateralized {\n\n...\n\n}\n```\n\n## Specification:\n\nThe flow for collateralizing an asset should be as follows:\n\n1. User grants `transferFrom` allowance for desired collateral amount on desired collateral token to the TermsContract that inherits from `Collateralized.sol` (using the ERC20 `approve` method)\n2. User calls `collateralize(bytes32 issuanceCommitmentHash, address token, uint amount, uint lockupPeriodEndBlockNumber)`.  Terms contract then transfers itself the desired collateral, and records all relevant information (including the user-defined `lockupPeriodEndBlockNumber`) as associated with the given `issuanceCommitmentHash`.\n\nAfter an asset has been collateralized one of the following can happen:\n\n- When `block.number > lockupPeriodEndBlockNumber`, any user can call `returnCollateral`, and the contract will transfer the debtor back the collateral (if it hasn't already been seized)\n- When, at **any** time, `getExpectedRepaymentValue() > getValueRepaid()` on the TermsContract that inherits from `Collateralized.sol`, any user can call `seizeCollateral`, and the contract will transfer the collateral to the debt agreement's beneficiary.\n\n## Acceptance Criteria\n- [ ] Is the contract clean, well-documented, and generic?\n- [ ] Is a thorough test harness present (both unit and integration tests)?",
      "notificationEmail": "nadav@dharma.io"
    },
    "current_bounty": true,
    "value_in_eth": 70000000000000010,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 45.71,
    "status": "open",
    "now": "2018-03-14T14:38:51.714053Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/28667653?v=4",
    "value_true": 0.07,
    "issue_description": "## Feature Request: \r\n\r\nCreate a generic base contract under the `contracts/examples/` folder for holding tokens of different types as collateral in a Dharma terms contract that inherits from the contract.  In the ideal case, I'd love to see a `Collateralized.sol` file with usage akin to [OpenZeppelin's](https://github.com/OpenZeppelin/zeppelin-solidity) `Owned.sol` or `Pausable.sol`, i.e.\r\n\r\n```solidity\r\nimport \"charta/contracts/examples/Collateralized.sol\";\r\nimport \"charta/contracts/Terms.sol\";\r\n\r\ncontract CompoundInterestTermsContract is TermsContract, Collateralized {\r\n\r\n...\r\n\r\n}\r\n```\r\n\r\n## Specification:\r\n\r\nThe flow for collateralizing an asset should be as follows:\r\n\r\n1. User grants `transferFrom` allowance for desired collateral amount on desired collateral token to the TermsContract that inherits from `Collateralized.sol` (using the ERC20 `approve` method)\r\n2. User calls `collateralize(bytes32 issuanceCommitmentHash, address token, uint amount, uint lockupPeriodEndBlockNumber)`.  Terms contract then transfers itself the desired collateral, and records all relevant information (including the user-defined `lockupPeriodEndBlockNumber`) as associated with the given `issuanceCommitmentHash`.\r\n\r\nAfter an asset has been collateralized one of the following can happen:\r\n\r\n- When `block.number > lockupPeriodEndBlockNumber`, any user can call `returnCollateral`, and the contract will transfer the debtor back the collateral (if it hasn't already been seized)\r\n- When, at **any** time, `getExpectedRepaymentValue() > getValueRepaid()` on the TermsContract that inherits from `Collateralized.sol`, any user can call `seizeCollateral`, and the contract will transfer the collateral to the debt agreement's beneficiary.\r\n\r\n## Acceptance Criteria\r\n- [ ] Is the contract clean, well-documented, and generic?\r\n- [ ] Is a thorough test harness present (both unit and integration tests)?",
    "network": "mainnet",
    "org_name": "dharmaprotocol",
    "pk": 1335,
    "issue_description_text": "## Feature Request: \r\n\r\nCreate a generic base contract under the `contracts/examples/` folder for holding tokens of different types as collateral in a Dharma terms contract that inherits from the contract.  In the ideal case, I'd love to see a `Collateralized.sol` file with usage akin to [OpenZeppelin's](https://github.com/OpenZeppelin/zeppelin-solidity) `Owned.sol` or `Pausable.sol`, i.e.\r\n\r\n```solidity\r\nimport \"charta/contracts/examples/Collateralized.sol\";\r\nimport \"charta/contracts/Terms.sol\";\r\n\r\ncontract CompoundInterestTermsContract is TermsContract, Collateralized {\r\n\r\n...\r\n\r\n}\r\n```\r\n\r\n## Specification:\r\n\r\nThe flow for collateralizing an asset should be as follows:\r\n\r\n1. User grants `transferFrom` allowance for desired collateral amount on desired collateral token to the TermsContract that inherits from `Collateralized.sol` (using the ERC20 `approve` method)\r\n2. User calls `collateralize(bytes32 issuanceCommitmentHash, address token, uint amount, uint lockupPeriodEndBlockNumber)`.  Terms contract then transfers itself the desired collateral, and records all relevant information (including the user-defined `lockupPeriodEndBlockNumber`) as associated with the given `issuanceCommitmentHash`.\r\n\r\nAfter an asset has been collateralized one of the following can happen:\r\n\r\n- When `block.number > lockupPeriodEndBlockNumber`, any user can call `returnCollateral`, and the contract will transfer the debtor back the collateral (if it hasn't already been seized)\r\n- When, at **any** time, `getExpectedRepaymentValue() > getValueRepaid()` on the TermsContract that inherits from `Collateralized.sol`, any user can call `seizeCollateral`, and the contract will transfer the collateral to the debt agreement's beneficiary.\r\n\r\n## Acceptance Criteria\r\n- [ ] Is the contract clean, well-documented, and generic?\r\n- [ ] Is a thorough test harness present (both unit and integration tests)?",
    "standard_bounties_id": 21,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/59",
    "created_on": "2018-02-15T17:13:29.760883-07:00",
    "modified_on": "2018-03-14T07:30:15.736098-07:00",
    "title": "Moves NN / classifier trainers & trader information to a place where they can be overridden privately",
    "web3_created": "2018-01-30T09:09:50-07:00",
    "value_in_token": "30000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/59",
    "github_comments": 2,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-02-13T09:09:50-07:00",
    "raw_data": {
      "id": 325,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Moves NN / classifier trainers & trader information to a place where they can be overridden privately",
          "issuer": {
            "name": "",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1517353790,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Moves NN / classifier trainers & trader information to a place where they can be overridden privately",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "Wrote this up last night.  Finally got around to submitting it as a PR.# WhatMoves NN / classifier trainers & trader information to a place where they can be overridden privately: `settings.py`.This allows contributors to tune their own settings AND contribute back to the main fork without having to juggle a bunch of `git stash`s.Note: also some linting in this PR.  Sorry, linter went crazy :P# WhySee https://github.com/owocki/pytrader/issues/36# img<img src='http://bits.owocki.com/030N0t100M29/Image%202016-04-05%20at%204.59.45%20PM.png' />",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "Wrote this up last night.  Finally got around to submitting it as a PR.# WhatMoves NN / classifier trainers & trader information to a place where they can be overridden privately: `settings.py`.This allows contributors to tune their own settings AND contribute back to the main fork without having to juggle a bunch of `git stash`s.Note: also some linting in this PR.  Sorry, linter went crazy :P# WhySee https://github.com/owocki/pytrader/issues/36# img<img src='http://bits.owocki.com/030N0t100M29/Image%202016-04-05%20at%204.59.45%20PM.png' />",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/59",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 30000000000000000,
      "network": "rinkeby",
      "deadline": 1518563390,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 30000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Moves NN / classifier trainers & trader information to a place where they can be overridden privately",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "Wrote this up last night.  Finally got around to submitting it as a PR.# WhatMoves NN / classifier trainers & trader information to a place where they can be overridden privately: `settings.py`.This allows contributors to tune their own settings AND contribute back to the main fork without having to juggle a bunch of `git stash`s.Note: also some linting in this PR.  Sorry, linter went crazy :P# WhySee https://github.com/owocki/pytrader/issues/36# img<img src='http://bits.owocki.com/030N0t100M29/Image%202016-04-05%20at%204.59.45%20PM.png' />",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 30000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 19.59,
    "status": "open",
    "now": "2018-03-14T14:38:51.719955Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.03,
    "issue_description": "Wrote this up last night.  Finally got around to submitting it as a PR.\n# What\n\nMoves NN / classifier trainers & trader information to a place where they can be overridden privately: `settings.py`.\n\nThis allows contributors to tune their own settings AND contribute back to the main fork without having to juggle a bunch of `git stash`s.\n\nNote: also some linting in this PR.  Sorry, linter went crazy :P\n# Why\n\nSee https://github.com/owocki/pytrader/issues/36\n# img\n\n<img src='http://bits.owocki.com/030N0t100M29/Image%202016-04-05%20at%204.59.45%20PM.png' />\n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 769,
    "issue_description_text": "Wrote this up last night.  Finally got around to submitting it as a PR.\n# What\n\nMoves NN / classifier trainers & trader information to a place where they can be overridden privately: `settings.py`.\n\nThis allows contributors to tune their own settings AND contribute back to the main fork without having to juggle a bunch of `git stash`s.\n\nNote: also some linting in this PR.  Sorry, linter went crazy :P\n# Why\n\nSee https://github.com/owocki/pytrader/issues/36\n# img",
    "standard_bounties_id": 325,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/9834",
    "created_on": "2018-02-15T17:13:13.465883-07:00",
    "modified_on": "2018-03-14T07:30:13.803503-07:00",
    "title": "Add React.Children.find",
    "web3_created": "2018-01-30T02:20:35-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/9834",
    "github_comments": 14,
    "bounty_owner_address": "0x51415ed4583e6b649f9384d6bdf74ca7aff6e742",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-01-31T02:20:35-07:00",
    "raw_data": {
      "id": 318,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Add React.Children.find",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "address": "0x51415ed4583e6b649f9384d6bdf74ca7aff6e742",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1517329235,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Add React.Children.find",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "I think a `React.Children.find` method would be really useful in situations where you need to iterate over your children and find just one that satisfies a particular condition. I'm running into this situation more and more often in my React code. A few examples:\n\n- In [React Router](https://reacttraining.com/react-router), the `<Switch>` component [iterates over its children](https://github.com/ReactTraining/react-router/blob/c46e51bfd61343611ddbc173207952e980b81aec/packages/react-router/modules/Switch.js#L38-L49) to figure out which `<Route>` matches the URL.\n- In [a `<Select>` component we use in our training workshops](https://github.com/ReactTraining/react-subjects/blob/44614bc3c6c8ca1de813e0bd1e14f86a74a5c0fb/subjects/Select/solution.js#L24-L37), we need to iterate over the `<Option>`s to figure out which label we should show in the select box.\n\nI wonder if there would be any interest from others in seeing something like this.",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "I think a `React.Children.find` method would be really useful in situations where you need to iterate over your children and find just one that satisfies a particular condition. I'm running into this situation more and more often in my React code. A few examples:\n\n- In [React Router](https://reacttraining.com/react-router), the `<Switch>` component [iterates over its children](https://github.com/ReactTraining/react-router/blob/c46e51bfd61343611ddbc173207952e980b81aec/packages/react-router/modules/Switch.js#L38-L49) to figure out which `<Route>` matches the URL.\n- In [a `<Select>` component we use in our training workshops](https://github.com/ReactTraining/react-subjects/blob/44614bc3c6c8ca1de813e0bd1e14f86a74a5c0fb/subjects/Select/solution.js#L24-L37), we need to iterate over the `<Option>`s to figure out which label we should show in the select box.\n\nI wonder if there would be any interest from others in seeing something like this.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/9834",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x51415ed4583e6B649f9384D6bDf74ca7aff6e742",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1517415635,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Add React.Children.find",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "I think a `React.Children.find` method would be really useful in situations where you need to iterate over your children and find just one that satisfies a particular condition. I'm running into this situation more and more often in my React code. A few examples:\n\n- In [React Router](https://reacttraining.com/react-router), the `<Switch>` component [iterates over its children](https://github.com/ReactTraining/react-router/blob/c46e51bfd61343611ddbc173207952e980b81aec/packages/react-router/modules/Switch.js#L38-L49) to figure out which `<Route>` matches the URL.\n- In [a `<Select>` component we use in our training workshops](https://github.com/ReactTraining/react-subjects/blob/44614bc3c6c8ca1de813e0bd1e14f86a74a5c0fb/subjects/Select/solution.js#L24-L37), we need to iterate over the `<Option>`s to figure out which label we should show in the select box.\n\nI wonder if there would be any interest from others in seeing something like this.",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.725789Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "I think a `React.Children.find` method would be really useful in situations where you need to iterate over your children and find just one that satisfies a particular condition. I'm running into this situation more and more often in my React code. A few examples:\r\n\r\n- In [React Router](https://reacttraining.com/react-router), the `<Switch>` component [iterates over its children](https://github.com/ReactTraining/react-router/blob/c46e51bfd61343611ddbc173207952e980b81aec/packages/react-router/modules/Switch.js#L38-L49) to figure out which `<Route>` matches the URL.\r\n- In [a `<Select>` component we use in our training workshops](https://github.com/ReactTraining/react-subjects/blob/44614bc3c6c8ca1de813e0bd1e14f86a74a5c0fb/subjects/Select/solution.js#L24-L37), we need to iterate over the `<Option>`s to figure out which label we should show in the select box.\r\n\r\nI wonder if there would be any interest from others in seeing something like this.",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 762,
    "issue_description_text": "I think a `React.Children.find` method would be really useful in situations where you need to iterate over your children and find just one that satisfies a particular condition. I'm running into this situation more and more often in my React code. A few examples:\r\n\r\n- In [React Router](https://reacttraining.com/react-router), the `` component [iterates over its children](https://github.com/ReactTraining/react-router/blob/c46e51bfd61343611ddbc173207952e980b81aec/packages/react-router/modules/Switch.js#L38-L49) to figure out which `` matches the URL.\r\n- In [a `` component we use in our training workshops](https://github.com/ReactTraining/react-subjects/blob/44614bc3c6c8ca1de813e0bd1e14f86a74a5c0fb/subjects/Select/solution.js#L24-L37), we need to iterate over the ``s to figure out which label we should show in the select box.\r\n\r\nI wonder if there would be any interest from others in seeing something like this.",
    "standard_bounties_id": 318,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/8747",
    "created_on": "2018-02-15T17:13:12.146344-07:00",
    "modified_on": "2018-03-14T07:30:16.699414-07:00",
    "title": "fix failed tests on Windows #8737",
    "web3_created": "2018-01-30T01:36:05-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/8747",
    "github_comments": 1,
    "bounty_owner_address": "0x577ec61db11b49286839f502481776f0be01104d",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-01-31T01:36:05-07:00",
    "raw_data": {
      "id": 317,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "fix failed tests on Windows #8737",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "address": "0x577ec61db11b49286839f502481776f0be01104d",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1517326565,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "fix failed tests on Windows #8737",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/8747",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1517412965,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "fix failed tests on Windows #8737",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.731744Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 761,
    "issue_description_text": "",
    "standard_bounties_id": 317,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/10000",
    "created_on": "2018-02-15T17:13:01.483058-07:00",
    "modified_on": "2018-03-14T07:30:17.545404-07:00",
    "title": "Fix to work fiber-debugger",
    "web3_created": "2018-01-29T11:40:40-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/10000",
    "github_comments": 3,
    "bounty_owner_address": "0x577ec61db11b49286839f502481776f0be01104d",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-01-30T11:40:40-07:00",
    "raw_data": {
      "id": 314,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Fix to work fiber-debugger",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "address": "0x577ec61db11b49286839f502481776f0be01104d",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1517276440,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Fix to work fiber-debugger",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "Currently, fiber-debugger doesn't work due to accessing `React.PropTypes` in some libraries.\nThis PR update the libraries to use fixed versions.",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "Currently, fiber-debugger doesn't work due to accessing `React.PropTypes` in some libraries.\nThis PR update the libraries to use fixed versions.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/10000",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1517362840,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Fix to work fiber-debugger",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "Currently, fiber-debugger doesn't work due to accessing `React.PropTypes` in some libraries.\nThis PR update the libraries to use fixed versions.",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.737697Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "Currently, fiber-debugger doesn't work due to accessing `React.PropTypes` in some libraries.\r\nThis PR update the libraries to use fixed versions.",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 758,
    "issue_description_text": "Currently, fiber-debugger doesn't work due to accessing `React.PropTypes` in some libraries.\r\nThis PR update the libraries to use fixed versions.",
    "standard_bounties_id": 314,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/lynndylanhurley/devise_token_auth/990",
    "created_on": "2018-02-15T17:13:00.006847-07:00",
    "modified_on": "2018-03-14T07:30:11.951370-07:00",
    "title": "Multi auth methods per resource",
    "web3_created": "2018-01-29T11:29:11-07:00",
    "value_in_token": "1000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/lynndylanhurley/devise_token_auth/pull/990",
    "github_comments": 16,
    "bounty_owner_address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
    "bounty_owner_email": "aditya.anandmc@gmail.com",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-01-29T11:29:11-07:00",
    "raw_data": {
      "id": 313,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Multi auth methods per resource",
          "issuer": {
            "name": "Aditya Anand",
            "email": "aditya.anandmc@gmail.com",
            "address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
            "githubUsername": ""
          },
          "created": 1517275751,
          "funders": [],
          "metadata": {
            "fullName": "Aditya Anand",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Multi auth methods per resource",
            "issueKeywords": "devise_token_auth, lynndylanhurley, Ruby, HTML, Other",
            "projectLength": "Days",
            "githubUsername": "",
            "experienceLevel": "Intermediate",
            "issueDescription": " This is a continuation of the great work by @seddy done here:\n#453\n\nI've solved conflicts with master and I have only 2 failing tests in the suite.\n\nAfter reviewing the code, I do think adding a provider parameter to the auth hash is a really good idea (option 1 here #453 (comment) ) rather than changing the uid parameter.\n\n@lynndylanhurley @MaicolBen what do you think? ",
            "notificationEmail": "aditya.anandmc@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "devise_token_auth",
            " lynndylanhurley",
            " Ruby",
            " HTML",
            " Other"
          ],
          "description": " This is a continuation of the great work by @seddy done here:\n#453\n\nI've solved conflicts with master and I have only 2 failing tests in the suite.\n\nAfter reviewing the code, I do think adding a provider parameter to the auth hash is a really good idea (option 1 here #453 (comment) ) rather than changing the uid parameter.\n\n@lynndylanhurley @MaicolBen what do you think? ",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/lynndylanhurley/devise_token_auth/pull/990",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x997D35b300bA1775fdB175dF045252e57D6EA5B0",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000,
      "network": "rinkeby",
      "deadline": 1548811751,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000
    },
    "metadata": {
      "fullName": "Aditya Anand",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Multi auth methods per resource",
      "issueKeywords": "devise_token_auth, lynndylanhurley, Ruby, HTML, Other",
      "projectLength": "Days",
      "githubUsername": "",
      "experienceLevel": "Intermediate",
      "issueDescription": " This is a continuation of the great work by @seddy done here:\n#453\n\nI've solved conflicts with master and I have only 2 failing tests in the suite.\n\nAfter reviewing the code, I do think adding a provider parameter to the auth hash is a really good idea (option 1 here #453 (comment) ) rather than changing the uid parameter.\n\n@lynndylanhurley @MaicolBen what do you think? ",
      "notificationEmail": "aditya.anandmc@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 1000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 0.65,
    "status": "open",
    "now": "2018-03-14T14:38:51.743700Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/468037?v=4",
    "value_true": 0.001,
    "issue_description": " This is a continuation of the great work by @seddy done here:\n#453\n\nI've solved conflicts with master and I have only 2 failing tests in the suite.\n\nAfter reviewing the code, I do think adding a provider parameter to the auth hash is a really good idea (option 1 here #453 (comment) ) rather than changing the uid parameter.\n\n@lynndylanhurley @MaicolBen what do you think? ",
    "network": "rinkeby",
    "org_name": "lynndylanhurley",
    "pk": 757,
    "issue_description_text": "This is a continuation of the great work by @seddy done here:\n#453\n\nI've solved conflicts with master and I have only 2 failing tests in the suite.\n\nAfter reviewing the code, I do think adding a provider parameter to the auth hash is a really good idea (option 1 here #453 (comment) ) rather than changing the uid parameter.\n\n@lynndylanhurley @MaicolBen what do you think?",
    "standard_bounties_id": 313,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/thelostone-mc/holo/2",
    "created_on": "2018-02-15T17:12:45.145507-07:00",
    "modified_on": "2018-03-14T07:30:18.202522-07:00",
    "title": "multiple fullfillment",
    "web3_created": "2018-01-29T08:51:56-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/thelostone-mc/holo/issues/2",
    "github_comments": 0,
    "bounty_owner_address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
    "bounty_owner_email": "aditya.anandmc@gmail.com",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-01-29T08:51:56-07:00",
    "raw_data": {
      "id": 308,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "xyz",
          "issuer": {
            "name": "",
            "email": "aditya.anandmc@gmail.com",
            "address": "0x997d35b300ba1775fdb175df045252e57d6ea5b0",
            "githubUsername": ""
          },
          "created": 1517266316,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "",
            "issueTitle": "xyz",
            "issueKeywords": "holo, thelostone-mc",
            "projectLength": "Unknown",
            "githubUsername": "",
            "experienceLevel": "",
            "issueDescription": "",
            "notificationEmail": "aditya.anandmc@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "holo",
            " thelostone-mc"
          ],
          "description": "",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/thelostone-mc/holo/issues/2",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x997D35b300bA1775fdB175dF045252e57D6EA5B0",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1548802316,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "xyz",
      "issueKeywords": "holo, thelostone-mc",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "issueDescription": "",
      "notificationEmail": "aditya.anandmc@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.750077Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/5358146?v=4",
    "value_true": 0.01,
    "issue_description": "",
    "network": "rinkeby",
    "org_name": "thelostone-mc",
    "pk": 752,
    "issue_description_text": "",
    "standard_bounties_id": 308,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/MetaMask/metamask-extension/3127",
    "created_on": "2018-02-20T15:01:32.307714-07:00",
    "modified_on": "2018-03-14T07:30:17.476335-07:00",
    "title": "Seed Phrase Bug Bounty",
    "web3_created": "2018-01-29T06:40:09-07:00",
    "value_in_token": "1000000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Security",
    "project_length": "Unknown",
    "experience_level": "Advanced",
    "github_url": "https://github.com/MetaMask/metamask-extension/issues/3127",
    "github_comments": 27,
    "bounty_owner_address": "0x55e2780588aa5000f464f700d2676fd0a22ee160",
    "bounty_owner_email": "dan@danfinlay.com",
    "bounty_owner_github_username": "danfinlay",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-07-28T06:40:09-07:00",
    "raw_data": {
      "id": 9,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Seed Phrase Bug Bounty",
          "issuer": {
            "name": "Dan Finlay",
            "email": "dan@danfinlay.com",
            "address": "0x55e2780588aa5000f464f700d2676fd0a22ee160",
            "githubUsername": "@danfinlay"
          },
          "created": 1517258409,
          "funders": [],
          "metadata": {
            "fullName": "Dan Finlay",
            "tokenName": "ETH",
            "bountyType": "Security",
            "issueTitle": "Seed Phrase Bug Bounty",
            "issueKeywords": "metamask-extension, MetaMask, JavaScript, CSS, HTML",
            "projectLength": "Unknown",
            "githubUsername": "@danfinlay",
            "experienceLevel": "Advanced",
            "issueDescription": "As part of our commitment to the best security we can offer, the MetaMask team is planning to continuously offer a bug bounty on our seed phrase functionality, we are starting the bounty at 1 ether, but anyone is free to add to the bounty as they like.\n\n[As we have written about before](https://medium.com/metamask/metamask-security-advisory-and-bug-bounty-for-seed-phrase-concern-bbd95ab63210) #2577, and [have awarded a bounty for in the past](https://medium.com/metamask/seed-phrase-issue-bounty-awarded-e1986e811021), sometimes users have reported that the seed phrase they were originally given does not restore their original accounts.\n\nWe have continued to receive rare but concerning accounts of similar experiences: #2904 #3042\n\nThe bounty will be paid to anyone who can demonstrate a condition in MetaMask's code base, either through automated tests or manual reproduction, where MetaMask would show a user a seed phrase on first setup that would not work for later restoring their accounts.\n\nThanks for your interest and participation, we're available to answer any questions about our key management here.",
            "notificationEmail": "dan@danfinlay.com"
          },
          "tokenName": "ETH",
          "categories": [
            "metamask-extension",
            " MetaMask",
            " JavaScript",
            " CSS",
            " HTML"
          ],
          "description": "As part of our commitment to the best security we can offer, the MetaMask team is planning to continuously offer a bug bounty on our seed phrase functionality, we are starting the bounty at 1 ether, but anyone is free to add to the bounty as they like.\n\n[As we have written about before](https://medium.com/metamask/metamask-security-advisory-and-bug-bounty-for-seed-phrase-concern-bbd95ab63210) #2577, and [have awarded a bounty for in the past](https://medium.com/metamask/seed-phrase-issue-bounty-awarded-e1986e811021), sometimes users have reported that the seed phrase they were originally given does not restore their original accounts.\n\nWe have continued to receive rare but concerning accounts of similar experiences: #2904 #3042\n\nThe bounty will be paid to anyone who can demonstrate a condition in MetaMask's code base, either through automated tests or manual reproduction, where MetaMask would show a user a seed phrase on first setup that would not work for later restoring their accounts.\n\nThanks for your interest and participation, we're available to answer any questions about our key management here.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/MetaMask/metamask-extension/issues/3127",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x55e2780588aa5000F464f700D2676fD0a22Ee160",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 1000000000000000000,
      "network": "mainnet",
      "deadline": 1532810409,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 1000000000000000000
    },
    "metadata": {
      "fullName": "Dan Finlay",
      "tokenName": "ETH",
      "bountyType": "Security",
      "issueTitle": "Seed Phrase Bug Bounty",
      "issueKeywords": "metamask-extension, MetaMask, JavaScript, CSS, HTML",
      "projectLength": "Unknown",
      "githubUsername": "@danfinlay",
      "experienceLevel": "Advanced",
      "issueDescription": "As part of our commitment to the best security we can offer, the MetaMask team is planning to continuously offer a bug bounty on our seed phrase functionality, we are starting the bounty at 1 ether, but anyone is free to add to the bounty as they like.\n\n[As we have written about before](https://medium.com/metamask/metamask-security-advisory-and-bug-bounty-for-seed-phrase-concern-bbd95ab63210) #2577, and [have awarded a bounty for in the past](https://medium.com/metamask/seed-phrase-issue-bounty-awarded-e1986e811021), sometimes users have reported that the seed phrase they were originally given does not restore their original accounts.\n\nWe have continued to receive rare but concerning accounts of similar experiences: #2904 #3042\n\nThe bounty will be paid to anyone who can demonstrate a condition in MetaMask's code base, either through automated tests or manual reproduction, where MetaMask would show a user a seed phrase on first setup that would not work for later restoring their accounts.\n\nThanks for your interest and participation, we're available to answer any questions about our key management here.",
      "notificationEmail": "dan@danfinlay.com"
    },
    "current_bounty": true,
    "value_in_eth": 1000000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 652.99,
    "status": "open",
    "now": "2018-03-14T14:38:51.756424Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/11744586?v=4",
    "value_true": 1,
    "issue_description": "As part of our commitment to the best security we can offer, the MetaMask team is planning to continuously offer a bug bounty on our seed phrase functionality, we are starting the bounty at 1 ether, but anyone is free to add to the bounty as they like.\r\n\r\n[As we have written about before](https://medium.com/metamask/metamask-security-advisory-and-bug-bounty-for-seed-phrase-concern-bbd95ab63210) #2577, and [have awarded a bounty for in the past](https://medium.com/metamask/seed-phrase-issue-bounty-awarded-e1986e811021), sometimes users have reported that the seed phrase they were originally given does not restore their original accounts.\r\n\r\nWe have continued to receive rare but concerning accounts of similar experiences: #2904 #3042\r\n\r\nThe bounty will be paid to anyone who can demonstrate a condition in MetaMask's code base, either through automated tests or manual reproduction, where MetaMask would show a user a seed phrase on first setup that would not work for later restoring their accounts.\r\n\r\nThanks for your interest and participation, we're available to answer any questions about our key management here.",
    "network": "mainnet",
    "org_name": "MetaMask",
    "pk": 1323,
    "issue_description_text": "As part of our commitment to the best security we can offer, the MetaMask team is planning to continuously offer a bug bounty on our seed phrase functionality, we are starting the bounty at 1 ether, but anyone is free to add to the bounty as they like.\r\n\r\n[As we have written about before](https://medium.com/metamask/metamask-security-advisory-and-bug-bounty-for-seed-phrase-concern-bbd95ab63210) #2577, and [have awarded a bounty for in the past](https://medium.com/metamask/seed-phrase-issue-bounty-awarded-e1986e811021), sometimes users have reported that the seed phrase they were originally given does not restore their original accounts.\r\n\r\nWe have continued to receive rare but concerning accounts of similar experiences: #2904 #3042\r\n\r\nThe bounty will be paid to anyone who can demonstrate a condition in MetaMask's code base, either through automated tests or manual reproduction, where MetaMask would show a user a seed phrase on first setup that would not work for later restoring their accounts.\r\n\r\nThanks for your interest and participation, we're available to answer any questions about our key management here.",
    "standard_bounties_id": 9,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/gitcoinco/web/234",
    "created_on": "2018-02-15T17:12:33.618292-07:00",
    "modified_on": "2018-03-14T07:30:18.312054-07:00",
    "title": "identity on the platform is kind of a mess",
    "web3_created": "2018-01-25T11:18:54-07:00",
    "value_in_token": "20000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/gitcoinco/web/issues/234",
    "github_comments": 3,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-02-08T11:18:54-07:00",
    "raw_data": {
      "id": 302,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "identity on the platform is kind of a mess",
          "issuer": {
            "name": "",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1516929534,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "identity on the platform is kind of a mess",
            "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "right now identity lives on \n\n* metamask\n* github\n* slack\n* email\n\nitd be great if we could unify these in some meaningful way such that we could track where a user spends most of there time and when/where they drop off",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "web",
            " gitcoinco",
            " JavaScript",
            " Python",
            " HTML",
            " CSS",
            " Shell"
          ],
          "description": "right now identity lives on \n\n* metamask\n* github\n* slack\n* email\n\nitd be great if we could unify these in some meaningful way such that we could track where a user spends most of there time and when/where they drop off",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/gitcoinco/web/issues/234",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 20000000000000000,
      "network": "rinkeby",
      "deadline": 1518139134,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 20000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "identity on the platform is kind of a mess",
      "issueKeywords": "web, gitcoinco, JavaScript, Python, HTML, CSS, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "right now identity lives on \n\n* metamask\n* github\n* slack\n* email\n\nitd be great if we could unify these in some meaningful way such that we could track where a user spends most of there time and when/where they drop off",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 20000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 13.06,
    "status": "open",
    "now": "2018-03-14T14:38:51.762377Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/30044474?v=4",
    "value_true": 0.02,
    "issue_description": "right now identity lives on \r\n\r\n* metamask\r\n* github\r\n* slack\r\n* email\r\n* website\r\n\r\nitd be great if we could unify these in some meaningful way such that we could track where a user spends most of there time and when/where they drop off",
    "network": "rinkeby",
    "org_name": "gitcoinco",
    "pk": 747,
    "issue_description_text": "right now identity lives on \r\n\r\n* metamask\r\n* github\r\n* slack\r\n* email\r\n* website\r\n\r\nitd be great if we could unify these in some meaningful way such that we could track where a user spends most of there time and when/where they drop off",
    "standard_bounties_id": 302,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/owocki/pytrader/44",
    "created_on": "2018-02-15T17:12:16.029504-07:00",
    "modified_on": "2018-03-14T07:30:10.586465-07:00",
    "title": "Updating FAQ",
    "web3_created": "2018-01-23T09:13:05-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/owocki/pytrader/issues/44",
    "github_comments": 1,
    "bounty_owner_address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
    "bounty_owner_email": "ksowocki@gmail.com",
    "bounty_owner_github_username": "owocki",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-02-06T09:13:05-07:00",
    "raw_data": {
      "id": 293,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Investigate Adding social semantics",
          "issuer": {
            "name": "",
            "email": "ksowocki@gmail.com",
            "address": "0x4331b095bc38dc3bce0a269682b5ebaefa252929",
            "githubUsername": "owocki"
          },
          "created": 1516749185,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Bug",
            "issueTitle": "Investigate Adding social semantics",
            "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
            "projectLength": "Days",
            "githubUsername": "owocki",
            "experienceLevel": "Intermediate",
            "issueDescription": "I have not incorporated social semantics in this yet, but I'm sure there's some signal there.  I'd bet reddit, bitcointalk, and twitter would be good places to start",
            "notificationEmail": "ksowocki@gmail.com"
          },
          "tokenName": "ETH",
          "categories": [
            "pytrader",
            " owocki",
            " Python",
            " HTML",
            " Shell"
          ],
          "description": "I have not incorporated social semantics in this yet, but I'm sure there's some signal there.  I'd bet reddit, bitcointalk, and twitter would be good places to start",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/owocki/pytrader/issues/44",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x4331B095bC38Dc3bCE0A269682b5eBAefa252929",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 100000000000000000,
      "network": "rinkeby",
      "deadline": 1517958785,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 100000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Investigate Adding social semantics",
      "issueKeywords": "pytrader, owocki, Python, HTML, Shell",
      "projectLength": "Days",
      "githubUsername": "owocki",
      "experienceLevel": "Intermediate",
      "issueDescription": "I have not incorporated social semantics in this yet, but I'm sure there's some signal there.  I'd bet reddit, bitcointalk, and twitter would be good places to start",
      "notificationEmail": "ksowocki@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.768352Z",
    "avatar_url": "https://avatars2.githubusercontent.com/u/513929?v=4",
    "value_true": 0.1,
    "issue_description": "Re: new questions discussed that should be in faq. -ccf\n",
    "network": "rinkeby",
    "org_name": "owocki",
    "pk": 740,
    "issue_description_text": "Re: new questions discussed that should be in faq. -ccf",
    "standard_bounties_id": 293,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/3795",
    "created_on": "2018-02-15T17:12:08.984981-07:00",
    "modified_on": "2018-03-14T07:30:27.145724-07:00",
    "title": "Batch updates within top-level unmount",
    "web3_created": "2018-01-23T08:40:58-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/3795",
    "github_comments": 1,
    "bounty_owner_address": "",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-01-24T08:40:58-07:00",
    "raw_data": {
      "id": 290,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Batch updates within top-level unmount",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1516747258,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Batch updates within top-level unmount",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "Analogous change to #2935.",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "Analogous change to #2935.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/3795",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1516833658,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Batch updates within top-level unmount",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "Analogous change to #2935.",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.774946Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "Analogous change to #2935.\n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 737,
    "issue_description_text": "Analogous change to #2935.",
    "standard_bounties_id": 290,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/3423",
    "created_on": "2018-02-15T17:12:07.435774-07:00",
    "modified_on": "2018-03-14T07:30:30.645711-07:00",
    "title": "Give `displayName` for all compositeComponent spec functions",
    "web3_created": "2018-01-23T08:39:07-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/3423",
    "github_comments": 6,
    "bounty_owner_address": "",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-01-24T08:39:07-07:00",
    "raw_data": {
      "id": 289,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Give `displayName` for all compositeComponent spec functions",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1516747147,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Give `displayName` for all compositeComponent spec functions",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "(#2052 broke somehow, resubmitting)Previously it was only given to a subset of the functions on the spec.Fixes #3173.@zpao",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "(#2052 broke somehow, resubmitting)Previously it was only given to a subset of the functions on the spec.Fixes #3173.@zpao",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/3423",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1516833547,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Give `displayName` for all compositeComponent spec functions",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "(#2052 broke somehow, resubmitting)Previously it was only given to a subset of the functions on the spec.Fixes #3173.@zpao",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.780854Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "(#2052 broke somehow, resubmitting)\n\nPreviously it was only given to a subset of the functions on the spec.\nFixes #3173.\n@zpao \n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 736,
    "issue_description_text": "(#2052 broke somehow, resubmitting)\n\nPreviously it was only given to a subset of the functions on the spec.\nFixes #3173.\n@zpao",
    "standard_bounties_id": 289,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/8545",
    "created_on": "2018-02-15T17:12:06.216552-07:00",
    "modified_on": "2018-03-14T07:30:25.331541-07:00",
    "title": "[WIP][Fiber] Make Fiber a disjoint union based on the tag",
    "web3_created": "2018-01-23T08:37:05-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/8545",
    "github_comments": 2,
    "bounty_owner_address": "",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-01-24T08:37:05-07:00",
    "raw_data": {
      "id": 288,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "[WIP][Fiber] Make Fiber a disjoint union based on the tag",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1516747025,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "[WIP][Fiber] Make Fiber a disjoint union based on the tag",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "This will help us type things more precisely. I've already found a few issues around refs.\n\nUnfortunately, this currently causes an infinite loop in Flow so we can't land it.\n\nIt's also far from complete. More work is needed.",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "This will help us type things more precisely. I've already found a few issues around refs.\n\nUnfortunately, this currently causes an infinite loop in Flow so we can't land it.\n\nIt's also far from complete. More work is needed.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/8545",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1516833425,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "[WIP][Fiber] Make Fiber a disjoint union based on the tag",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "This will help us type things more precisely. I've already found a few issues around refs.\n\nUnfortunately, this currently causes an infinite loop in Flow so we can't land it.\n\nIt's also far from complete. More work is needed.",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.786562Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "This will help us type things more precisely. I've already found a few issues around refs.\r\n\r\nUnfortunately, this currently causes an infinite loop in Flow so we can't land it.\r\n\r\nIt's also far from complete. More work is needed.",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 735,
    "issue_description_text": "This will help us type things more precisely. I've already found a few issues around refs.\r\n\r\nUnfortunately, this currently causes an infinite loop in Flow so we can't land it.\r\n\r\nIt's also far from complete. More work is needed.",
    "standard_bounties_id": 288,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/7777",
    "created_on": "2018-02-23T05:16:39.662304-07:00",
    "modified_on": "2018-03-14T07:30:24.606651-07:00",
    "title": "modify manual PropType calls warning",
    "web3_created": "2018-01-23T08:19:09-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/7777",
    "github_comments": 1,
    "bounty_owner_address": "",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-01-24T08:19:09-07:00",
    "raw_data": {
      "id": 287,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "modify manual PropType calls warning",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1516745949,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "modify manual PropType calls warning",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "To indicate that code will not work in production with the next major release",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "To indicate that code will not work in production with the next major release",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/7777",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1516832349,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "modify manual PropType calls warning",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "To indicate that code will not work in production with the next major release",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.792616Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "To indicate that code will not work in production with the next major release\n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 1607,
    "issue_description_text": "To indicate that code will not work in production with the next major release",
    "standard_bounties_id": 287,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/issue/facebook/react/6885",
    "created_on": "2018-02-15T17:12:02.891484-07:00",
    "modified_on": "2018-03-14T07:30:31.144586-07:00",
    "title": "Perf.printWasted() doesn't work when component conditionally returns null",
    "web3_created": "2018-01-23T08:13:57-07:00",
    "value_in_token": "10000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Feature",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/facebook/react/issues/6885",
    "github_comments": 11,
    "bounty_owner_address": "",
    "bounty_owner_email": "testing_standard_bounties@abc.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-01-24T08:13:57-07:00",
    "raw_data": {
      "id": 286,
      "data": {
        "meta": {
          "platform": "gitcoin",
          "schemaName": "gitcoinBounty",
          "schemaVersion": "0.1"
        },
        "payload": {
          "title": "Perf.printWasted() doesn't work when component conditionally returns null",
          "issuer": {
            "name": "",
            "email": "testing_standard_bounties@abc.com",
            "githubUsername": "@jasonrhaas"
          },
          "created": 1516745637,
          "funders": [],
          "metadata": {
            "fullName": "",
            "tokenName": "ETH",
            "bountyType": "Feature",
            "issueTitle": "Perf.printWasted() doesn't work when component conditionally returns null",
            "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
            "projectLength": "Days",
            "githubUsername": "@jasonrhaas",
            "experienceLevel": "Beginner",
            "issueDescription": "After upgrading to React 15.0.1 or 15.1.0 I'm not able to use printWasted from Perf tools.React 15.0.1 throws error:`ReactDefaultPerfAnalysis.js:177 Uncaught TypeError: Cannot read property 'forEach' of undefined(â¦)`React 15.1.0`warning.js:44 Warning: There is an internal error in the React performance measurement code. We did not expect componentDidMount timer to stop while no timer is still in progress for another instance. Please report this as a bug in React`I discovered that error is connected with returning `null`. A lot of my components have something like that```render: function() {  if (!this.props.visible) {    return null;  }  // ...}```And when I try to measure one of those components I will get above error. Removing conditions from components fixes problem.",
            "notificationEmail": "testing_standard_bounties@abc.com"
          },
          "tokenName": "ETH",
          "categories": [
            "react",
            " facebook",
            " JavaScript",
            " C++",
            " HTML",
            " TypeScript",
            " CoffeeScript",
            " Shell",
            " Other"
          ],
          "description": "After upgrading to React 15.0.1 or 15.1.0 I'm not able to use printWasted from Perf tools.React 15.0.1 throws error:`ReactDefaultPerfAnalysis.js:177 Uncaught TypeError: Cannot read property 'forEach' of undefined(â¦)`React 15.1.0`warning.js:44 Warning: There is an internal error in the React performance measurement code. We did not expect componentDidMount timer to stop while no timer is still in progress for another instance. Please report this as a bug in React`I discovered that error is connected with returning `null`. A lot of my components have something like that```render: function() {  if (!this.props.visible) {    return null;  }  // ...}```And when I try to measure one of those components I will get above error. Removing conditions from components fixes problem.",
          "tokenAddress": "0x0000000000000000000000000000000000000000",
          "sourceFileHash": "",
          "sourceFileName": "",
          "webReferenceURL": "https://github.com/facebook/react/issues/6885",
          "sourceDirectoryHash": ""
        }
      },
      "token": "0x0000000000000000000000000000000000000000",
      "issuer": "0x577ec61dB11b49286839f502481776F0Be01104D",
      "arbiter": "0x0000000000000000000000000000000000000000",
      "balance": 10000000000000000,
      "network": "rinkeby",
      "deadline": 1516832037,
      "paysTokens": false,
      "bountyStage": 1,
      "fulfillments": [],
      "fulfillmentAmount": 10000000000000000
    },
    "metadata": {
      "fullName": "",
      "tokenName": "ETH",
      "bountyType": "Feature",
      "issueTitle": "Perf.printWasted() doesn't work when component conditionally returns null",
      "issueKeywords": "react, facebook, JavaScript, C++, HTML, TypeScript, CoffeeScript, Shell, Other",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "issueDescription": "After upgrading to React 15.0.1 or 15.1.0 I'm not able to use printWasted from Perf tools.React 15.0.1 throws error:`ReactDefaultPerfAnalysis.js:177 Uncaught TypeError: Cannot read property 'forEach' of undefined(â¦)`React 15.1.0`warning.js:44 Warning: There is an internal error in the React performance measurement code. We did not expect componentDidMount timer to stop while no timer is still in progress for another instance. Please report this as a bug in React`I discovered that error is connected with returning `null`. A lot of my components have something like that```render: function() {  if (!this.props.visible) {    return null;  }  // ...}```And when I try to measure one of those components I will get above error. Removing conditions from components fixes problem.",
      "notificationEmail": "testing_standard_bounties@abc.com"
    },
    "current_bounty": true,
    "value_in_eth": 10000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 6.53,
    "status": "open",
    "now": "2018-03-14T14:38:51.798654Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/69631?v=4",
    "value_true": 0.01,
    "issue_description": "After upgrading to React 15.0.1 or 15.1.0 I'm not able to use printWasted from Perf tools.\n\nReact 15.0.1 throws error:\n`ReactDefaultPerfAnalysis.js:177 Uncaught TypeError: Cannot read property 'forEach' of undefined(…)`\n\nReact 15.1.0\n`warning.js:44 Warning: There is an internal error in the React performance measurement code. We did not expect componentDidMount timer to stop while no timer is still in progress for another instance. Please report this as a bug in React`\n\nI discovered that error is connected with returning `null`. A lot of my components have something like that\n\n```\nrender: function() {\n  if (!this.props.visible) {\n    return null;\n  }\n  // ...\n}\n```\n\nAnd when I try to measure one of those components I will get above error. Removing conditions from components fixes problem.\n",
    "network": "rinkeby",
    "org_name": "facebook",
    "pk": 733,
    "issue_description_text": "After upgrading to React 15.0.1 or 15.1.0 I'm not able to use printWasted from Perf tools.\n\nReact 15.0.1 throws error:\n`ReactDefaultPerfAnalysis.js:177 Uncaught TypeError: Cannot read property 'forEach' of undefined(…)`\n\nReact 15.1.0\n`warning.js:44 Warning: There is an internal error in the React performance measurement code. We did not expect componentDidMount timer to stop while no timer is still in progress for another instance. Please report this as a bug in React`\n\nI discovered that error is connected with returning `null`. A lot of my components have something like that\n\n```\nrender: function() {\n  if (!this.props.visible) {\n    return null;\n  }\n  // ...\n}\n```\n\nAnd when I try to measure one of those components I will get above error. Removing conditions from components fixes problem.",
    "standard_bounties_id": 286,
    "web3_type": "bounties_network",
    "can_submit_after_expiration_date": false
  },
  {
    "url": "/legacy/issue/ethereum/pyrlp/44",
    "created_on": "2018-01-19T10:51:19.161731-07:00",
    "modified_on": "2018-03-14T07:30:23.237114-07:00",
    "title": "RLP fields as proper object attributes.",
    "web3_created": "2018-01-19T10:51:02-07:00",
    "value_in_token": "400000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/ethereum/pyrlp/issues/44",
    "github_comments": 21,
    "bounty_owner_address": "0xdf6c53df56f3992fc44195518a2d8b16306af9ff",
    "bounty_owner_email": "piper@pipermerriam.com",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-01-19T10:51:02-07:00",
    "raw_data": [
      400000000000000000,
      "0x0000000000000000000000000000000000000000",
      "0xdf6c53df56f3992fc44195518a2d8b16306af9ff",
      "0x0000000000000000000000000000000000000000",
      true,
      true,
      "https://github.com/ethereum/pyrlp/issues/44",
      1516384262,
      "{\"issueTitle\":\"RLP fields as proper object attributes.\",\"issueKeywords\":\"pyrlp, ethereum, Python, Makefile\",\"tokenName\":\"ETH\",\"githubUsername\":\"\",\"notificationEmail\":\"piper@pipermerriam.com\",\"experienceLevel\":\"\",\"projectLength\":\"Unknown\",\"bountyType\":\"\"}",
      1547920262,
      ""
    ],
    "metadata": {
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "RLP fields as proper object attributes.",
      "issueKeywords": "pyrlp, ethereum, Python, Makefile",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "notificationEmail": "piper@pipermerriam.com"
    },
    "current_bounty": true,
    "value_in_eth": 400000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 261.2,
    "status": "open",
    "now": "2018-03-14T14:38:51.805883Z",
    "avatar_url": "https://avatars3.githubusercontent.com/u/6250754?v=4",
    "value_true": 0.4,
    "issue_description": "### What is the problem\r\n\r\nRLP objects are not very good at inheritance.\r\n\r\n```python\r\nclass MyBaseObject(rlp.Serializable):\r\n    fields = (\r\n        ('field_a', sedes.Binary),\r\n    )\r\n\r\nclass InheritsFromBase(MyBaseObject):\r\n    fields = (\r\n        ('field_a', sedes.Binary),  # not DRY, repeated from base class\r\n        ('another_field', sedes.Binary),\r\n    )\r\n```\r\n\r\nThere is no good *pythonic* way to extend a base class's fields.\r\n\r\n### How can we fix it.\r\n\r\nMetaclass wizardry!\r\n\r\n![3r7i1c](https://user-images.githubusercontent.com/824194/28537072-e69786ea-7066-11e7-85e6-e740a62ba4ad.jpg)\r\n\r\nMuch the same way that django models perform magical metaclass voodoo, we can do the same.  Implement a metaclass for use that finds all attributes which are valid `sedes` types and does all the fancy stuff that happens within the `__init__` method of `Serializable`.  In general, doing away with `Serializable.fields` seems like a nice cleanup.\r\n\r\nThe example above would look something like:\r\n\r\n```python\r\nclass MyBaseObject(rlp.Serializable):\r\n    field_a = sedes.Binary()\r\n\r\nclass InheritsFromBase(MyBaseObject):\r\n    field_a = sedes.Binary()  # required to maintain explicit field ordering.\r\n    another_field = sedes.Binary()\r\n```\r\n\r\n\r\n### Implementation specifics.\r\n\r\n#### Field class\r\n\r\nWe need a `Field` class which we can use to define RLP fields.  This should be a thin wrapper of sorts around a `rlp.sedes` object.  Ideally, we can have some sort of thin shortcut for converting a `sedes` object to a `Field` object using something like a classmethod `Field.from_sedes(...)`\r\n\r\n##### Metaclass\r\n\r\nUnless an alternate solution is presented, the `rlp.Serializable` class needs to be converted to use a metaclass.  This metaclass will need to introspect the current fields as well as all of the fields for the base class to construct the class.\r\n\r\nI suggest this part be done in two steps.\r\n\r\n- **Step 1**\r\n\r\nThe first step would be to have the metaclass construct an `rlp.Serializable` instance with the proper `fields` property, and to allow the existing internals of `rlp.Serializable` to populate the actual attribute setters and getters.  Under this approach accessing the field properties from the class would likely result in an `AttributeError` as they would not be constructed until class instantiation.\r\n\r\n- **Step 2**\r\n\r\nThe second step is to invert this, and have the metaclass (or the underlying `Field` class) create these attributes at the class level, likely using descriptors (which the `Field` class could implement).  Then, the `fields` property on the class would only be present for backwards compatibility.\r\n\r\n#### Field ordering\r\n\r\nThe field ordering for RLP objects is important.  Luckily, this is easy to do using metaclasses.\r\n\r\nhttps://docs.python.org/3/reference/datamodel.html#metaclass-example\r\n\r\nHowever, this gets complicated in cases of inheritance.  From the discussion on this issue, we've decided that the best solution to fixing this is to required that either **all** fields or **zero** field be overridden when a class is sub classed.\r\n\r\n#### Documentation\r\n\r\nThe documentation will need to be updated to reflect this new API.",
    "network": "mainnet",
    "org_name": "ethereum",
    "pk": 511,
    "issue_description_text": "### What is the problem\r\n\r\nRLP objects are not very good at inheritance.\r\n\r\n```python\r\nclass MyBaseObject(rlp.Serializable):\r\n    fields = (\r\n        ('field_a', sedes.Binary),\r\n    )\r\n\r\nclass InheritsFromBase(MyBaseObject):\r\n    fields = (\r\n        ('field_a', sedes.Binary),  # not DRY, repeated from base class\r\n        ('another_field', sedes.Binary),\r\n    )\r\n```\r\n\r\nThere is no good *pythonic* way to extend a base class's fields.\r\n\r\n### How can we fix it.\r\n\r\nMetaclass wizardry!\r\n\r\n![3r7i1c](https://user-images.githubusercontent.com/824194/28537072-e69786ea-7066-11e7-85e6-e740a62ba4ad.jpg)\r\n\r\nMuch the same way that django models perform magical metaclass voodoo, we can do the same.  Implement a metaclass for use that finds all attributes which are valid `sedes` types and does all the fancy stuff that happens within the `__init__` method of `Serializable`.  In general, doing away with `Serializable.fields` seems like a nice cleanup.\r\n\r\nThe example above would look something like:\r\n\r\n```python\r\nclass MyBaseObject(rlp.Serializable):\r\n    field_a = sedes.Binary()\r\n\r\nclass InheritsFromBase(MyBaseObject):\r\n    field_a = sedes.Binary()  # required to maintain explicit field ordering.\r\n    another_field = sedes.Binary()\r\n```\r\n\r\n\r\n### Implementation specifics.\r\n\r\n#### Field class\r\n\r\nWe need a `Field` class which we can use to define RLP fields.  This should be a thin wrapper of sorts around a `rlp.sedes` object.  Ideally, we can have some sort of thin shortcut for converting a `sedes` object to a `Field` object using something like a classmethod `Field.from_sedes(...)`\r\n\r\n##### Metaclass\r\n\r\nUnless an alternate solution is presented, the `rlp.Serializable` class needs to be converted to use a metaclass.  This metaclass will need to introspect the current fields as well as all of the fields for the base class to construct the class.\r\n\r\nI suggest this part be done in two steps.\r\n\r\n- **Step 1**\r\n\r\nThe first step would be to have the metaclass construct an `rlp.Serializable` instance with the proper `fields` property, and to allow the existing internals of `rlp.Serializable` to populate the actual attribute setters and getters.  Under this approach accessing the field properties from the class would likely result in an `AttributeError` as they would not be constructed until class instantiation.\r\n\r\n- **Step 2**\r\n\r\nThe second step is to invert this, and have the metaclass (or the underlying `Field` class) create these attributes at the class level, likely using descriptors (which the `Field` class could implement).  Then, the `fields` property on the class would only be present for backwards compatibility.\r\n\r\n#### Field ordering\r\n\r\nThe field ordering for RLP objects is important.  Luckily, this is easy to do using metaclasses.\r\n\r\nhttps://docs.python.org/3/reference/datamodel.html#metaclass-example\r\n\r\nHowever, this gets complicated in cases of inheritance.  From the discussion on this issue, we've decided that the best solution to fixing this is to required that either **all** fields or **zero** field be overridden when a class is sub classed.\r\n\r\n#### Documentation\r\n\r\nThe documentation will need to be updated to reflect this new API.",
    "standard_bounties_id": 0,
    "web3_type": "legacy_gitcoin",
    "can_submit_after_expiration_date": true
  },
  {
    "url": "/legacy/issue/trufflesuite/truffle/678",
    "created_on": "2018-01-14T14:04:35.731888-07:00",
    "modified_on": "2018-03-14T07:30:25.594383-07:00",
    "title": "JS test hangs when solidity method is named 'toString' ",
    "web3_created": "2018-01-14T14:01:51-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Days",
    "experience_level": "Beginner",
    "github_url": "https://github.com/trufflesuite/truffle/issues/678",
    "github_comments": 6,
    "bounty_owner_address": "0x577ec61db11b49286839f502481776f0be01104d",
    "bounty_owner_email": "jasonrhaas@gmail.com",
    "bounty_owner_github_username": "jasonrhaas",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2019-01-14T14:01:51-07:00",
    "raw_data": [
      100000000000000000,
      "0x0000000000000000000000000000000000000000",
      "0x577ec61db11b49286839f502481776f0be01104d",
      "0x0000000000000000000000000000000000000000",
      true,
      true,
      "https://github.com/trufflesuite/truffle/issues/678",
      1515963711,
      "{\"issueTitle\":\"JS test hangs when solidity method is named 'toString'\",\"issueKeywords\":\"truffle, trufflesuite, JavaScript\",\"tokenName\":\"ETH\",\"githubUsername\":\"@jasonrhaas\",\"notificationEmail\":\"jasonrhaas@gmail.com\",\"experienceLevel\":\"Beginner\",\"projectLength\":\"Days\",\"bountyType\":\"Bug\"}",
      1547499711,
      ""
    ],
    "metadata": {
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "JS test hangs when solidity method is named 'toString'",
      "issueKeywords": "truffle, trufflesuite, JavaScript",
      "projectLength": "Days",
      "githubUsername": "@jasonrhaas",
      "experienceLevel": "Beginner",
      "notificationEmail": "jasonrhaas@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.813226Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/22205159?v=4",
    "value_true": 0.1,
    "issue_description": "- [X] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nI have this utility function \r\n```\r\nlibrary ByteUtils {\r\n    function toString(bytes32[10] _data) internal pure returns (string) {\r\n        bytes memory allBytes = new bytes(10 * 32);\r\n        uint length;\r\n        for (uint i = 0; i < 10; i++) {\r\n            for (uint j = 0; j < 32; j++) {\r\n                byte char = _data[i][j];\r\n                if (char != 0) {\r\n                    allBytes[length] = char;\r\n                    length++;\r\n                }\r\n            }\r\n        }\r\n\r\n        bytes memory trimmedBytes = new bytes(length + 1);\r\n        for (i = 0; i < length; i++) {\r\n            trimmedBytes[i] = allBytes[i];\r\n        }\r\n\r\n        return string(trimmedBytes);\r\n    }\r\n}\r\n```\r\nthat hangs when trying to test. I created a wrapper mock class to test it since it is `internal`:\r\n```\r\ncontract ByteUtilsMock {\r\n    function toString(bytes32[10] _data) public pure returns (string) {\r\n        return ByteUtils.toString(_data);\r\n    }\r\n}\r\n```\r\n\r\nHere is my test class:\r\n```\r\ncontract('ByteUtils', function(accounts) {\r\n    const blockHeightManager = new BlockHeightManager(web3);\r\n\r\n    let instance;\r\n\r\n    beforeEach(blockHeightManager.snapshot);\r\n    afterEach(blockHeightManager.revert);\r\n\r\n    beforeEach(async function() {\r\n        instance = await ByteUtilsMock.new();\r\n    });\r\n\r\n    describe('toString', async function() {\r\n        it('should return the string', async function() {\r\n            var test = [\"Who will be the next president i\", \"n the 2020 election?\"];\r\n            assert.equal(await instance.toString(test), test.join(''), 'test 2 does not match');\r\n        });\r\n    });\r\n});\r\n```\r\n\r\nIt just stops at this test and nothing happens after that (and eventually times out). Please note I have another contract/tests that uses `ByteUtils` directly as a library and those tests pass with no issues.\r\n\r\n## Steps to Reproduce\r\n\r\nCopy my utility function `toString()` and make a wrapper contract class. Then `truffle test`\r\n\r\n## Expected Behavior\r\n\r\nTest should pass and not hang.\r\n\r\n## Actual Results\r\n\r\nDoing `truffle test` all the other tests pass up to this test then it just hangs and stays there.\r\n\r\n## Environment\r\n\r\n* Operating System: Mac OSX 10.12.6\r\n* Truffle version: 4.0.1\r\n* Ethereum client: cpp-ethereum\r\n* node version: 8.8.0\r\n* npm version: 5.4.2\r\n",
    "network": "ropsten",
    "org_name": "trufflesuite",
    "pk": 497,
    "issue_description_text": "- [X] I've asked for help in the [Truffle Gitter](http://gitter.im/Consensys/truffle) before filing this issue.\r\n\r\n---------------------------\r\n\r\n## Issue\r\n\r\nI have this utility function \r\n```\r\nlibrary ByteUtils {\r\n    function toString(bytes32[10] _data) internal pure returns (string) {\r\n        bytes memory allBytes = new bytes(10 * 32);\r\n        uint length;\r\n        for (uint i = 0; i < 10; i++) {\r\n            for (uint j = 0; j < 32; j++) {\r\n                byte char = _data[i][j];\r\n                if (char != 0) {\r\n                    allBytes[length] = char;\r\n                    length++;\r\n                }\r\n            }\r\n        }\r\n\r\n        bytes memory trimmedBytes = new bytes(length + 1);\r\n        for (i = 0; i < length; i++) {\r\n            trimmedBytes[i] = allBytes[i];\r\n        }\r\n\r\n        return string(trimmedBytes);\r\n    }\r\n}\r\n```\r\nthat hangs when trying to test. I created a wrapper mock class to test it since it is `internal`:\r\n```\r\ncontract ByteUtilsMock {\r\n    function toString(bytes32[10] _data) public pure returns (string) {\r\n        return ByteUtils.toString(_data);\r\n    }\r\n}\r\n```\r\n\r\nHere is my test class:\r\n```\r\ncontract('ByteUtils', function(accounts) {\r\n    const blockHeightManager = new BlockHeightManager(web3);\r\n\r\n    let instance;\r\n\r\n    beforeEach(blockHeightManager.snapshot);\r\n    afterEach(blockHeightManager.revert);\r\n\r\n    beforeEach(async function() {\r\n        instance = await ByteUtilsMock.new();\r\n    });\r\n\r\n    describe('toString', async function() {\r\n        it('should return the string', async function() {\r\n            var test = [\"Who will be the next president i\", \"n the 2020 election?\"];\r\n            assert.equal(await instance.toString(test), test.join(''), 'test 2 does not match');\r\n        });\r\n    });\r\n});\r\n```\r\n\r\nIt just stops at this test and nothing happens after that (and eventually times out). Please note I have another contract/tests that uses `ByteUtils` directly as a library and those tests pass with no issues.\r\n\r\n## Steps to Reproduce\r\n\r\nCopy my utility function `toString()` and make a wrapper contract class. Then `truffle test`\r\n\r\n## Expected Behavior\r\n\r\nTest should pass and not hang.\r\n\r\n## Actual Results\r\n\r\nDoing `truffle test` all the other tests pass up to this test then it just hangs and stays there.\r\n\r\n## Environment\r\n\r\n* Operating System: Mac OSX 10.12.6\r\n* Truffle version: 4.0.1\r\n* Ethereum client: cpp-ethereum\r\n* node version: 8.8.0\r\n* npm version: 5.4.2",
    "standard_bounties_id": 0,
    "web3_type": "legacy_gitcoin",
    "can_submit_after_expiration_date": true
  },
  {
    "url": "/legacy/issue/lynndylanhurley/devise_token_auth/976",
    "created_on": "2017-12-21T19:41:48.392214-07:00",
    "modified_on": "2018-03-14T07:30:16.062194-07:00",
    "title": "Fix Warnings in Test Suite Output",
    "web3_created": "2017-12-21T19:41:34-07:00",
    "value_in_token": "80000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "",
    "project_length": "Unknown",
    "experience_level": "",
    "github_url": "https://github.com/lynndylanhurley/devise_token_auth/issues/976",
    "github_comments": 19,
    "bounty_owner_address": "0x5b5c589f412d5db7e6038f078e59d84bcd8285b1",
    "bounty_owner_email": "zachfeldman@gmail.com",
    "bounty_owner_github_username": "",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-12-21T19:41:34-07:00",
    "raw_data": [
      80000000000000000,
      "0x0000000000000000000000000000000000000000",
      "0x5b5c589f412d5db7e6038f078e59d84bcd8285b1",
      "0x0000000000000000000000000000000000000000",
      true,
      true,
      "https://github.com/lynndylanhurley/devise_token_auth/issues/976",
      1513910494,
      "{\"issueTitle\":\"Fix Warnings in Test Suite Output\",\"issueKeywords\":\"devise_token_auth, lynndylanhurley, Ruby, HTML, Other\",\"tokenName\":\"ETH\",\"githubUsername\":\"\",\"notificationEmail\":\"zachfeldman@gmail.com\",\"experienceLevel\":\"\",\"projectLength\":\"Unknown\",\"bountyType\":\"\"}",
      1545446494,
      ""
    ],
    "metadata": {
      "tokenName": "ETH",
      "bountyType": "",
      "issueTitle": "Fix Warnings in Test Suite Output",
      "issueKeywords": "devise_token_auth, lynndylanhurley, Ruby, HTML, Other",
      "projectLength": "Unknown",
      "githubUsername": "",
      "experienceLevel": "",
      "notificationEmail": "zachfeldman@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 80000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 52.24,
    "status": "open",
    "now": "2018-03-14T14:38:51.820535Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/468037?v=4",
    "value_true": 0.08,
    "issue_description": "While running the test suite (using Ruby 2.2.5 and 2.4.0) there are hundreds/thousands of lines worth of warnings output.\r\n\r\nSome examples:\r\n\r\n> devise_token_auth/test/controllers/devise_token_auth/omniauth_callbacks_controller_test.rb:21:in `get_parsed_data_json': warning: URI.une\r\nscape is obsolete                                                                                                                                             \r\n\r\n> devise_token_auth/app/controllers/devise_token_auth/concerns/set_user_by_token.rb:81: warning: instance variable @resource not initialize\r\nd\r\n\r\n> devise_token_auth/app/controllers/devise_token_auth/concerns/set_user_by_token.rb:81: warning: instance variable @resource not initialize\r\nd\r\n\r\n> bundler/gems/omniauth-facebook-19634473820d/lib/omniauth/strategies/facebook.rb:79: warning: instance variable @authorization\r\n_code_from_signed_request_in_cookie not initialized\r\n\r\nThey distract from the task at hand and, where possible, should be addressed.\r\n\r\n![screenshot 2017-10-12 11 18 40](https://user-images.githubusercontent.com/289949/31503981-20afbbce-af3f-11e7-9fb4-b706ef50796b.png)\r\n",
    "network": "mainnet",
    "org_name": "lynndylanhurley",
    "pk": 359,
    "issue_description_text": "While running the test suite (using Ruby 2.2.5 and 2.4.0) there are hundreds/thousands of lines worth of warnings output.\r\n\r\nSome examples:\r\n\r\n> devise_token_auth/test/controllers/devise_token_auth/omniauth_callbacks_controller_test.rb:21:in `get_parsed_data_json': warning: URI.une\r\nscape is obsolete                                                                                                                                             \r\n\r\n> devise_token_auth/app/controllers/devise_token_auth/concerns/set_user_by_token.rb:81: warning: instance variable @resource not initialize\r\nd\r\n\r\n> devise_token_auth/app/controllers/devise_token_auth/concerns/set_user_by_token.rb:81: warning: instance variable @resource not initialize\r\nd\r\n\r\n> bundler/gems/omniauth-facebook-19634473820d/lib/omniauth/strategies/facebook.rb:79: warning: instance variable @authorization\r\n_code_from_signed_request_in_cookie not initialized\r\n\r\nThey distract from the task at hand and, where possible, should be addressed.\r\n\r\n![screenshot 2017-10-12 11 18 40](https://user-images.githubusercontent.com/289949/31503981-20afbbce-af3f-11e7-9fb4-b706ef50796b.png)",
    "standard_bounties_id": 0,
    "web3_type": "legacy_gitcoin",
    "can_submit_after_expiration_date": true
  },
  {
    "url": "/legacy/issue/TimVanMourik/Porcupine/19",
    "created_on": "2017-12-27T15:38:30.199579-07:00",
    "modified_on": "2018-03-14T07:30:22.061255-07:00",
    "title": "Rendering problem for nodes on the rest of the view",
    "web3_created": "2017-12-12T09:26:20-07:00",
    "value_in_token": "90000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Bug",
    "project_length": "Hours",
    "experience_level": "Intermediate",
    "github_url": "https://github.com/TimVanMourik/Porcupine/issues/19",
    "github_comments": 18,
    "bounty_owner_address": "0xd6ee63a1fbe6ff77213b97c5299c6ecbe2c9d818",
    "bounty_owner_email": "timvanmourik@gmail.com",
    "bounty_owner_github_username": "TimVanMourik",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2018-03-12T09:26:20-07:00",
    "raw_data": [
      90000000000000000,
      "0x0000000000000000000000000000000000000000",
      "0xd6ee63a1fbe6ff77213b97c5299c6ecbe2c9d818",
      "0x0000000000000000000000000000000000000000",
      true,
      true,
      "https://github.com/TimVanMourik/Porcupine/issues/19",
      1513095980,
      "{\"issueTitle\":\"Rendering problem for nodes on the rest of the view\",\"issueKeywords\":\"Porcupine, TimVanMourik, C++\",\"tokenName\":\"ETH\",\"githubUsername\":\"TimVanMourik\",\"notificationEmail\":\"timvanmourik@gmail.com\",\"experienceLevel\":\"Intermediate\",\"projectLength\":\"Hours\",\"bountyType\":\"Bug\"}",
      1520871980,
      ""
    ],
    "metadata": {
      "tokenName": "ETH",
      "bountyType": "Bug",
      "issueTitle": "Rendering problem for nodes on the rest of the view",
      "issueKeywords": "Porcupine, TimVanMourik, C++",
      "projectLength": "Hours",
      "githubUsername": "TimVanMourik",
      "experienceLevel": "Intermediate",
      "notificationEmail": "timvanmourik@gmail.com"
    },
    "current_bounty": true,
    "value_in_eth": 90000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 58.77,
    "status": "open",
    "now": "2018-03-14T14:38:51.827725Z",
    "avatar_url": "https://avatars1.githubusercontent.com/u/6152205?v=4",
    "value_true": 0.09,
    "issue_description": "There is some rendering problem (on all platforms) with Nodes (QGraphicsPathItem) being rendered on the rest of the view. Not sure why. This bug is rather persistent and despite extensive searches on Google and StackOverflow, I have not been able to find a solution, or anyone with the same problem.\r\n\r\n![screenshot1](https://user-images.githubusercontent.com/6152205/32770325-89d6cc24-c91f-11e7-83df-7587fb9f6441.jpg)\r\nThe problem presents itself when you’ve got more than +-6 nodes in the editor. The rendering issues are traces from nodes that are moved around where the rest of the interface isn’t updated.\r\n\r\nThe stack of QObjects/QWidgets is as follows:\r\n- MainWindow, inherits QMainWindow\r\n  -QSplitter\r\n    - QSplitter\r\n        - QSplitter\r\n          - QTabWidget\r\n            - QStackedWidget\r\n              -MyEditor, inherits QGraphicsView\r\n                - QGraphicsScene\r\n\r\nAny clue or fix would be appreciated. The solution may just be a single setting in the QGraphicsScene that I don't know about, or a bug in the Qt code, or anything in between.",
    "network": "mainnet",
    "org_name": "TimVanMourik",
    "pk": 403,
    "issue_description_text": "There is some rendering problem (on all platforms) with Nodes (QGraphicsPathItem) being rendered on the rest of the view. Not sure why. This bug is rather persistent and despite extensive searches on Google and StackOverflow, I have not been able to find a solution, or anyone with the same problem.\r\n\r\n![screenshot1](https://user-images.githubusercontent.com/6152205/32770325-89d6cc24-c91f-11e7-83df-7587fb9f6441.jpg)\r\nThe problem presents itself when you’ve got more than +-6 nodes in the editor. The rendering issues are traces from nodes that are moved around where the rest of the interface isn’t updated.\r\n\r\nThe stack of QObjects/QWidgets is as follows:\r\n- MainWindow, inherits QMainWindow\r\n  -QSplitter\r\n    - QSplitter\r\n        - QSplitter\r\n          - QTabWidget\r\n            - QStackedWidget\r\n              -MyEditor, inherits QGraphicsView\r\n                - QGraphicsScene\r\n\r\nAny clue or fix would be appreciated. The solution may just be a single setting in the QGraphicsScene that I don't know about, or a bug in the Qt code, or anything in between.",
    "standard_bounties_id": 0,
    "web3_type": "legacy_gitcoin",
    "can_submit_after_expiration_date": true
  },
  {
    "url": "/legacy/issue/nbanmp2/testrepo/3",
    "created_on": "2018-02-01T14:15:54.139746-07:00",
    "modified_on": "2018-03-14T07:30:26.341727-07:00",
    "title": "Issue 3",
    "web3_created": "2017-11-03T15:29:05-07:00",
    "value_in_token": "100000000000000000.00",
    "token_name": "ETH",
    "token_address": "0x0000000000000000000000000000000000000000",
    "bounty_type": "Other",
    "project_length": "Hours",
    "experience_level": "Beginner",
    "github_url": "https://github.com/nbanmp2/testrepo/issues/3",
    "github_comments": 1,
    "bounty_owner_address": "0xb00b816aa770b3c73c60468b4281c980074f5a33",
    "bounty_owner_email": "",
    "bounty_owner_github_username": "nbanmp2",
    "fulfillments": [],
    "is_open": true,
    "expires_date": "2017-11-04T15:29:05-07:00",
    "raw_data": [
      100000000000000000,
      "0x0000000000000000000000000000000000000000",
      "0xb00b816aa770b3c73c60468b4281c980074f5a33",
      "0xbefc6a2a877165018a8e8a9800f4f557fdaecb41",
      true,
      true,
      "https://github.com/nbanmp2/testrepo/issues/3",
      1509748145,
      "{\"issueTitle\":\"Issue 3 Pwn Me\",\"issueKeywords\":\"\",\"tokenName\":\"ETH\",\"githubUsername\":\"nbanmp2\",\"notificationEmail\":\"\",\"experienceLevel\":\"Beginner\",\"projectLength\":\"Hours\",\"bountyType\":\"Other\"}",
      1509834545,
      "{\"notificationEmail\":\"\",\"githubUsername\":\"\"}"
    ],
    "metadata": {
      "tokenName": "ETH",
      "bountyType": "Other",
      "issueTitle": "Issue 3 Pwn Me",
      "issueKeywords": "",
      "projectLength": "Hours",
      "githubUsername": "nbanmp2",
      "experienceLevel": "Beginner",
      "notificationEmail": ""
    },
    "current_bounty": true,
    "value_in_eth": 100000000000000000,
    "token_value_in_usdt": 652.99,
    "value_in_usdt": 65.3,
    "status": "open",
    "now": "2018-03-14T14:38:51.835163Z",
    "avatar_url": "https://avatars0.githubusercontent.com/u/33360855?v=4",
    "value_true": 0.1,
    "issue_description": "",
    "network": "ropsten",
    "org_name": "nbanmp2",
    "pk": 594,
    "issue_description_text": "",
    "standard_bounties_id": 0,
    "web3_type": "legacy_gitcoin",
    "can_submit_after_expiration_date": true
  }
]
